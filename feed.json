{
    "version": "https://jsonfeed.org/version/1",
    "title": "Keep Coding",
    "subtitle": "",
    "icon": "https://www.liangmeng.xyz/images/favicon.ico",
    "description": "花落微凉梦清幽",
    "home_page_url": "https://www.liangmeng.xyz",
    "items": [
        {
            "id": "https://www.liangmeng.xyz/ArtificialIntelligence/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9A%84%E7%9F%A5%E8%AF%86%E8%A1%A8%E7%A4%BA/",
            "url": "https://www.liangmeng.xyz/ArtificialIntelligence/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9A%84%E7%9F%A5%E8%AF%86%E8%A1%A8%E7%A4%BA/",
            "title": "第二章-人工智能的知识表示",
            "date_published": "2022-05-05T09:53:00.000Z",
            "content_html": "<h1 id=\"知识表示\"><a class=\"anchor\" href=\"#知识表示\">#</a> 知识表示</h1>\n<h2 id=\"知识与知识表示\"><a class=\"anchor\" href=\"#知识与知识表示\">#</a> 知识与知识表示</h2>\n<ul>\n<li><strong>知识是人类智能的基础（符号主义学派）</strong>。</li>\n<li>智能活动过程主要是一个<strong>获取知识并运用知识的过程</strong>。</li>\n<li>人工智能问题的求解也是以知识为基础的，<strong>知识的获取、知识的表示和运用知识进行推理</strong>是人工智能学科研究的 3 个主要问题。</li>\n</ul>\n<h3 id=\"知识的含义和结构\"><a class=\"anchor\" href=\"#知识的含义和结构\">#</a> 知识的含义和结构</h3>\n<ul>\n<li>知识是经过裁剪、塑造、解释和转换的信息。</li>\n<li>知识是由特定领域的描述、关系和过程组成的。</li>\n<li>知识 = 事实 + 信念 + 启发式。</li>\n</ul>\n<h3 id=\"知识的金字塔结构\"><a class=\"anchor\" href=\"#知识的金字塔结构\">#</a> 知识的金字塔结构</h3>\n<p><img data-src=\"https://img-blog.csdnimg.cn/c1f0b5309c264f2182cebc482f6850d0.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>数据：是记录信息的符号，是信息的载体和表示。</li>\n<li>信息：是对数据的解释，是数据在具体的场合下具体的含义。</li>\n<li>知识：一般把有关信息关联在一起所形成的信息结构称为知识。</li>\n<li>元知识：指使用知识的知识。</li>\n</ul>\n<p><img data-src=\"https://img-blog.csdnimg.cn/5a66337774844381baf9f02783c97e77.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"知识的种类\"><a class=\"anchor\" href=\"#知识的种类\">#</a> 知识的种类</h3>\n<p><img data-src=\"https://img-blog.csdnimg.cn/d71f5674cad24abb9b3218deef22bd7a.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"知识的特性\"><a class=\"anchor\" href=\"#知识的特性\">#</a> 知识的特性</h3>\n<ul>\n<li>相对正确性：<strong>不同规则下有不同的正确性</strong>。</li>\n<li>不确定性：<strong>不只有 “真” 和 “假” 两种状态</strong>。引起原因：随机性、模糊性、不完全性和经验性。</li>\n<li>可表示性。</li>\n<li>可利用性。</li>\n</ul>\n<h3 id=\"知识表示-2\"><a class=\"anchor\" href=\"#知识表示-2\">#</a> 知识表示</h3>\n<ul>\n<li>\n<p>知识表示的含义：</p>\n<ul>\n<li>\n<p>面向计算机的知识描述或表达的形式或方法。</p>\n</li>\n<li>\n<p>知识表示的过程就是<strong>把知识编码成某种数据结构的过程</strong>。</p>\n</li>\n</ul>\n</li>\n<li>\n<p>知识表示的要求：</p>\n<ul>\n<li>表示能力：正确、有效地表示。</li>\n<li>可利用性：有利于进行有效的推理。</li>\n<li>可组织性：按某种方式组织成某种结构。</li>\n<li>可维护性：便于增、删、改等操作。</li>\n<li>可实现性：便于在计算机上实现。</li>\n<li>自然性：符合人们的日常习惯。</li>\n<li>可理解性：易读、易懂、易获取等。</li>\n</ul>\n</li>\n<li>\n<p><strong>知识表示的方法</strong>：</p>\n<ul>\n<li><strong>谓词逻辑表示</strong></li>\n<li><strong>产生式表示</strong></li>\n<li><strong>语义网络表示</strong></li>\n<li><strong>框架表示</strong></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"一阶谓词逻辑表示法\"><a class=\"anchor\" href=\"#一阶谓词逻辑表示法\">#</a> 一阶谓词逻辑表示法</h2>\n<p>以<strong>数理逻辑</strong>为基础，是目前为止能够表达人类思维活动规律的一种<strong>最精确</strong>的形式语言。</p>\n<h3 id=\"基本概念\"><a class=\"anchor\" href=\"#基本概念\">#</a> 基本概念</h3>\n<ul>\n<li>\n<p>个体域：个体变元的变化范围称为个体域（论述域），包揽一切事物的集合称为全总个体域。</p>\n</li>\n<li>\n<p>谓词、函数、量词：</p>\n<p>n 元谓词：P (x<sub>1</sub>, x<sub>2</sub>, ......, x<sub>n</sub>)，<strong>大写字母</strong>。</p>\n<p>n 元函数：f (x<sub>1</sub>, x<sub>2</sub>, ......, x<sub>n</sub>)，<strong>小写字母</strong>。</p>\n<p>全称量词：∀x，所有。</p>\n<p>存在量词：∃x，存在。</p>\n</li>\n<li>\n<p>常用的谓词联接符号：<strong>按优先级从高到低排列</strong>。</p>\n<ul>\n<li>否定：﹁，非。</li>\n<li>合取：∧，与。</li>\n<li>析取：∨，或。</li>\n<li>蕴含：→，如果... 那么。</li>\n<li>等价：↔，当且仅当。</li>\n</ul>\n</li>\n<li>\n<p>辖域：紧接于量词之后被量词作用的谓词公式称为该量词的辖域，可用括号明示。</p>\n</li>\n<li>\n<p>指导变元、约束变元、自由变元：</p>\n<p>指导变元：量词后面的变元称为量词的指导变元。</p>\n<p>约束变元：在一个量词的辖域中的与该量词的指导变元相同的变元称为约束变元。</p>\n<p>自由变元：其它的变元称为自由变元。</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi mathvariant=\"normal\">∀</mi><mi>x</mi><mo stretchy=\"false\">(</mo><mi>P</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo>→</mo><mi>Q</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">∀x(P(x, y) → Q(x))\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∀</span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">Q</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>其中，第一个 x 为指导变元，第二个 x 和第三个 x 为约束变元，y 为自由变元。</p>\n</li>\n<li>\n<p>改名规则：使一个谓词公式中的<strong>每一个变元仅以一种形式出现</strong>。</p>\n<ul>\n<li>换名规则：将某量词辖域中出现的某个<strong>约束变元</strong>以及对应的<strong>指导变元</strong>更改为本辖域中没有出现过的个体变元，等价性不变。</li>\n<li>代替规则：将某量词辖域中出现的某个<strong>自由变元</strong>的所有出现用本辖域中未曾出现过的某个个体变元符号代替，等价性不变。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"谓词公式表示知识的步骤\"><a class=\"anchor\" href=\"#谓词公式表示知识的步骤\">#</a> 谓词公式表示知识的步骤</h3>\n<ul>\n<li>定义谓词及个体，确定每个谓词及个体的确切含义。</li>\n<li>根据所要表达的事物或概念，为每个谓词中的变元赋以特定的值。</li>\n<li>根据所要表达的知识的语义，用适当的联接符号将各个谓词联接起来，形成谓词公式。</li>\n</ul>\n<h3 id=\"经典例子一机器人移盒子问题\"><a class=\"anchor\" href=\"#经典例子一机器人移盒子问题\">#</a> 经典例子一：机器人移盒子问题</h3>\n<ul>\n<li>问题描述：设在一房间里，c 处有一个机器人，a 和 b 处各有一张桌子，分别称为 a 桌和 b 桌，a 桌上有一个盒子，如图所示。要求机器人从 c 处出发把盒子从 a 桌上拿到 b 桌上，再回到 c 处。</li>\n</ul>\n<p><img data-src=\"https://img-blog.csdnimg.cn/b8570bdbad244208af9c5fdfb47a0235.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>\n<p>问题求解：过程如下。</p>\n<ul>\n<li>\n<p><strong>描述状态的谓词</strong>：</p>\n<p>TABLE (x)：x 是桌子。</p>\n<p>EMPTY (y)：y 手中是空的。</p>\n<p>AT (y, z)：y 在 z 处。</p>\n<p>HOLDS (y, w)：y 拿着 w。</p>\n<p>ON (w, x)：w 在 x 的桌面上。</p>\n</li>\n<li box>\n<p><strong>变元的个体域</strong>：</p>\n<p a, b>x 的个体域是</p>\n<p robot>y 的个体域是</p>\n<p a, b, c>z 的个体域是</p>\n<p>w 的个体域是</p>\n</li>\n<li>\n<p><strong>问题的初始状态</strong>：</p>\n<p>AT(robot, c)</p>\n<p>EMPTY(robot)</p>\n<p>ON(box, a)</p>\n<p>TABLE(a)</p>\n<p>TABLE(b)</p>\n</li>\n<li>\n<p><strong>问题的目标状态</strong>：</p>\n<p>AT(robot, c)</p>\n<p>EMPTY(robot)</p>\n<p>ON(box, b)</p>\n<p>TABLE(a)</p>\n<p>TABLE(b)</p>\n</li>\n<li>\n<p><strong>描述操作的谓词</strong>：</p>\n<p>条件部分：用来说明执行该动作必须具备的先决条件，用谓词公式来表示。</p>\n<p>动作部分：给出了该操作对问题状态的改变情况，通过在执行该操作前的问题状态中删除和增加相应的谓词来实现。</p>\n<p>Goto (x, y)：从 x 处走到 y 处。</p>\n<p>Pickup (x)：在 x 处拿起盒子。</p>\n<p>Setdown (x)：在 x 处放下盒子。</p>\n</li>\n<li>\n<p><strong>各操作的条件和动作</strong>：</p>\n<ul>\n<li>\n<p>Goto(x, y)</p>\n<p>条件：AT (robot, x)</p>\n<p>动作：删除 AT (robot, x)，添加 AT (robot, y)</p>\n</li>\n<li>\n<p>Pickup(x):</p>\n<p>条件：AT (robot, x)，TABLE (x)，ON (box, x)，EMPTY (robot)</p>\n<p>动作：删除 EMPTY (robot)，ON (box, x)，添加 HOLDS (robot, box)</p>\n</li>\n<li>\n<p>Setdown(x):</p>\n<p>条件：AT (robot, x)，TABLE (x)，HOLDS (robot, box)</p>\n<p>动作：删除 HOLDS (robot, box)，添加 EMPTY (robot)，ON (box, x)</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>各操作的执行方法</strong>：</p>\n<p>机器人在执行一个操作前，都要检查该动作的先决条件是否可以满足，如果满足，就执行相应的操作，否则再检查下一个操作。</p>\n</li>\n<li>\n<p><strong>机器人的完整行动过程</strong>：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">状态 1</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">状态 2</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">状态 3</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">AT(robot, c)</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">AT(robot, a)</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">AT(robot, a)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">EMPTY(robot)</td>\n<td style=\"text-align:center\">Goto(c, a)</td>\n<td style=\"text-align:center\">EMPTY(robot)</td>\n<td style=\"text-align:center\">Pickup(a)</td>\n<td style=\"text-align:center\">HOLDS(robot, box)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ON(box, a)</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">ON(box, a)</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">TABLE(a)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">TABLE(a)</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">TABLE(a)</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">TABLE(b)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">TABLE(b)</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">TABLE(b)</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">状态 4</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">状态 5</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">AT(robot, b)</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">AT(robot, b)</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Goto(a, b)</td>\n<td style=\"text-align:center\">HOLDS(robot, box)</td>\n<td style=\"text-align:center\">Setdown(b)</td>\n<td style=\"text-align:center\">EMPTY(robot)</td>\n<td style=\"text-align:center\">Goto(b, c)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">TABLE(a)</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">ON(box, b)</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">TABLE(b)</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">TABLE(a)</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">TABLE(b)</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">状态 6</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">AT(robot, c)</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">EMPTY(robot)</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ON(box, b)</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">TABLE(a)</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">TABLE(b)</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n</tbody>\n</table>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"经典例子二猴子摘香蕉问题\"><a class=\"anchor\" href=\"#经典例子二猴子摘香蕉问题\">#</a> 经典例子二：猴子摘香蕉问题</h3>\n<ul>\n<li>\n<p>问题描述：设房间里有一只猴子，位于 a 处。在 c 处上方的天花板有一串香蕉，猴子想吃，但摘不到。房间的 b 处还有一个箱子，如果猴子站到箱子上，就可以摸着天花板。请用谓词逻辑知识表示描述上述问题。</p>\n</li>\n<li>\n<p>问题求解：过程如下。</p>\n<ul>\n<li>\n<p>描述状态的谓词：</p>\n<p>AT (x, y)：表示 x 在 y 处。</p>\n<p>ONBOX：表示猴子在箱子上面。</p>\n<p>HB：猴子摘到香蕉。</p>\n</li>\n<li a, b, c>\n<p>变元的个体域：</p>\n<p monkey, box, banana>x 的个体域是</p>\n<p>y 的个体域是</p>\n</li>\n<li>\n<p>问题的初始状态：</p>\n<p>AT(monkey, a)</p>\n<p>AT(box, b)</p>\n<p>﹁ONBOX</p>\n<p>﹁HB</p>\n</li>\n<li>\n<p>问题的目标状态:</p>\n<p>AT(monkey, c)</p>\n<p>AT(box, c)</p>\n<p>ONBOX</p>\n<p>HB</p>\n</li>\n<li>\n<p>描述操作的谓词:</p>\n<p>GOTO (u, v)：表示猴子从 u 处走到 v 处。</p>\n<p>PUSHBOX (v, w)：表示猴子推着箱子从 v 处移到 w 处。</p>\n<p>CLIMBBOX：表示猴子爬上箱子。</p>\n<p>GRASP：表示猴子摘取香蕉。</p>\n</li>\n<li>\n<p>各操作的条件和动作：</p>\n<p>GOTO(u, v)</p>\n<p>条件：﹁ONBOX，AT (monkey, u)</p>\n<p>动作：删除 AT (monkey, u)，添加 AT (monkey, v)</p>\n<p>PUSHBOX(v, w)</p>\n<p>条件：﹁ONBOX，AT (monkey, v)，AT (box, v)</p>\n<p>动作：AT (monkey, v)，AT (box, w)</p>\n<p>CLIMBBOX：</p>\n<p>条件：﹁ONBOX，AT (monkey, w)，AT (box, w)</p>\n<p>动作：删除﹁ONBOX，添加 ONBOX</p>\n<p>GRASP：</p>\n<p>条件：ONBOX，AT (box, c)，﹁HB</p>\n<p>动作：删除﹁HB，添加 HB</p>\n</li>\n<li>\n<p>猴子的完整行动过程</p>\n<p>与前述机器人移盒子问题类似，略。</p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"谓词逻辑表达法的特点\"><a class=\"anchor\" href=\"#谓词逻辑表达法的特点\">#</a> 谓词逻辑表达法的特点</h3>\n<ul>\n<li><strong>优点：严密性、自然性、通用性、易于实现</strong>。</li>\n<li><strong>缺点：知识表示能力差、知识库管理困难、组合爆炸、效率低</strong>。</li>\n</ul>\n<h2 id=\"产生式表示法\"><a class=\"anchor\" href=\"#产生式表示法\">#</a> 产生式表示法</h2>\n<h3 id=\"知识的产生式表示方法\"><a class=\"anchor\" href=\"#知识的产生式表示方法\">#</a> 知识的产生式表示方法</h3>\n<ul>\n<li>\n<p>事实的概念：事实是断言一个语言变量的值或断言多个语言变量之间关系的陈述句。</p>\n</li>\n<li>\n<p>事实的表示：</p>\n<ul>\n<li><strong>确定性知识：（对象，属性，值）或（关系，对象 1，对象 2）</strong></li>\n<li><strong>非确定性知识：（对象，属性，值，可信度因子）</strong></li>\n</ul>\n</li>\n<li>\n<p>规则的表示：<strong>P→Q 或者 IF P THEN Q</strong></p>\n</li>\n</ul>\n<p><img data-src=\"https://img-blog.csdnimg.cn/8f53bff7ac434d8b9d7684915c35d44b.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"产生式系统的基本结构\"><a class=\"anchor\" href=\"#产生式系统的基本结构\">#</a> 产生式系统的基本结构</h3>\n<ul>\n<li><strong>综合数据库 DB</strong>\n<ul>\n<li>存放推理过程的各种当前信息。</li>\n<li>作为推理过程选择可用规则的依据。</li>\n</ul>\n</li>\n<li><strong>规则库 RB，也称为知识库 KB</strong>\n<ul>\n<li>存放推理所需要的所有规则（知识集），是推理的根本。</li>\n<li>要求知识的完整性、一致性、准确性、灵活性和可组织性。</li>\n</ul>\n</li>\n<li><strong>控制系统，也称为推理机</strong>\n<ul>\n<li>控制整个产生式系统的运行，决定问题求解过程的推理线路。</li>\n<li>主要任务：选择匹配、冲突消解、执行操作、终止推理、路径解释。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"产生式系统的运行过程\"><a class=\"anchor\" href=\"#产生式系统的运行过程\">#</a> 产生式系统的运行过程</h3>\n<p><img data-src=\"https://img-blog.csdnimg.cn/e729310fe47441c39904984afb12e36a.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"经典例子一猴子摘香蕉问题\"><a class=\"anchor\" href=\"#经典例子一猴子摘香蕉问题\">#</a> 经典例子一：猴子摘香蕉问题</h3>\n<ul>\n<li>\n<p><strong>综合数据库：（M, B, Box, On, H）</strong></p>\n<p>M：猴子的位置</p>\n<p>B：香蕉的位置</p>\n<p>Box：箱子的位置</p>\n<p>On=0：猴子在地板上</p>\n<p>On=1：猴子在箱子上</p>\n<p>H=0：猴子没有抓到香蕉</p>\n<p>H=1：猴子抓到了香蕉</p>\n</li>\n<li>\n<p>初始状态：（a, c, b, 0, 0）</p>\n</li>\n<li>\n<p>结束状态：（c, c, c, 1, 1）</p>\n</li>\n<li>\n<p><strong>规则集</strong></p>\n<p>r1: IF (x, y, z, 0, 0) THEN (w, y, z, 0, 0)（猴子移动）</p>\n<p>r2: IF (x, y, x, 0, 0) THEN (z, y, z, 0, 0)（猴子推箱子）</p>\n<p>r3: IF (x, y, x, 0, 0) THEN (x, y, x, 1, 0)（猴子爬箱子）</p>\n<p>r4: IF (x, y, x, 1, 0) THEN (x, y, x, 0, 0)（猴子下箱子）</p>\n<p>r5: IF (x, x, x, 1, 0) THEN (x, x, x, 1, 1)（猴子抓香蕉）</p>\n<p>其中，x, y, z, w 为变量。</p>\n</li>\n<li>\n<p><strong>行动过程</strong></p>\n<p>r1: IF(a, c, b, 0, 0)THEN(b, c, b, 0, 0)</p>\n<p>r2: IF(b, c, b, 0, 0)THEN(c, c, c, 0, 0)</p>\n<p><s>r3: IF(b, c, b, 0, 0)THEN(b, c, b, 1, 0)</s></p>\n<p>r3: IF(c, c, c, 0, 0)THEN(c, c, c, 1, 0)</p>\n<p><s>r4: IF(b, c, b, 1, 0)THEN(b, c, b, 0, 0)</s></p>\n<p>r5: IF(c, c, c, 1, 0)THEN(c, c, c, 1, 1)</p>\n<p>在已知事实下，r1→r2→r3→r5 可得到香蕉。</p>\n</li>\n</ul>\n<h3 id=\"经典问题二传道士与野人问题\"><a class=\"anchor\" href=\"#经典问题二传道士与野人问题\">#</a> 经典问题二：传道士与野人问题</h3>\n<p>N 个传教士，N 个野人，一条船，可同时乘坐 k 个人；要求在任何时刻，在河的两岸，传教士和野人同时存在时，传教士的人数不能少于野人的人数。问：如何过河（以 N=3，k=2 为例）？</p>\n<ul>\n<li 0，1>\n<p>综合数据库：（m，c，b），其中 0≤m≤3，0≤c≤3，b∈</p>\n</li>\n<li>\n<p>初始状态：（3，3，1）</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>L</th>\n<th>R</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>m</td>\n<td>3</td>\n<td>0</td>\n</tr>\n<tr>\n<td>c</td>\n<td>3</td>\n<td>0</td>\n</tr>\n<tr>\n<td>b</td>\n<td>1</td>\n<td>0</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>目标状态：（0，0，0）</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>L</th>\n<th>R</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>m</td>\n<td>0</td>\n<td>3</td>\n</tr>\n<tr>\n<td>c</td>\n<td>0</td>\n<td>3</td>\n</tr>\n<tr>\n<td>b</td>\n<td>0</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>规则集</p>\n<p>r1: IF(m, c, 1)THEN(m-1, c, 0)</p>\n<p>r2: IF(m, c, 1)THEN(m, c-1, 0)</p>\n<p>r3: IF(m, c, 1)THEN(m-1, c-1, 0)</p>\n<p>r4: IF(m, c, 1)THEN(m-2, c, 0)</p>\n<p>r5: IF(m, c, 1)THEN(m, c-2, 0)</p>\n<p>r6: IF(m, c, 0)THEN(m+1, c, 1)</p>\n<p>r7: IF(m, c, 0)THEN(m, c+1, 1)</p>\n<p>r8: IF(m, c, 0)THEN(m+1, c+1, 1)</p>\n<p>r9: IF(m, c, 0)THEN(m+2, c, 1)</p>\n<p>r10: IF(m, c, 0)THEN(m, c+2, 1)</p>\n</li>\n<li>\n<p>行动过程</p>\n<p>r5: IF (3, 3, 1) THEN (3, 1, 0)（船运 2 个 c 到右岸）</p>\n<p>r7: IF (3, 1, 0) THEN (3, 2, 1)（船运 1 个 c 到左岸）</p>\n<p>r5: IF (3, 2, 1) THEN (3, 0, 0)（船运 2 个 c 到右岸）</p>\n<p>r7: IF (3, 0, 0) THEN (3, 1, 1)（船运 1 个 c 到左岸）</p>\n<p>r4: IF (3, 1, 1) THEN (1, 1, 0)（船运 2 个 m 到右岸）</p>\n<p>r8: IF (1, 1, 0) THEN (2, 2, 1)（船运 1 个 m 和一个 c 到左岸）</p>\n<p>r4: IF (2, 2, 1) THEN (0, 2, 0)（船运 2 个 m 到右岸）</p>\n<p>r7: IF (0, 2, 0) THEN (0, 3, 1)（船运 1 个 c 到左岸）</p>\n<p>r5: IF (0, 3, 1) THEN (0, 1, 0)（船运 2 个 c 到右岸）</p>\n<p>r7: IF (0, 1, 0) THEN (0, 2, 1)（船运 1 个 c 到左岸）</p>\n<p>r5: IF (0, 2, 1) THEN (0, 0, 0)（船运 2 个 c 到右岸）</p>\n<p>在已知事实下，r5→r7→r5→r7→r4→r8→r4→r7→r5→r7→r5 可顺利过河。</p>\n</li>\n</ul>\n<h3 id=\"产生式系统的特点\"><a class=\"anchor\" href=\"#产生式系统的特点\">#</a> 产生式系统的特点</h3>\n<ul>\n<li><strong>优点：自然性、模块性、有效性。</strong></li>\n<li><strong>缺点：效率较低、不便于表示结构性知识。</strong></li>\n</ul>\n<h2 id=\"语义网络表示法\"><a class=\"anchor\" href=\"#语义网络表示法\">#</a> 语义网络表示法</h2>\n<h3 id=\"语义网络的基本表示\"><a class=\"anchor\" href=\"#语义网络的基本表示\">#</a> 语义网络的基本表示</h3>\n<ul>\n<li>节点：概念、事物、对象、行为、状态等。</li>\n<li>有向弧：节点间的联系或关系。</li>\n<li>语义基元：（节点 1，弧，节点 2）</li>\n<li><strong>基本网元</strong>：<br>\n<img data-src=\"https://img-blog.csdnimg.cn/1fa172fd05a4460999eadf24a48564da.png\" alt=\"在这里插入图片描述\"></li>\n</ul>\n<h3 id=\"基本语义关系\"><a class=\"anchor\" href=\"#基本语义关系\">#</a> 基本语义关系</h3>\n<ul>\n<li><strong>实例关系</strong>：ISA（is-a，具体与抽象，“是一个”）</li>\n<li><strong>分类关系</strong>：AKO（a-kind-of，子类与超类，“是一种”）</li>\n<li><strong>成员关系</strong>：A-Member-of（个体与集体，“是一员”）<br>\n<strong>以上三种关系都具有属性的继承性，处于具体层的节点可以继承所有抽象层节点的所有属性。</strong></li>\n<li><strong>聚类关系</strong>：Part-of（部分与整体，“是一部分”）<br>\n<strong>聚类关系一般不具有属性的继承性</strong>。如手不一定具有人的各种属性。</li>\n<li><strong>属性关系</strong>：Have、Can</li>\n<li><strong>时间关系</strong>：After、Before</li>\n<li><strong>位置关系</strong>：Located-on、Located-under、Located-at、Located-inside、Located-outside</li>\n<li><strong>相近关系</strong>：Similar-to、Near-to</li>\n</ul>\n<h3 id=\"事物和概念的表示\"><a class=\"anchor\" href=\"#事物和概念的表示\">#</a> 事物和概念的表示</h3>\n<p>一个语义基元 / 基本网元可以表示一个一元关系或一个二元关系，当要表示多元关系时，需要把它转化为一个或多个二元关系的组合。<br>\n例：用语义网络表示<br>\n①李新的笔记本的牌子是 “联想”、颜色黑灰。<br>\n②王红的笔记本的牌子是 “方正”、颜色粉红。<br>\n<img data-src=\"https://img-blog.csdnimg.cn/2172b81b17f2449bbeb6f94980ec2c83.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"情况和动作的表示\"><a class=\"anchor\" href=\"#情况和动作的表示\">#</a> 情况和动作的表示</h3>\n<p>例：用语义网络表示 “小燕子这只燕子从春天到秋天占有一个巢”<br>\n<strong> 如果不增加情况节点，会导致语义无法表示或不完整。</strong><br>\n<img data-src=\"https://img-blog.csdnimg.cn/29b49cc18e0c45f2a76f73a1d9399d52.png\" alt=\"在这里插入图片描述\"><br>\n增加情况节点后的网络如下。<br>\n<img data-src=\"https://img-blog.csdnimg.cn/cc560fe3719b4da0802cae1c2a262769.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"基于语义网络的推理\"><a class=\"anchor\" href=\"#基于语义网络的推理\">#</a> 基于语义网络的推理</h3>\n<ul>\n<li><strong>继承</strong>：把对事物的描述从抽象节点传递到实例节点。通过继承可以得到所需节点的一些属性值，它通常是<strong>沿着 ISA、AKO 等继承弧</strong>进行的。</li>\n<li><strong>匹配</strong>：指在知识库的语义网络中<strong>寻找与待求解问题相符</strong>的语义网络模式。</li>\n</ul>\n<h3 id=\"语义网络表示法的特点\"><a class=\"anchor\" href=\"#语义网络表示法的特点\">#</a> 语义网络表示法的特点</h3>\n<ul>\n<li><strong>优点：结构性、联想性、自索引性</strong>。</li>\n<li><strong>缺点：非严格性、复杂性</strong>。</li>\n</ul>\n<h2 id=\"框架表示法\"><a class=\"anchor\" href=\"#框架表示法\">#</a> 框架表示法</h2>\n<h3 id=\"基本概念-2\"><a class=\"anchor\" href=\"#基本概念-2\">#</a> 基本概念</h3>\n<ul>\n<li>框架：一种通用数据结构，知识的基本单元。</li>\n<li>实例框架：框架的一个具体实例。</li>\n<li>框架系统：把一组有关的框架连结起来。</li>\n<li>框架系统推理：由框架之间的协调来完成。</li>\n</ul>\n<h3 id=\"基本组成\"><a class=\"anchor\" href=\"#基本组成\">#</a> 基本组成</h3>\n<ul>\n<li><strong>框架名</strong></li>\n<li><strong>槽名（对象的一种属性）</strong></li>\n<li><strong>侧面名（属性的一个方面）</strong></li>\n<li><strong>值</strong><br>\n<strong>一个框架由若干个槽组成，一个槽由若干个侧面组成</strong><br>\n<img data-src=\"https://img-blog.csdnimg.cn/573dd6a8e386465fbf774e6ac68a7dd2.png\" alt=\"在这里插入图片描述\"></li>\n<li><strong>说明信息</strong>\n<ul>\n<li><strong>单位 (Unit)：槽值或侧面值的书写格式。</strong></li>\n<li><strong>范围 (Area)：槽值或侧面值的指定范围。</strong></li>\n<li><strong>默认值 (Default)：缺省时的默认值。</strong></li>\n<li><strong>框架 (&lt;Frame&gt;)：以另一个框架作为槽值或侧面值。</strong></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"框架系统\"><a class=\"anchor\" href=\"#框架系统\">#</a> 框架系统</h3>\n<ul>\n<li><strong>横向联系</strong><br>\n以另一个框架作为槽值或侧面值时框架之间的联系。</li>\n<li><strong>纵向联系</strong><br>\n以预定义槽名 AKO 和 ISA 来继承时框架之间的联系。</li>\n<li><strong>特性继承</strong>\n<ul>\n<li>通过 ISA、AKO 链来实现。</li>\n<li>当需要查询某一事物的某个属性，且描述该事物的框架未提供其属性值时，系统就沿着 ISA 和 AKO 链追溯到具有相同槽的类或超类框架。</li>\n<li>如果该槽提供有 Default 值，就继承该默认值作为查询结果返回。</li>\n<li>如果该槽提供有 If-Needed 侧面供继承，则执行 If-Needed 操作，去产生一个值作为查询结果。</li>\n<li>如果对某个事物的某一属性进行了赋值或修改操作，则系统会自动沿着 ISA 和 AKO 链追溯到具有相应的类或超类框架，去执行 If-Added 操作来进行后继处理。</li>\n<li><strong>If-Needed 和 If-Added 的区别</strong>：前者是在系统试图查询某个事物框架中未记载的属性值时激活，并根据查询需求，被动地即时产生所需要的属性值；后者是在系统对某个框架的属性作赋值或修改工作后激活，通过进行配套的后继处理来消除可能存在的不一致。</li>\n</ul>\n</li>\n<li>实例<br>\n一个直接描述硕士生有关情况的框架<br>\n<img data-src=\"https://img-blog.csdnimg.cn/1faa0a8a2af14f66b9731949072d6b2b.png\" alt=\"在这里插入图片描述\"><br>\n通过继承关系描述硕士生有关情况的框架。<br>\n<img data-src=\"https://img-blog.csdnimg.cn/f9a81424268f46ac9f0d797a282a5430.png\" alt=\"在这里插入图片描述\"><br>\n<img data-src=\"https://img-blog.csdnimg.cn/0f40ab93a7374bacbbeb4c17091bdd9f.png\" alt=\"在这里插入图片描述\"></li>\n</ul>\n<h3 id=\"问题求解过程\"><a class=\"anchor\" href=\"#问题求解过程\">#</a> 问题求解过程</h3>\n<p><strong>匹配</strong>：对相应槽的槽名和槽值逐个进行比较。<br>\n<strong>填槽</strong>：利用继承关系来实现。</p>\n<h3 id=\"框架表示法的特点\"><a class=\"anchor\" href=\"#框架表示法的特点\">#</a> 框架表示法的特点</h3>\n<ul>\n<li><strong>优点：结构性、深层性、继承性、自然性</strong></li>\n<li><strong>缺点：缺乏框架的形式理论、缺乏过程性知识表示、清晰性难以保证。</strong></li>\n</ul>\n<p><img data-src=\"https://img-blog.csdnimg.cn/699baef601044c6ebf39e18b5208a5e1.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n",
            "tags": [
                "人工智能",
                "第二章-人工智能的知识表示",
                "人工智能",
                "笔记"
            ]
        },
        {
            "id": "https://www.liangmeng.xyz/LeetCode/%E9%9A%BE%E5%BA%A6%E7%AE%80%E5%8D%95/9-%E5%9B%9E%E6%96%87%E6%95%B0/",
            "url": "https://www.liangmeng.xyz/LeetCode/%E9%9A%BE%E5%BA%A6%E7%AE%80%E5%8D%95/9-%E5%9B%9E%E6%96%87%E6%95%B0/",
            "title": "9-回文数",
            "date_published": "2022-04-27T09:23:00.000Z",
            "content_html": "<h1 id=\"题目描述\"><a class=\"anchor\" href=\"#题目描述\">#</a> 题目描述</h1>\n<p>给你一个整数 x ，如果 x 是一个回文整数，返回 true ；否则，返回 false 。<br>\n回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。<br>\n例如，121 是回文，而 123 不是。</p>\n<p>示例 1：<br>\n输入：x = 121<br>\n 输出：true</p>\n<p>示例 2：<br>\n输入：x = -121<br>\n 输出：false<br>\n 解释：从左向右读，为 -121 。 从右向左读，为 121- 。因此它不是一个回文数。</p>\n<p>示例 3：<br>\n输入：x = 10<br>\n 输出：false<br>\n 解释：从右向左读，为 01 。因此它不是一个回文数。</p>\n<p>提示：<br>\n-2<sup>31</sup> &lt;= x &lt;= 2<sup>31</sup> - 1</p>\n<h1 id=\"解题思路\"><a class=\"anchor\" href=\"#解题思路\">#</a> 解题思路</h1>\n<p>回文数常见的解法就是从中间往两边比较，只要有一位不对称，那么这个数就不是回文数。<br>\n所以，需要判断数字的位数是奇数还是偶数。如果是奇数位，需要去掉中间的那个数，使其变成偶数位。<br>\n接下来，我们考虑一下特殊情况：<br>\n1. 负数不可能是回文数，因为负号不可能对称。<br>\n2. 长度大于 1 且个位为 0 的数不可能是回文数，因为末位 0 不可能对称。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">isPalindrome</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">if</span> x <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token keyword\">or</span> <span class=\"token punctuation\">(</span>x<span class=\"token operator\">%</span><span class=\"token number\">10</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token keyword\">and</span> x <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        x <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        n <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">if</span> n <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">elif</span> n<span class=\"token operator\">%</span><span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">//</span><span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token comment\"># 反转一半数字</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            rexr <span class=\"token operator\">=</span> x<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>mid<span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">if</span> rexr <span class=\"token operator\">==</span> x<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>mid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            midr <span class=\"token operator\">=</span> n<span class=\"token operator\">//</span><span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token comment\"># 反转一半数字</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            rexr <span class=\"token operator\">=</span> x<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>midr<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">if</span> rexr <span class=\"token operator\">==</span> x<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>midr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span> </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr></table></figure><h1 id=\"官方题解\"><a class=\"anchor\" href=\"#官方题解\">#</a> 官方题解</h1>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">bool</span> <span class=\"token function\">isPalindrome</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\">// 特殊情况：</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">// 如上所述，当 x &lt; 0 时，x 不是回文数。</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">// 同样地，如果数字的最后一位是 0，为了使该数字为回文，</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">// 则其第一位数字也应该是 0</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token comment\">// 只有 0 满足这一属性</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">%</span> <span class=\"token number\">10</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> x <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">int</span> revertedNumber <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">></span> revertedNumber<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            revertedNumber <span class=\"token operator\">=</span> revertedNumber <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">+</span> x <span class=\"token operator\">%</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            x <span class=\"token operator\">/=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token comment\">// 当数字长度为奇数时，我们可以通过 revertedNumber/10 去除处于中位的数字。</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token comment\">// 例如，当输入为 12321 时，在 while 循环的末尾我们可以得到 x = 12，revertedNumber = 123，</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token comment\">// 由于处于中位的数字不影响回文（它总是与自己相等），所以我们可以简单地将其去除。</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">return</span> x <span class=\"token operator\">==</span> revertedNumber <span class=\"token operator\">||</span> x <span class=\"token operator\">==</span> revertedNumber <span class=\"token operator\">/</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://img-blog.csdnimg.cn/7a41645c08594f39a5e09dde3a983d25.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n",
            "tags": [
                "力扣题库",
                "难度简单",
                "9-回文数"
            ]
        },
        {
            "id": "https://www.liangmeng.xyz/LeetCode/%E9%9A%BE%E5%BA%A6%E4%B8%AD%E7%AD%89/6-Z%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2/",
            "url": "https://www.liangmeng.xyz/LeetCode/%E9%9A%BE%E5%BA%A6%E4%B8%AD%E7%AD%89/6-Z%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2/",
            "title": "6-Z字形变换",
            "date_published": "2022-04-27T05:55:00.000Z",
            "content_html": "<h1 id=\"题目描述\"><a class=\"anchor\" href=\"#题目描述\">#</a> 题目描述</h1>\n<p>将一个给定字符串 s 根据给定的行数 numRows ，以从上往下、从左到右进行 Z 字形排列。</p>\n<p>比如输入字符串为 &quot;PAYPALISHIRING&quot; 行数为 3 时，排列如下：</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>P</td>\n<td></td>\n<td>A</td>\n<td></td>\n<td>H</td>\n<td></td>\n<td>N</td>\n</tr>\n<tr>\n<td>A</td>\n<td>P</td>\n<td>L</td>\n<td>S</td>\n<td>I</td>\n<td>I</td>\n<td>G</td>\n</tr>\n<tr>\n<td>Y</td>\n<td></td>\n<td>I</td>\n<td></td>\n<td>R</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>之后，你的输出需要从左往右逐行读取，产生出一个新的字符串，比如：&quot;PAHNAPLSIIGYIR&quot;。<br>\n示例 1：</p>\n<p>输入：s = &quot;PAYPALISHIRING&quot;, numRows = 3<br>\n 输出：&quot;PAHNAPLSIIGYIR&quot;</p>\n<p>示例 2：<br>\n输入：s = &quot;PAYPALISHIRING&quot;, numRows = 4<br>\n 输出：&quot;PINALSIGYAHRPI&quot;</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>P</td>\n<td></td>\n<td></td>\n<td>I</td>\n<td></td>\n<td></td>\n<td>N</td>\n</tr>\n<tr>\n<td>A</td>\n<td></td>\n<td>L</td>\n<td>S</td>\n<td></td>\n<td>I</td>\n<td>G</td>\n</tr>\n<tr>\n<td>Y</td>\n<td>A</td>\n<td></td>\n<td>H</td>\n<td>R</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>P</td>\n<td></td>\n<td></td>\n<td>I</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>示例 3：</p>\n<p>输入：s = &quot;A&quot;, numRows = 1<br>\n 输出：&quot;A&quot;</p>\n<p>提示：<br>\n1 &lt;= s.length &lt;= 1000<br>\ns 由英文字母（小写和大写）、',' 和 '.' 组成<br>\n 1 &lt;= numRows &lt;= 1000</p>\n<h1 id=\"解题思路\"><a class=\"anchor\" href=\"#解题思路\">#</a> 解题思路</h1>\n<h2 id=\"思路一过程模拟\"><a class=\"anchor\" href=\"#思路一过程模拟\">#</a> 思路一：过程模拟</h2>\n<p>定义 numRows 个数组，用于存放每一行的所有字符，然后直接模拟排列过程，最后先按行连接再按列连接即可，空间复杂度较高。<br>\n易错点在于，当 numRows == 1 或 numRows &gt;= s.length 时，需要特殊处理，直接返回 s。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">convert</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> numRows<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">if</span> numRows <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token keyword\">or</span> numRows <span class=\"token operator\">>=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token keyword\">return</span> s</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token builtin\">all</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>numRows<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        row<span class=\"token punctuation\">,</span> dire <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token builtin\">all</span><span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">if</span> row <span class=\"token operator\">==</span> numRows<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                dire <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">elif</span> row <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                dire <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            row <span class=\"token operator\">+=</span> dire</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        res <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>numRows<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            res <span class=\"token operator\">+=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">return</span> res</pre></td></tr></table></figure><h2 id=\"思路二寻找排列规律\"><a class=\"anchor\" href=\"#思路二寻找排列规律\">#</a> 思路二：寻找排列规律</h2>\n<p>同一行的数字存在一定的规律，如果找到这个规律，那么只需要一次遍历就能够完成题解。<br>\n先来看看示例 1，数字代表字符串的下标。</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td></td>\n<td>4</td>\n<td></td>\n<td>8</td>\n<td></td>\n<td>12</td>\n</tr>\n<tr>\n<td>1</td>\n<td>3</td>\n<td>5</td>\n<td>7</td>\n<td>9</td>\n<td>11</td>\n<td>13</td>\n</tr>\n<tr>\n<td>2</td>\n<td></td>\n<td>6</td>\n<td></td>\n<td>10</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>第一行：0，4，8，12（依次增 4）<br>\n第二行：1，3，5，7，9，11，13（先增 2 再增 2，2+2=4）<br>\n第三行：2，6，10（依次增 4）</p>\n<p>再来看看示例 2，同上。</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td></td>\n<td></td>\n<td>6</td>\n<td></td>\n<td></td>\n<td>12</td>\n</tr>\n<tr>\n<td>1</td>\n<td></td>\n<td>5</td>\n<td>7</td>\n<td></td>\n<td>11</td>\n<td>13</td>\n</tr>\n<tr>\n<td>2</td>\n<td>4</td>\n<td></td>\n<td>8</td>\n<td>10</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>3</td>\n<td></td>\n<td></td>\n<td>9</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>第一行：0，6，12（依次增 6）<br>\n第二行：1，5，7，11，13（先增 4 再增 2，4+2=6）<br>\n第三行：2，4，8，10（先增 2，再增 4，2+4=6）<br>\n第四行：3，9（依次增 6）</p>\n<p>可以推得，排列的周期为 T = 2*numRows-2。<br>\n对于第零行，每个周期内只产生一个字符，且字符的坐标 x 满足 x% T=0。<br>\n对于第 i 行（0&lt;i&lt;numRows-1），每个周期产生两个字符，且第一个字符的坐标 x 满足 x% T=i，第二个字符的坐标 y 满足 x% T=T-i。<br>\n对于最后一行，每个周期产生一个字符，且字符的坐标 x 满足 x% T=numRows-1。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> numRows <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token keyword\">or</span> numRows <span class=\"token operator\">>=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            <span class=\"token keyword\">return</span> s</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        T <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span>numRows<span class=\"token operator\">-</span><span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        ans <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"\"</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>numRows<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            mod <span class=\"token operator\">=</span> x<span class=\"token operator\">%</span>T</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;=</span> mod <span class=\"token operator\">&lt;=</span> numRows<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                ans<span class=\"token punctuation\">[</span>mod<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> s<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                ans<span class=\"token punctuation\">[</span>T<span class=\"token operator\">-</span>mod<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> s<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"官方题解\"><a class=\"anchor\" href=\"#官方题解\">#</a> 官方题解</h1>\n<h1 id=\"思路一\"><a class=\"anchor\" href=\"#思路一\">#</a> 思路一</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">convert</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> numRows<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        n<span class=\"token punctuation\">,</span> r <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> numRows</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">if</span> r <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token keyword\">or</span> r <span class=\"token operator\">>=</span> n<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">return</span> s</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        t <span class=\"token operator\">=</span> r <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        c <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">+</span> t <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> t <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        mat <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">''</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> c <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> ch <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            mat<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> ch</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">if</span> i <span class=\"token operator\">%</span> t <span class=\"token operator\">&lt;</span> r <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                x <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>  <span class=\"token comment\"># 向下移动</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                x <span class=\"token operator\">-=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                y <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>  <span class=\"token comment\"># 向右上移动</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>ch <span class=\"token keyword\">for</span> row <span class=\"token keyword\">in</span> mat <span class=\"token keyword\">for</span> ch <span class=\"token keyword\">in</span> row <span class=\"token keyword\">if</span> ch<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># 时间复杂度：O (r⋅n)，其中 r=numRows，n 为字符串 s 的长度。时间主要消耗在矩阵的创建和遍历上，矩阵的行数为 r，列数可以视为 O (n)。</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># 空间复杂度：O (r⋅n)。矩阵需要 O (r⋅n) 的空间。</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 矩阵压缩</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">convert</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> numRows<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        n<span class=\"token punctuation\">,</span> r <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> numRows</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">if</span> r <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token keyword\">or</span> r <span class=\"token operator\">>=</span> n<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token keyword\">return</span> s</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        t <span class=\"token operator\">=</span> r <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        c <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">+</span> t <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> t <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        mat <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">''</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> c <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> ch <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            mat<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> ch</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">if</span> i <span class=\"token operator\">%</span> t <span class=\"token operator\">&lt;</span> r <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                x <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>  <span class=\"token comment\"># 向下移动</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                x <span class=\"token operator\">-=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                y <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>  <span class=\"token comment\"># 向右上移动</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>ch <span class=\"token keyword\">for</span> row <span class=\"token keyword\">in</span> mat <span class=\"token keyword\">for</span> ch <span class=\"token keyword\">in</span> row <span class=\"token keyword\">if</span> ch<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># 时间复杂度：O (n)。</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># 空间复杂度：O (n)。压缩后的矩阵需要 O (n) 的空间。</span></pre></td></tr></table></figure><h1 id=\"思路二\"><a class=\"anchor\" href=\"#思路二\">#</a> 思路二</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">convert</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> numRows<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        n<span class=\"token punctuation\">,</span> r <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> numRows</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">if</span> r <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token keyword\">or</span> r <span class=\"token operator\">>=</span> n<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">return</span> s</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        t <span class=\"token operator\">=</span> r <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        ans <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 枚举矩阵的行</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> n <span class=\"token operator\">-</span> i<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 枚举每个周期的起始下标</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                ans<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 当前周期的第一个字符</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;</span> i <span class=\"token operator\">&lt;</span> r <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token keyword\">and</span> j <span class=\"token operator\">+</span> t <span class=\"token operator\">-</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                    ans<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> t <span class=\"token operator\">-</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 当前周期的第二个字符</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># 时间复杂度：O (n)，其中 n 为字符串 s 的长度。s 中的每个字符仅会被访问一次，因此时间复杂度为 O (n)。</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># 空间复杂度：O (1)。返回值不计入空间复杂度。</span></pre></td></tr></table></figure><p><img data-src=\"https://img-blog.csdnimg.cn/5eb2eccf3f81436dac42128918d9cb42.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n",
            "tags": [
                "力扣题库",
                "难度中等",
                "Z字形变换"
            ]
        },
        {
            "id": "https://www.liangmeng.xyz/ComputerNetwork/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/",
            "url": "https://www.liangmeng.xyz/ComputerNetwork/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/",
            "title": "计算机网络的基本概念",
            "date_published": "2022-04-26T13:47:00.000Z",
            "content_html": "",
            "tags": [
                "计算机网络",
                "计算机网络的基本概念",
                "笔记",
                "计算机网络"
            ]
        },
        {
            "id": "https://www.liangmeng.xyz/WrittenExamination/Tencent_20220424/",
            "url": "https://www.liangmeng.xyz/WrittenExamination/Tencent_20220424/",
            "title": "腾讯20220424",
            "date_published": "2022-04-25T18:00:00.000Z",
            "content_html": "<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>笔试一共五道编程题，满分是 100 分，时间是两个小时，可以跳题，使用的平台是牛客网，允许跳出界面使用本地 IDE。</p>\n<h1 id=\"题目一构建数字\"><a class=\"anchor\" href=\"#题目一构建数字\">#</a> 题目一：构建数字</h1>\n<p>给定 n 个长度均为 m 的数字字符串，从上往下构建成 m 个新的数，去掉前置 0 后按照从小到大的顺序输出。</p>\n<p>输入：</p>\n<p>第一行包括一个整数 n。</p>\n<p>接下来 n 行每行包括一个长度为 m 的数字字符串。</p>\n<p>输出：</p>\n<p>第一行包括新构建的数按从小到大排列。</p>\n<p>输入示例：</p>\n<p>3</p>\n<p>0121</p>\n<p>1502</p>\n<p>2138</p>\n<p>输出示例：</p>\n<p>12 128 151 203</p>\n<h2 id=\"思路\"><a class=\"anchor\" href=\"#思路\">#</a> 思路</h2>\n<p>该题比较简单，可以直接暴力求解，需要注意的是前置 0 的处理。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>nums <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    num <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    nums<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>ans <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    a <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        a <span class=\"token operator\">+=</span> nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\"># int () 函数会直接去掉前置 0</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    ans<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>ans<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"题目二淘汰数字\"><a class=\"anchor\" href=\"#题目二淘汰数字\">#</a> 题目二：淘汰数字</h1>\n<p>给定一个数组，下标从 1~n，每次淘汰下标为非质数的数字，剩下的数形成新的数组，重复上述过程，直到数组内只剩下一个数字。</p>\n<p><strong>本题为核心代码模式，只需要补充解法类的实现代码即可。</strong></p>\n<p>输入：</p>\n<p>第一行包括一个长度为 n 的数组。</p>\n<p>输出：</p>\n<p>第一行包括一个整数。</p>\n<p>输入示例 1：</p>\n<p>[1, 2, 3, 4]</p>\n<p>输出示例 1：</p>\n<p>3</p>\n<p>输入示例 2：</p>\n<p>[3, 1 , 1 , 4 , 5, 6]</p>\n<p>输出示例 2：</p>\n<p>5</p>\n<h2 id=\"思路-2\"><a class=\"anchor\" href=\"#思路-2\">#</a> 思路</h2>\n<p>本题也是直接暴力求解，重点是求出 n 内的所有质数。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> math <span class=\"token keyword\">import</span> sqrt<span class=\"token punctuation\">,</span> ceil</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">isP</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        m <span class=\"token operator\">=</span> ceil<span class=\"token punctuation\">(</span>sqrt<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token keyword\">if</span> x<span class=\"token operator\">%</span>j <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">getNumber</span><span class=\"token punctuation\">(</span>self <span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\"># write code here</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        n <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        pnums <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>isP<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                pnums<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">while</span> n <span class=\"token operator\">!=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            k <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>pnums<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token keyword\">if</span> pnums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> n<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                    <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                a<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>pnums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                k <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            n <span class=\"token operator\">=</span> k</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># [3,1,1,4,5,6]</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Solution<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>getNumber<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"题目三士兵分配\"><a class=\"anchor\" href=\"#题目三士兵分配\">#</a> 题目三：士兵分配</h1>\n<p>给定一定数量的士兵，编号为 1<sub>n，用长度为 n 的 0/1 串 s 表示，其中 0 代表该士兵只会进攻，1 代表该士兵只会防御，且其攻击力或防御力等于其编号。将士兵分组，编号为 1</sub>pos 的士兵为进攻组，该组的攻击力之和用 w 表示，编号为 pos+1~n 的士兵为防御组，该组的防御力之和用 v 表示，求 | w-v | 的最小值。注意：pos 可以取 0，当 pos 取 0 时，表示将所有士兵分到防御组，而进攻组没有士兵。</p>\n<p>输入：</p>\n<p>第一行包括一个整数 n，表示士兵的数量。</p>\n<p>第二行包括一个 0/1 字符串 s，表示士兵的状态。</p>\n<p>输出：</p>\n<p>第一行包括一个整数，表示 | w-v | 的最小值。</p>\n<p>输入示例 1：</p>\n<p>4</p>\n<p>0011</p>\n<p>输出示例 1：</p>\n<p>1</p>\n<p>输入示例 2：</p>\n<p>7</p>\n<p>1000101</p>\n<p>输出示例 2：</p>\n<p>2</p>\n<h2 id=\"思路-3\"><a class=\"anchor\" href=\"#思路-3\">#</a> 思路</h2>\n<p>思路一：暴力求解。遍历整个字符串，在每一个位置对其进行分割，得到左右两个子串，然后分别统计左右两边的攻击力或防御力，与此同时不断刷新差值绝对值的最小值。这种方法的算法复杂度较高，无法 AC。</p>\n<p>思路二：逐个分配。可以先假设所有的士兵都在右边，左边没有士兵，即 pos 为 0 的情况，此时 w 和 v 均可知。然后遍历整个字符串，将士兵逐个从右边分配到左边，如果分配的士兵为 0，那么 w 加上该士兵的编号，v 不变；如果分配的士兵为 1，那么 v 减去该士兵的编号，w 不变，与此同时不断刷新差值绝对值的最小值即可。</p>\n<p>以下为思路二的代码：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>s <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 因为编号为 1~n，且 pos 的取值范围为 0~n</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 所以添加两个占位符可以简化问题的求解过程</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>s <span class=\"token operator\">=</span> <span class=\"token string\">\"-\"</span> <span class=\"token operator\">+</span> s <span class=\"token operator\">+</span> <span class=\"token string\">\"-\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>w <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>v <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">if</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        v <span class=\"token operator\">+=</span> i</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>res <span class=\"token operator\">=</span> v</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">if</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        w <span class=\"token operator\">+=</span> i</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">if</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        v <span class=\"token operator\">-=</span> i</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    res <span class=\"token operator\">=</span> <span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">,</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>w<span class=\"token operator\">-</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"题目四合并链表\"><a class=\"anchor\" href=\"#题目四合并链表\">#</a> 题目四：合并链表</h1>\n<p>给出一个链表数组，该链表数组均是某一个环状链表的一部分，请将这些链表组合并成环状链表，然后需要找到一个位置，使得从这个位置将环切开后，按照顺序或逆序遍历这个环，形成的链字典序尽量小，并返回这条链。</p>\n<ul>\n<li>\n<p>链表字典序的定义：对于两个链表 a、b，从头节点到尾节点遍历，找到第一个不相同的节点值并比较大小，如果 a [i].val &lt; b [i].val，则认为 a 的字典序小于 b 的字典序。例如：链表 {1,2,3} &lt; 链表 {1,2,4},     链表 {3,4,5} &lt; 链表 {6,7}。</p>\n</li>\n<li>\n<p>环状链表不存在相同的节点值。</p>\n</li>\n<li>\n<p>该题环状链表节点个数最小为 2</p>\n</li>\n<li>\n<p>每个链表都是在环状链表上的顺时针的一部分。</p>\n</li>\n<li>\n<p>给定的链表数组一定能组成一个环状链表。</p>\n</li>\n</ul>\n<p>输入示例 1：</p>\n<p>[{1, 2, 3}, {2, 3, 4}, {4, 1}]</p>\n<p>输出示例 1：</p>\n<p 4 1, 2, 3,></p>\n<p>输入示例 2：</p>\n<p>[{3, 7, 4}, {7, 4, 5, 1, 10, 3}]</p>\n<p>输出示例 2：</p>\n<p 10 1, 5, 4, 7, 3,></p>\n<h2 id=\"思路-4\"><a class=\"anchor\" href=\"#思路-4\">#</a> 思路</h2>\n<p>用字典存每个下标的前驱和后继，即可还原环状链表。接下来考虑切口位置，可将其转化为确定头节点和遍历方向的问题。要使字典序最小，那么头节点必须是链表里面的最小值（确定头节点），而下一节点为头节点的前驱节点和后继节点中较小的一个（确定遍历方向）。</p>\n<p>本题的解法并不难，难的是如何处理输入，将其合并成一个环状链表。系统中采用的核心代码模式，只需补充解法类的实现代码即可，这里给出的是完整代码。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> re <span class=\"token keyword\">import</span> <span class=\"token builtin\">compile</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> xmlrpc<span class=\"token punctuation\">.</span>client <span class=\"token keyword\">import</span> MAXINT</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>inp <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>lss <span class=\"token operator\">=</span> <span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\d+'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span>inp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>ring <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>head <span class=\"token operator\">=</span> MAXINT</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>lss<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    ring<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>lss<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>lss<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    head <span class=\"token operator\">=</span> <span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span>head<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>lss<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>rering <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>v <span class=\"token punctuation\">:</span> k <span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span> v <span class=\"token keyword\">in</span> ring<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>pre <span class=\"token operator\">=</span> rering<span class=\"token punctuation\">[</span>head<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>nex <span class=\"token operator\">=</span> ring<span class=\"token punctuation\">[</span>head<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>res <span class=\"token operator\">=</span> <span class=\"token string\">'&#123;'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>head<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">','</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">if</span> pre <span class=\"token operator\">&lt;</span> nex<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>rering<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        res <span class=\"token operator\">+=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>rering<span class=\"token punctuation\">[</span>head<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">','</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        head <span class=\"token operator\">=</span> rering<span class=\"token punctuation\">[</span>head<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">if</span> pre <span class=\"token operator\">></span> nex<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>ring<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        res <span class=\"token operator\">+=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>ring<span class=\"token punctuation\">[</span>head<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">','</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        head <span class=\"token operator\">=</span> ring<span class=\"token punctuation\">[</span>head<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">'&#125;'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"题目五买卖股票\"><a class=\"anchor\" href=\"#题目五买卖股票\">#</a> 题目五：买卖股票</h1>\n<p>现在有一个长度为 n 的价格数组 a，表示某只股票每天的价格。每天最多可以买入或卖出该只股票的一股，买入或者卖出没有手续费，且卖出股票前必须手里已经有股票才能卖出，但是持有的股票数目不受限制，并且初始资金为 m 元，在任何时刻都不能进行透支，即资金必须始终大于等于 0。请问在 n 天结束之后，拥有的最大总资产是多少？其中总资产 = 股票数目 * 股票价格 + 现金。</p>\n<p>输入：</p>\n<p>第一行包括两个整数 n 和 m，分别表示天数和初始资金。</p>\n<p>第二行包括 n 个整数，分别表示该只股票每天的价格。</p>\n<p>输入示例：</p>\n<p>6 2</p>\n<p>2 3 1 1 1 2</p>\n<p>输出示例：</p>\n<p>6</p>\n<h2 id=\"思路-5\"><a class=\"anchor\" href=\"#思路-5\">#</a> 思路</h2>\n<p>动态规划，01 背包的变种。定义 dp [i][j] 代表前 i 天，手上当前持有 j 只股票的最大现金数，那么可以根据每天选择买入还是卖出达成转移。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>n<span class=\"token punctuation\">,</span> m <span class=\"token operator\">=</span> <span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>prices <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>prices<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1e16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>dp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1e16</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>dp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> m</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token comment\"># 今天不买不卖的情况</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        nodo <span class=\"token operator\">=</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\"># 今天买入一股的情况</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        buy <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1e16</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">if</span> j <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token keyword\">and</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> prices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            buy <span class=\"token operator\">=</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>prices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\"># 昨天卖出一股的情况</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        sell <span class=\"token operator\">=</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>prices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\"># 取资金数目最大的一种</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>nodo<span class=\"token punctuation\">,</span> buy<span class=\"token punctuation\">,</span> sell<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>res <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1e16</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    res <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> i<span class=\"token operator\">*</span>prices<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"https://img-blog.csdnimg.cn/99febfcb8347451c8aa3aa067c9d61c1.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n",
            "tags": [
                "企业笔试",
                "腾讯笔试题",
                "算法",
                "牛客网",
                "笔试",
                "腾讯"
            ]
        },
        {
            "id": "https://www.liangmeng.xyz/ArtificialIntelligence/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9A%84%E6%A6%82%E8%BF%B0/",
            "url": "https://www.liangmeng.xyz/ArtificialIntelligence/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9A%84%E6%A6%82%E8%BF%B0/",
            "title": "第一章-人工智能的概述",
            "date_published": "2022-04-23T09:19:00.000Z",
            "content_html": "<h1 id=\"人工智能概述\"><a class=\"anchor\" href=\"#人工智能概述\">#</a> 人工智能概述</h1>\n<h2 id=\"人工智能的定义\"><a class=\"anchor\" href=\"#人工智能的定义\">#</a> 人工智能的定义</h2>\n<h3 id=\"什么是智能\"><a class=\"anchor\" href=\"#什么是智能\">#</a> 什么是智能</h3>\n<ul>\n<li>自然智能：指人类和一些动物所具有的智力和行为能力。</li>\n<li>人类的自然智能（简称智能）：指人类在认识客观世界中，由思维过程和脑力活动所表现出的综合能力。</li>\n</ul>\n<h3 id=\"智能的不同观点\"><a class=\"anchor\" href=\"#智能的不同观点\">#</a> 智能的不同观点</h3>\n<ul>\n<li>思维理论：<strong>智能来源于思维活动，智能的核心是思维，人的一切知识都是思维的产物</strong>。可望通过对思维规律和思维方法的研究来揭示智能的本质。</li>\n<li>知识阈值理论：<strong>智能取决于知识的数量及其可运用程度</strong>。一个系统所具有的可运用知识越多，其智能就会越高。</li>\n<li>进化理论：智能取决于感知和行为，取决于对外界复杂环境的适应，智能不需要知识、不需要表示、不需要推理，<strong>智能可由逐步进化来实现</strong>。（MIT，Brooks，人造机器虫研究）</li>\n</ul>\n<h3 id=\"智能的层次结构\"><a class=\"anchor\" href=\"#智能的层次结构\">#</a> 智能的层次结构</h3>\n<ul>\n<li>高层智能：以大脑皮层（抑制中枢）为主，主要完成记忆、思维等活动。</li>\n<li>中层智能：以丘脑（间脑，感觉中枢）为主，主要完成感知活动。</li>\n<li>低层智能：以小脑、脊髓为主，主要完成动作反应活动。</li>\n<li><strong>思维理论和知识阈值理论对应高层智能，而进化理论对应中层智能和低层智能</strong>。</li>\n</ul>\n<h3 id=\"智能包含的能力\"><a class=\"anchor\" href=\"#智能包含的能力\">#</a> 智能包含的能力</h3>\n<ul>\n<li>\n<p>感知能力：<strong>人类获得外界信息的基本途径</strong>。</p>\n<p>感知 -- 动作方式：对简单、紧急的信息。</p>\n<p>感知 -- 思维 -- 动作方式：对复杂的信息。</p>\n</li>\n<li>\n<p>记忆和思维的能力：</p>\n<p>记忆：对感知到的外界信息和由思维产生的内部知识的<strong>存储</strong>过程。</p>\n<p>思维：对已存储信息或知识的本质属性、内部规律的<strong>认识</strong>过程。</p>\n<p>思维方式：</p>\n<ul>\n<li>抽象思维（逻辑思维）：根据<strong>逻辑规则</strong>对信息和知识进行处理的理性思维方式。</li>\n<li>形象思维（直感思维）：根据<strong>感性形象认识材料</strong>对客观现象进行处理的一种思维方式。</li>\n<li>灵感思维（顿悟思维）：是一种显意识和潜意识相互作用的思维方式。</li>\n</ul>\n</li>\n<li>\n<p>学习和自适应能力：</p>\n<p>学习：<strong>是一个具有特定目的的知识获取过程，是人的一种本能</strong>。不同人的学习方法、能力不同。</p>\n<p>自适应：<strong>是一种通过自我调节适应外界环境的过程，是人的一种本能</strong>。不同人的适应能力不同。</p>\n</li>\n<li>\n<p>行为能力：<strong>对感知的外界信息做出动作反应的能力</strong>。</p>\n<p>信息来源：由感知直接获得的外界信息或经过思维加工后的信息。</p>\n<p>实现过程’：通过脊髓来控制，由语言、表情、体姿等来实现。</p>\n</li>\n</ul>\n<h3 id=\"什么是人工智能\"><a class=\"anchor\" href=\"#什么是人工智能\">#</a> 什么是人工智能</h3>\n<ul>\n<li>学科的名称。</li>\n<li>人工方法实现的智能。</li>\n<li>计算机模拟实现的智能。</li>\n<li>人造的智能机器或系统。</li>\n<li>模仿、延伸以及扩展人的智能。</li>\n</ul>\n<h3 id=\"人工智能典型的4种定义方法\"><a class=\"anchor\" href=\"#人工智能典型的4种定义方法\">#</a> 人工智能典型的 4 种定义方法</h3>\n<ul>\n<li>类人思维方法（认知模型方法）：1978 年贝尔曼，人工智能是那些与人的思维、决策、问题求解和学习等有关活动的自动化。</li>\n<li>类人行为方法（图灵测试方法）：1990 年库兹韦勒，人工智能是一种创建机器的技艺，这种机器能够执行需要人的智能才能完成的功能。</li>\n<li>理性思维方法（思维法则方法）：1985 年查尼艾克、麦克德莫特，人工智能是通过计算模型来进行心智能力研究的。</li>\n<li>理性行为方法（理性智能体方法）：1998 年尼尔森，人工智能关心的是人工制品种的智能行为，即人工智能就是研究和建造理性智能体。</li>\n<li><strong>理性思维方法与理性行为方法的关系：</strong>\n<ul>\n<li>前者强调正确思维，后者强调合理行动。</li>\n<li>理性行为可以依据理性思维进行。</li>\n<li>理性行为不一定要依据理性思维进行。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"人工智能的一般解释\"><a class=\"anchor\" href=\"#人工智能的一般解释\">#</a> 人工智能的一般解释</h3>\n<ul>\n<li>从能力的角度：人工智能是指<strong>用人工的方法在机器上实现的智能</strong>，是智能机器所执行的通常与人类智能有关的功能，如判断、推理、证明、识别、感知、理解、设计、思考、规划、学习和问题求解等思维活动。</li>\n<li>从学科的角度：人工智能是<strong>一门研究如何构造智能机器或智能系统，去模拟、延伸和扩展人类智能的学科</strong>，是计算机科学中涉及研究、设计和应用智能机器的一个分支。</li>\n</ul>\n<h3 id=\"人工智能的研究目标\"><a class=\"anchor\" href=\"#人工智能的研究目标\">#</a> 人工智能的研究目标</h3>\n<ul>\n<li>\n<p>1978 年斯洛曼，三个主要目标：</p>\n<ul>\n<li>\n<p>对智能行为有效解释的理论分析。</p>\n</li>\n<li>\n<p>解释人类智能。</p>\n</li>\n<li>\n<p>构造具有智能的人工制品。</p>\n</li>\n</ul>\n</li>\n<li>\n<p>远期目标：<strong>用自动机重现人类的思维过程和智能行为</strong>。</p>\n<p>揭示人类智能的根本机理，用智能机器去模拟、延伸和扩展人类的智能。涉及到脑科学、认知科学、计算机科学、系统科学、控制论等多种学科，并依赖于它们的共同发展。</p>\n</li>\n<li>\n<p>近期目标：<strong>建造智能计算机代替人类的部分智力劳动</strong>。</p>\n<p>研究如何使现有的计算机更聪明，即使它能够运用知识去处理问题，能够模拟人类的智能行为。</p>\n</li>\n<li>\n<p><strong>远期目标和近期目标的相互关系：</strong></p>\n<ul>\n<li>远期目标为近期目标指明了方向。</li>\n<li>近期目标则为远期目标奠定了理论和技术基础。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"人工智能的发展简史\"><a class=\"anchor\" href=\"#人工智能的发展简史\">#</a> 人工智能的发展简史</h2>\n<h3 id=\"简史总结\"><a class=\"anchor\" href=\"#简史总结\">#</a> 简史总结</h3>\n<p><img data-src=\"https://img-blog.csdnimg.cn/c6054800e515405aaec1fe1371859be4.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"人工智能的研究内容\"><a class=\"anchor\" href=\"#人工智能的研究内容\">#</a> 人工智能的研究内容</h2>\n<h3 id=\"研究内容\"><a class=\"anchor\" href=\"#研究内容\">#</a> 研究内容</h3>\n<ul>\n<li>如何获取知识？</li>\n<li>如何将获取的知识以计算机内部代码形式加以合理表示？</li>\n<li>如何运用知识进行推理，解决实际问题？</li>\n</ul>\n<h2 id=\"人工智能研究方法与途径\"><a class=\"anchor\" href=\"#人工智能研究方法与途径\">#</a> 人工智能研究方法与途径</h2>\n<h3 id=\"三大学派\"><a class=\"anchor\" href=\"#三大学派\">#</a> 三大学派</h3>\n<ul>\n<li>符号主义：运用计算机科学的方法（逻辑演绎）。\n<ul>\n<li>智能的基础是<strong>知识</strong>，其核心是<strong>知识表示和知识推理</strong>。</li>\n<li><strong>知识可用符号表示，也可用符号进行推理</strong>，因而可以建立基于知识的人类智能和机器智能的统一的理论体系。</li>\n<li><strong>功能模拟，构造能够模拟大脑功能的智能系统</strong>。</li>\n</ul>\n</li>\n<li>联结主义：运用仿生学的方法（网络连接机制）。\n<ul>\n<li>智能行为的基元是<strong>神经元</strong>，而不是符号。</li>\n<li>思维过程是<strong>神经元的联结活动过程</strong>，而不是符号运算过程，反对符号主义关于物理符号系统的假设。</li>\n<li><strong>结构模拟，构造模拟大脑结构的神经网络系统</strong>。</li>\n</ul>\n</li>\n<li>行为主义：运用进化论的思想（控制论和机器学习方法）。\n<ul>\n<li>智能取决于<strong>感知和行动</strong>，即 “感知 - 动作” 模型。</li>\n<li>智能不需要知识、不需要表示、不需要推理，人工智能可以像人类智能那样<strong>逐步进化</strong>。</li>\n<li><strong>行为模拟，构造具有进化能力的智能系统</strong>。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"人工智能的研究领域\"><a class=\"anchor\" href=\"#人工智能的研究领域\">#</a> 人工智能的研究领域</h2>\n<h3 id=\"研究领域\"><a class=\"anchor\" href=\"#研究领域\">#</a> 研究领域</h3>\n<ul>\n<li>机器思维：<strong>推理（确定性推理、不确定性推理）和搜索（状态空间搜索、与 / 或树搜索、博弈树搜索）</strong>。</li>\n<li>机器感知：计算机视觉、模式识别和自然语言处理。</li>\n<li>机器行为：智能控制 / 制造。</li>\n<li>机器学习：符号学习和神经学习。</li>\n<li>计算智能：神经计算、进化计算和模糊计算。</li>\n<li>分布智能：并行求解。</li>\n<li>智能系统：专家系统和智能决策支持系统。</li>\n</ul>\n<h2 id=\"人工智能的研究现状与发展方向\"><a class=\"anchor\" href=\"#人工智能的研究现状与发展方向\">#</a> 人工智能的研究现状与发展方向</h2>\n<h3 id=\"研究现状\"><a class=\"anchor\" href=\"#研究现状\">#</a> 研究现状</h3>\n<ul>\n<li>多学科交叉研究</li>\n<li>多学派和多技术融合研究</li>\n<li>分布智能研究</li>\n<li>群体智能研究</li>\n<li>社会智能研究</li>\n<li>集成智能研究</li>\n<li>认知计算与情感计算研究</li>\n<li>智能系统与智能服务</li>\n</ul>\n<h3 id=\"发展方向\"><a class=\"anchor\" href=\"#发展方向\">#</a> 发展方向</h3>\n<ul>\n<li>知识 + 数据 + 算法 + 算力。</li>\n</ul>\n<p><img data-src=\"https://img-blog.csdnimg.cn/bbb8c160345142c6bb9b8b6c0617f5bd.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n",
            "tags": [
                "人工智能",
                "第一章-人工智能的概述",
                "人工智能",
                "笔记"
            ]
        },
        {
            "id": "https://www.liangmeng.xyz/StereotypedWriting/OperatingSystem/",
            "url": "https://www.liangmeng.xyz/StereotypedWriting/OperatingSystem/",
            "title": "计算机八股文之操作系统",
            "date_published": "2022-04-14T16:00:00.000Z",
            "content_html": "<h1 id=\"简要概述一下什么是操作系统\"><a class=\"anchor\" href=\"#简要概述一下什么是操作系统\">#</a> 简要概述一下什么是操作系统？</h1>\n<ul>\n<li>操作系统是<strong>管理计算机硬件和软件资源</strong>的计算机程序，提供一个计算机用户与计算机硬件系统之间的接口（向上对用户程序提供接口，向下接管硬件资源）。</li>\n<li>操作系统本质上也是一个软件，作为最接近硬件的<strong>系统软件，负责处理器管理、存储器管理、设备驱动管理、文件系统管理和提供用户接口。</strong></li>\n</ul>\n<h1 id=\"操作系统的分类有哪些\"><a class=\"anchor\" href=\"#操作系统的分类有哪些\">#</a> 操作系统的分类有哪些？</h1>\n<ul>\n<li>操作系统一般可分为<strong>批处理操作系统、分时操作系统和实时操作系统。</strong></li>\n<li>若一个操作系统兼顾批处理和分时的功能，则称该系统为<strong>通用操作系统</strong>，常见的通用操作系统有：Windows、Linux、MacOS 等。</li>\n</ul>\n<h1 id=\"什么是内核态和用户态\"><a class=\"anchor\" href=\"#什么是内核态和用户态\">#</a> 什么是内核态和用户态？</h1>\n<ul>\n<li>为了<strong>避免操作系统和关键数据被用户程序破坏</strong>，将处理器的执行状态分为内核态和用户态。</li>\n<li>内核态是操作系统管理程序执行时所处的状态，<strong>能够执行包含特权指令在内的一切指令，能够访问系统内所有的存储空间。</strong></li>\n<li>用户态是用户程序执行时处理器所处的状态，<strong>不能执行特权指令，只能访问用户地址空间。</strong></li>\n<li>用户程序运行在用户态，操作系统内核运行在内核态。</li>\n</ul>\n<h1 id=\"如何实现内核态和用户态的切换\"><a class=\"anchor\" href=\"#如何实现内核态和用户态的切换\">#</a> 如何实现内核态和用户态的切换？</h1>\n<p>处理器从用户态切换到内核态的方法有三种：<strong>系统调用、异常、外部中断。</strong></p>\n<ul>\n<li>系统调用，操作系统的最小功能单位，是操作系统提供的<strong>用户接口，是软中断。</strong></li>\n<li>异常，也叫做<strong>内中断，是由错误引起的</strong>，如文件损坏、缺页故障等。</li>\n<li>外部中断，通过两根信号线来通知处理器<strong>外设的状态变化，是硬中断。</strong></li>\n</ul>\n<h1 id=\"软中断和硬中断的区别与联系\"><a class=\"anchor\" href=\"#软中断和硬中断的区别与联系\">#</a> 软中断和硬中断的区别与联系？</h1>\n<ul>\n<li>硬中断是有<strong>外设硬件</strong>发出的，<strong>需要有中断控制器</strong>的参与。其过程是外设侦测到变化，告知中断控制器，中断控制器通过 CPU 或内存的中断脚通 CPU，然后<strong>硬件</strong>进行程序计数器及堆栈寄存器的现场保存工作（引发上下文切换），并根据中断向量调用<strong>硬中断处理程序</strong>进行中断处理。</li>\n<li>软中断则通常是由<strong>硬中断处理程序或者进程调度程序等软件程序</strong>发出的中断信号，<strong>无需中断控制器</strong>的参与，直接以一个 CPU 指令之形式指示<strong> CPU</strong> 进行程序计数器及堆栈寄存器之现场保存工作 (亦会引发上下文切换)，并调用相应的<strong>软中断处理程序</strong>进行中断处理 (即我们通常所言之系统调用)。</li>\n<li>硬中断直接以硬件的方式引发，处理速度快。软中断以软件指令的方式引发，适合于对响应速度要求不是特别严格的场景。</li>\n<li>硬中断通过设置 CPU 的屏蔽位可进行屏蔽，软中断则由于是指令之方式给出，不能屏蔽（<strong>硬中断可以被屏蔽，软中断不可以被屏蔽</strong>）。</li>\n<li>硬中断和软中断<strong>均会引起上下文切换 (进程 / 线程之切换)</strong>，进程切换的过程是差不多的。</li>\n</ul>\n<h1 id=\"并发和并行的区别\"><a class=\"anchor\" href=\"#并发和并行的区别\">#</a> 并发和并行的区别？</h1>\n<ul>\n<li>并发：宏观上看多个程序在同时运行，比如在单核 CPU 上的多任务，但微观上看程序的指令是<strong>交替运行</strong>的，<strong>CPU 在任何时刻最多只能同时运行一条指令</strong>。</li>\n<li>并行：严格意义上的同时运行，比如多核 CPU，程序的指令是<strong>同时运行</strong>的，<strong>CPU 在任何时刻最多能够同时运行多条指令</strong>。</li>\n<li>并发<strong>不能</strong>提高计算机的性能，而并行<strong>能够</strong>提高计算机的性能。</li>\n</ul>\n<h1 id=\"什么是进程-线程-协程\"><a class=\"anchor\" href=\"#什么是进程-线程-协程\">#</a> 什么是进程、线程、协程？</h1>\n<ul>\n<li>进程：进程是<strong>系统进行资源分配和管理的基本单位</strong>。每个进程都有自己<strong>独立的内存空间</strong>，不同进程之间可以进行通信。由于进程比较重量，占据独立的内存，所以进程上下文的切换开销（栈、寄存器、虚拟内存、文件句柄等）比较大，但相对来说比较安全。</li>\n<li>线程：线程是进程的一个实体，是<strong> CPU 调度和分派的基本单位</strong>，它是比进程更小的能够独立运行的单位。线程自己基本上不拥有系统资源，只拥有一点在运行中必不可少的资源（栈、寄存器、程序计数器），但是它可<strong>与同属一个进程的其他线程共享进程所拥有的全部资源</strong>。线程间的通信主要通过共享内存，上下文的切换开销比较少，但相比进程不够稳定，容易丢失数据。</li>\n<li>协程：协程是<strong>一种用户态的轻量级线程</strong>，协程的<strong>调度完全由用户控制</strong>。协程拥有自己的寄存器上下文和栈。协程调度切换时，将寄存器上下文和栈保存到其他地方。在切回来的时候，恢复先前保存的寄存器上下文和栈，直接操作栈则<strong>基本没有内核切换的开销，可以不加锁地访问全局变量</strong>，所以上下文的切换非常快。</li>\n</ul>\n<h1 id=\"进程和线程的区别\"><a class=\"anchor\" href=\"#进程和线程的区别\">#</a> 进程和线程的区别？</h1>\n<ul>\n<li><strong>一个程序至少有一个进程，一个进程至少有一个线程。</strong></li>\n<li><strong>从系统调度上看：进程是资源分配和管理的基本单位，线程是 CPU 调度和分派的基本单位。</strong></li>\n<li><strong>从上下文切换上看：线程上下文的切换要比进程上下文的切换快得多。</strong></li>\n<li><strong>从系统开销上看：创建或撤销进程时，系统都要为之分配或回收系统资源，如内存空间、I/O 设备等，而创建或撤销线程时，系统只需要为之分配或回收少量资源，如栈、寄存器等，所以进程切换的开销要远大于线程切换的开销。</strong></li>\n</ul>\n<h1 id=\"协程和线程的区别\"><a class=\"anchor\" href=\"#协程和线程的区别\">#</a> 协程和线程的区别？</h1>\n<ul>\n<li>一个线程可以有多个协程，一个进程也可以有多个协程。线程和进程都是同步机制，而协程是异步机制。</li>\n<li>协程是由程序自身控制的，没有线程切换的开销，执行效率非常高。</li>\n<li>协程不需要多线程的锁机制：在协程中控制共享资源不需要加锁，只需要判断状态即可，所以执行效率比多线程高很多。</li>\n<li>线程是抢占式的，而协程是非抢占式的，需要用户释放使用权切换到其他协程，因此同一时间只有一个协程拥有运行权，相当于单线程。</li>\n<li>协程不被操作系统内核管理，而完全由程序控制。线程是被分割的 CPU 资源，协程是组织好的代码流程，线程是协程的资源。但协程不会直接使用线程，协程直接利用的是执行器来关联任意线程或线程池。</li>\n</ul>\n<h1 id=\"进程的基本操作有哪些\"><a class=\"anchor\" href=\"#进程的基本操作有哪些\">#</a> 进程的基本操作有哪些？</h1>\n<ul>\n<li>fork () 创建子进程：<strong>fork () 函数调用一次，返回两次，在父进程中返回子进程的 PID，而在子进程中返回 0</strong>，可以利用这个特点来判断一个进程是父进程还是子进程。<br>\n（1）新创建子进程几乎但不完全与父进程相同：子进程得到与父进程用户级<strong>虚拟地址空间相同（但是独立的）一份副本</strong>，包括代码和数据段、堆、共享库以及用户栈；子进程还获得与父进程所有<strong>打开文件的描述符相同的一份副本</strong>，这意味着子进程可以读写父进程中任何打开的文件。<br>\n（2）父进程与子进程最大的区别在于它们的进程 ID（PID）不同。</li>\n<li>exec () 执行新程序：<strong>exec () 函数可以替换当前进程的代码，执行一个新的程序，而不是继续执行当前程序</strong>。exec () 函数可以接受一个参数，这个参数是一个字符串，表示要执行的新程序的路径，如果参数是一个相对路径，那么它会被解析为当前进程的工作目录下的路径。</li>\n<li>wait () 等待子进程结束：<strong>wait () 函数可以等待子进程结束，并返回子进程的返回值。</strong></li>\n<li>waitpid () 等待子进程结束：<strong>waitpid () 函数可以等待指定的子进程结束，并返回子进程的返回值。</strong></li>\n<li>exit () 退出当前进程：<strong>exit () 函数可以退出当前进程，并返回一个整数。</strong></li>\n</ul>\n",
            "tags": [
                "计算机八股文",
                "操作系统",
                "笔记",
                "计算机八股文",
                "操作系统"
            ]
        },
        {
            "id": "https://www.liangmeng.xyz/WrittenExamination/Honor_20220412/",
            "url": "https://www.liangmeng.xyz/WrittenExamination/Honor_20220412/",
            "title": "荣耀20220412",
            "date_published": "2022-04-13T14:00:00.000Z",
            "content_html": "<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>笔试一共三道编程题，分数依次为 100、200、300，需要按顺序依次完成，只有做完这一道题，才能进入下一道题，无法跳题，使用的是牛客网，允许跳出界面使用自己的 IDE。</p>\n<h1 id=\"题目一字符串分割\"><a class=\"anchor\" href=\"#题目一字符串分割\">#</a> 题目一：字符串分割</h1>\n<p>给定一系列的字符串，字符串的个数为 N，每个字符串的长度不超过 100。长度小于 8 的字符串用零补足，长度大于等于 8 的字符串，按 8 位位一组的形式不断分割，最后剩余部分用零补足。</p>\n<p>输入：</p>\n<p>第一行包括一个整数 N 和 N 个原始字符串。</p>\n<p>输出：</p>\n<p>第一行包括分割后的字符串按字典序从小到大排列。</p>\n<p>输入示例：</p>\n<p>2 abc 123456789</p>\n<p>输出示例：</p>\n<p>12345678 90000000 abc00000</p>\n<h2 id=\"思路\"><a class=\"anchor\" href=\"#思路\">#</a> 思路：</h2>\n<p>这一题比较简单，只需要按照题目的描述做即可。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>inp <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>inp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>ls <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    string <span class=\"token operator\">=</span> inp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">8</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        ls<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        string <span class=\"token operator\">=</span> string<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    ls<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>string <span class=\"token operator\">+</span> <span class=\"token string\">\"0\"</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token operator\">-</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>ls<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>ls<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"题目二蜜蜂采蜜\"><a class=\"anchor\" href=\"#题目二蜜蜂采蜜\">#</a> 题目二：蜜蜂采蜜</h1>\n<p>平原上，一群蜜蜂离开蜂巢采蜜，要连续采集 5 片花丛后归巢。<br>\n已知 5 片花丛相对蜂巢的坐标，请你帮它们规划一下到访花丛的顺序，以使飞行总距离最短。</p>\n<p>输入：</p>\n<p>以蜂巢为平面坐标原点的 5 片花丛 A、B、C、D、E 的坐标，坐标值为整数。</p>\n<p>输出：</p>\n<p>从出发到返回蜂巢最短路径的长度取整值，取整办法为舍弃小数点后面的值。</p>\n<p>输入示例：</p>\n<p>200 0 200 10 200 50 200 30 200 25</p>\n<p>输出示例：</p>\n<p>456</p>\n<p>说明：</p>\n<p>样例中的 10 个数，相邻两个分别为一组，表示一个花丛相对蜂巢的坐标：A (x1, y1)、B (x2, y2)、C (x3, y3)、D (x4, y4)、E (x5, y5)，分表代表 x1,y1,x2,y2,x3,y3,x4,y4,x5,y5。</p>\n<h2 id=\"说明\"><a class=\"anchor\" href=\"#说明\">#</a> 说明：</h2>\n<p>本题实际上是一道旅行商问题（TSP），经典的 TSP 可以描述为：一个商品推销员要去若干个城市推销商品，该推销员从一个城市出发，需要经过所有城市后，回到出发地。应如何选择行进路线，以使总的行程最短。从图论的角度来看，该问题实质是在一个带权完全无向图中，找一个权值最小的 Hamilton 回路。由于该问题的可行解是所有顶点的全排列，随着顶点数的增加，会产生组合爆炸，它是一个 NP 完全问题。</p>\n<p>常见的解法有暴力破解、深度优先遍历，动态规划等。</p>\n<p>高级的解法有模拟退火算法，遗传算法，粒子群算法、神经网络等</p>\n<h2 id=\"思路一\"><a class=\"anchor\" href=\"#思路一\">#</a> 思路一：</h2>\n<p>暴力破解，求出五片花丛所有可能的到访顺序（全排列），取飞行总距离最短的路径即可。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> math <span class=\"token keyword\">import</span> sqrt<span class=\"token punctuation\">,</span> floor</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> xmlrpc<span class=\"token punctuation\">.</span>client <span class=\"token keyword\">import</span> MAXINT</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>inp <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>mincost <span class=\"token operator\">=</span> MAXINT</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>ls <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>inp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> inp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>matrix <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        matrix<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> sqrt<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ls<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>ls<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>ls<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>ls<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">**</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Perm</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> begin<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">global</span> mincost<span class=\"token punctuation\">,</span> ls<span class=\"token punctuation\">,</span> matrix<span class=\"token punctuation\">,</span> path</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">if</span> begin <span class=\"token operator\">>=</span> end<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        cost <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            cost <span class=\"token operator\">+=</span> matrix<span class=\"token punctuation\">[</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        cost <span class=\"token operator\">=</span> cost <span class=\"token operator\">+</span> sqrt<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ls<span class=\"token punctuation\">[</span>nums<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">**</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>ls<span class=\"token punctuation\">[</span>nums<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">**</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> sqrt<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ls<span class=\"token punctuation\">[</span>nums<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">**</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>ls<span class=\"token punctuation\">[</span>nums<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">**</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">if</span> cost <span class=\"token operator\">&lt;</span> mincost<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            path <span class=\"token operator\">=</span> nums</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            mincost <span class=\"token operator\">=</span> cost</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">for</span> num <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>begin<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            nums<span class=\"token punctuation\">[</span>begin<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">[</span>begin<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            Perm<span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> begin<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            nums<span class=\"token punctuation\">[</span>begin<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">[</span>begin<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>nums <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>i <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>Perm<span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>floor<span class=\"token punctuation\">(</span>mincost<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"思路二\"><a class=\"anchor\" href=\"#思路二\">#</a> 思路二：</h2>\n<p>采用深度优先遍历来寻找最短路径，并在遍历过程中通过不断剪枝来简化求解过程，广义上来讲也是全排列的一种。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> math <span class=\"token keyword\">import</span> sqrt<span class=\"token punctuation\">,</span> floor</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> xmlrpc<span class=\"token punctuation\">.</span>client <span class=\"token keyword\">import</span> MAXINT</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">DFS</span><span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">,</span> cnt<span class=\"token punctuation\">,</span> cost<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">global</span> mincost<span class=\"token punctuation\">,</span> matrix<span class=\"token punctuation\">,</span> visited</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">if</span> cost <span class=\"token operator\">></span> mincost<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">if</span> cnt <span class=\"token operator\">==</span> <span class=\"token number\">6</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        cost <span class=\"token operator\">=</span> cost <span class=\"token operator\">+</span> sqrt<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ls<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">**</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>ls<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">**</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> sqrt<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ls<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">**</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>ls<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">**</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">if</span> cost <span class=\"token operator\">&lt;</span> mincost<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            mincost <span class=\"token operator\">=</span> cost</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    visited<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">for</span> v <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> visited<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            DFS<span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> cnt<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> cost <span class=\"token operator\">+</span> matrix<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    visited<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>inp <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>mincost <span class=\"token operator\">=</span> MAXINT</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>visited <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>ls <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>inp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> inp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>ls<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>matrix <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        matrix<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> sqrt<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ls<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>ls<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>ls<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>ls<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">**</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>DFS<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>floor<span class=\"token punctuation\">(</span>mincost<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"惨痛经历\"><a class=\"anchor\" href=\"#惨痛经历\">#</a> 惨痛经历</h1>\n<p>因为邮件上写着系统开放时间为 18:00-21:00（不同于美团写着笔试时间为 16:00-18:00），所以我习惯性得以为笔试时间为三个小时，当我悠哉游哉地把第二题做完返回系统时，笔试已经结束了，因此只提交了第一题，直接人麻了。。。所以，各位小伙伴无论是在比赛还是在测试，一定先看好时间！！！当然，对于秒 AK 的大佬来说，时间根本不是事，那就当我没说。</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/8010e6fa388344ca9c90c1cd9cdb368b.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n",
            "tags": [
                "企业笔试",
                "荣耀笔试题",
                "算法",
                "牛客网",
                "荣耀",
                "笔试"
            ]
        },
        {
            "id": "https://www.liangmeng.xyz/WrittenExamination/MeiTuan_20220409/",
            "url": "https://www.liangmeng.xyz/WrittenExamination/MeiTuan_20220409/",
            "title": "美团20220409",
            "date_published": "2022-04-10T10:00:00.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>笔试一共五道编程题（四 + 一），一为专项编程题，估计不同岗位有题目不一样，使用的是赛码网，允许跳出界面使用自己的 IDE。</p>\n<p>在此感谢<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3JlYm9ydHQ/dHlwZT1ibG9n\">筱羊冰冰</span>提供的部分题目及题解。</p>\n<h2 id=\"题目一数圈游戏\"><a class=\"anchor\" href=\"#题目一数圈游戏\">#</a> 题目一：数圈游戏</h2>\n<p>给定一个整数 n，计算该整数含有的圆圈个数。数字 0-9 对应的圈数如下：<br>\n0: 1<br>\n1: 0<br>\n2: 0<br>\n3: 0<br>\n4: 0<br>\n5: 0<br>\n6: 1<br>\n7: 0<br>\n8: 2<br>\n9: 1</p>\n<p>输入：<br>\n第一行为一个整数 n，表示数圈游戏的数字。</p>\n<p>输入示例：<br>\n60498<br>\n 输出示例：<br>\n5</p>\n<p>限制：<br>\n80% 的测试用例：n&lt;=10000<br>\n100% 的测试用例：n&lt;=100000000</p>\n<h3 id=\"思路\"><a class=\"anchor\" href=\"#思路\">#</a> 思路：</h3>\n<p>该题较为简单，一次遍历累加即可。</p>\n<h2 id=\"题目二士兵排队\"><a class=\"anchor\" href=\"#题目二士兵排队\">#</a> 题目二：士兵排队</h2>\n<p>给定一定数量的士兵，将士兵按照身高从小到大排列，身高相同者按照姓名的字典序从小到大排列。</p>\n<p>输入：<br>\n第一行为一个整数 n，表示士兵的数量。<br>\n第二行为 n 个士兵的身高，单位为 cm。<br>\n第三行为 n 个士兵的姓名。</p>\n<p>输入示例：<br>\n4<br>\n176 170 176 176<br>\nbamma tom alpha beta</p>\n<p>输出示例：<br>\ntom alpha bamma beta</p>\n<p>限制：<br>\n士兵身高 hi &lt;= 300<br>\n 士兵姓名长度 ni &lt;= 20</p>\n<h3 id=\"思路一\"><a class=\"anchor\" href=\"#思路一\">#</a> 思路一：</h3>\n<p>将每一个人的身高和名字按照 (身高，名字) 的格式存储，然后进行两次排序，先按照身高排序，再按照名字排序即可。（利用了 python 排序算法的稳定性！）</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>heights <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>names <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>ls <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    ls<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>heights<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> names<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># lambda 函数指定排序规则</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>ls<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span>key<span class=\"token operator\">=</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>ls<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span>key<span class=\"token operator\">=</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ls<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"思路二\"><a class=\"anchor\" href=\"#思路二\">#</a> 思路二：</h3>\n<p>因为身高的限制为 hi &lt;= 300，所以身高最高只能为三位数，那么我们可以把所有身高都通过补前置零的方式化为三位数，然后再与名字拼接成一个字符串，这样只需要一次排序就能够得出结果。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>heights <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>names <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token comment\"># str.zfill () 自动填充</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    heights<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> heights<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>zfill<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> names<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>heights<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>heights<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"题目三路径搜索\"><a class=\"anchor\" href=\"#题目三路径搜索\">#</a> 题目三：路径搜索</h2>\n<p>给定一个地图，询问是否存在一条从起点到终点的直接通路。注意，通路是双向的。</p>\n<p>输入：<br>\n第一行包括两个整数 n 和 m，分别表示地图上点的数量和通路的数量。<br>\n第二行包括 m 个整数，表示地图上通路的一端。<br>\n第三行包括 m 个整数，表示地图上通路的另一端。<br>\n第四行包括 k 个整数，表示询问的次数。<br>\n接下来的 k 行每行包括两个整数，分别表示起点和终点。</p>\n<p>输入示例：<br>\n4 5<br>\n1 2 1 3 1<br>\n2 3 3 4 4<br>\n4<br>\n1 3<br>\n2 4<br>\n2 1<br>\n3 2</p>\n<p>输出示例：<br>\nYes<br>\nNo<br>\nYes<br>\nYes</p>\n<h3 id=\"思路-2\"><a class=\"anchor\" href=\"#思路-2\">#</a> 思路：</h3>\n<p>筱羊冰冰：上来就看错了，然后花了好久写了类似并查集的东西，然后用不上……<br>\n（果然大佬就是不一样，上来直接手撕并查集）<br>\n这道题只需要检查有无指定通路就行了，不过要特别注意查询范围，因为通路是双向的而且要求的是直接通路。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>n<span class=\"token punctuation\">,</span> m <span class=\"token operator\">=</span> <span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>lsu <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>lsv <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>k <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>ways <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>lsu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> lsv<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>out <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    u<span class=\"token punctuation\">,</span> v <span class=\"token operator\">=</span> <span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> ways <span class=\"token keyword\">or</span> <span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> u<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> ways<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        out<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string\">'Yes'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        out<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string\">'No'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>out<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"题目四井字棋\"><a class=\"anchor\" href=\"#题目四井字棋\">#</a> 题目四：井字棋</h2>\n<p>给定一个 2x2 的棋盘和 n 中不同的颜色，要求每行每列均不能出现相同的颜色，计算总共有多少种填充方案。</p>\n<p>输入：<br>\n第一行包括一个整数 n，表示颜色的数量。</p>\n<p>输出：<br>\n输出一个整数，表示有多少种填充方案。</p>\n<p>输入示例：<br>\n2</p>\n<p>输出示例：<br>\n2</p>\n<p>限制：<br>\n颜色的种类 n &lt;= 10</p>\n<h3 id=\"思路-3\"><a class=\"anchor\" href=\"#思路-3\">#</a> 思路：</h3>\n<p>筱羊冰冰：有一说一，感觉就属这个题有意思吧。我当时看完，感觉就有一点像排列组合 (业余玩家，不太清楚具体的类型)。<br>\nn 种颜色，如果颜色足够 (指大于四种)，我们其实也只能取出四种来操作，所以只需要一个</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msubsup><mi>C</mi><mi>n</mi><mn>4</mn></msubsup></mrow><annotation encoding=\"application/x-tex\">C_n^4\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1111079999999998em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641079999999999em;\"><span style=\"top:-2.4530000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<p>所以我们其实只需要考虑四种以内的情况。</p>\n<p>两种颜色：</p>\n<table>\n<thead>\n<tr>\n<th>1</th>\n<th>2</th>\n<th>和</th>\n<th>2</th>\n<th>1</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>2</td>\n<td>1</td>\n<td></td>\n<td>1</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<p>三种颜色：<br>\n我们自然可以想到，拿两种颜色就可以填上面的两种</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msubsup><mi>C</mi><mn>3</mn><mn>2</mn></msubsup><mo>∗</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">C_3^2 * 2\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1111079999999998em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641079999999999em;\"><span style=\"top:-2.4530000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span></span></p>\n<p>然后，如果是三种颜色都要，有 12 种，肯定是有一个重复的，那么对角线重复就有两种情况，剩下的其实就是将三个数字填入三个位置，</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msubsup><mi>A</mi><mn>3</mn><mn>3</mn></msubsup></mrow><annotation encoding=\"application/x-tex\">A_3^3\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1111079999999998em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641079999999999em;\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<p>就是 6 + 6*2 = 18。</p>\n<p>到这里其实就应该明白了，我们只需要知道 i 种颜色有多少种即可，因为 i = 2, 3, 4，我们完全可以直接写出来，剩下的就是一个组合问题，再给出一个阶乘列表。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># ls [i] 为 i 种颜色都使用，对应的可能数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 四种颜色忘了说了，不过就是个 A44</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>ls <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># ls_jc[i] = i!</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>ls_jc <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token number\">720</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40320</span><span class=\"token punctuation\">,</span> <span class=\"token number\">362880</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3628800</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>ret <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">if</span> n <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token comment\"># 他在系统公告中，提示了 0 的问题</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    ret <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">elif</span> n <span class=\"token operator\">&lt;=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        ret <span class=\"token operator\">+=</span> ls<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> ls_jc<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">//</span> <span class=\"token punctuation\">(</span>ls_jc<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> ls_jc<span class=\"token punctuation\">[</span>n<span class=\"token operator\">-</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\"># 还有一个限制就是输出大小，这里原题目是有的</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        ret <span class=\"token operator\">%=</span> <span class=\"token number\">1000000007</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        ret <span class=\"token operator\">+=</span> ls<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> ls_jc<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">//</span> <span class=\"token punctuation\">(</span>ls_jc<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> ls_jc<span class=\"token punctuation\">[</span>n<span class=\"token operator\">-</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        ret <span class=\"token operator\">%=</span> <span class=\"token number\">1000000007</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"小插曲\"><a class=\"anchor\" href=\"#小插曲\">#</a> 小插曲：</h3>\n<p>当时有一块写错了，然后跑出来只有 27%，自己就去看了一下范围是小于等于十，那么案例至少有 10 个吧。<br>\n然后自己因为有边界检测，负数、0、1、2 都能正确，那么至少对三个，反推出案例应该是 11 个，那么就是 3 往上有问题，所以将矛头对准了 ls [3]，果然是算少了，改成 12，啪的一下，很快就过了……</p>\n<h2 id=\"题目五堆积木\"><a class=\"anchor\" href=\"#题目五堆积木\">#</a> 题目五：堆积木</h2>\n<p>给定一个已有的字符串和一个目标字符串，可以从右边删除一个字符，也可以往左边插入一个字符，删除和插入操作的次数没有限制，问最少操作多少次可以使已有字符串变成目标字符串。</p>\n<table>\n<thead>\n<tr>\n<th>输入</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>5</td>\n<td>原串长度</td>\n</tr>\n<tr>\n<td>1 5 3 4 6</td>\n<td>原串</td>\n</tr>\n<tr>\n<td>5</td>\n<td>目标串长度</td>\n</tr>\n<tr>\n<td>2 1 5 3 4</td>\n<td>目标串</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"思路-4\"><a class=\"anchor\" href=\"#思路-4\">#</a> 思路：</h3>\n<p>筱羊冰冰：这个题，其实看明白了就没那么难，其实就是找最长公共子序列。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> deque</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>l_old <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>old <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>l_new <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>new <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>length <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 这里没啥原因，就是 deque 的头插尾插都比较快，O (1) 的</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>s1<span class=\"token punctuation\">,</span> s2 <span class=\"token operator\">=</span> deque<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> deque<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>judge <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    s1<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>old<span class=\"token punctuation\">[</span>length<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    s2<span class=\"token punctuation\">.</span>appendleft<span class=\"token punctuation\">(</span>new<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    length <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">if</span> s1 <span class=\"token operator\">==</span> s2<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        judge <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">elif</span> length <span class=\"token operator\">==</span> <span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span>l_old<span class=\"token punctuation\">,</span> l_new<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">if</span> judge<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>l_old<span class=\"token operator\">+</span>l_new <span class=\"token operator\">-</span> length<span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>l_old<span class=\"token operator\">+</span>l_new<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"重大失误\"><a class=\"anchor\" href=\"#重大失误\">#</a> 重大失误：</h3>\n<p>上面的代码其实没考虑，如果有多对子串相同，要找出最长的……<br>\n 不过感觉测试案例比较拉，所以显示还是 ac 了的。</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/a8a3d56fb3c843adb83a73a53cb36285.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATUFD44CB5YeJ5qKm,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center\" alt=\"在这里插入图片描述\"></p>\n",
            "tags": [
                "企业笔试",
                "美团笔试题",
                "算法",
                "笔试",
                "赛码网",
                "美团"
            ]
        },
        {
            "id": "https://www.liangmeng.xyz/CCPP/%E5%AD%A6%E7%94%9F%E6%88%90%E7%BB%A9%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/",
            "url": "https://www.liangmeng.xyz/CCPP/%E5%AD%A6%E7%94%9F%E6%88%90%E7%BB%A9%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/",
            "title": "学生成绩管理系统",
            "date_published": "2022-04-07T06:43:36.000Z",
            "content_html": "<p>相信很多同仁在大学学习编程的时候都会被老师要求动手敲出一个学生成绩管理系统或图书馆管理系统之类的程序吧。<br>\n<strong>不得不说，这个程序简直就是大多数初学者的恶梦，毕竟它的内容涉及到了整一个学期学到的所有知识。</strong><br>\n<s>况且，对于像我这种在大学前从来没接触过编程，也不知道代码是啥的绝对萌新来说，更是一次史诗级的灾难。</s></p>\n<p><strong>你见过凌晨四点的教学楼吗？</strong><br>\n<strong>我见过，那时候我刚从里面出来。</strong><br>\n<img data-src=\"https://img-blog.csdnimg.cn/20210325191305561.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpc3NNb29uXw==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"><br>\n<strong>话不多说，说多了都是泪。</strong></p>\n<p>实验要求我就不赘述了吧，无非就是录成绩、各种方式查成绩、名次排序、计算均分等。</p>\n<p><strong>还是直接上代码吧，大家都是爽快人！</strong></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">N</span> <span class=\"token expression\"><span class=\"token number\">30</span></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">M</span> <span class=\"token expression\"><span class=\"token number\">10</span></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">X</span> <span class=\"token expression\"><span class=\"token number\">6</span></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">/* 学生信息结构体，包括学号，姓名，各学科分数，总分，均分 */</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">student</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">long</span> number<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">char</span> name<span class=\"token punctuation\">[</span>M<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token keyword\">int</span> score<span class=\"token punctuation\">[</span>X<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">int</span> stutotal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token keyword\">float</span> stuaverage<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span>STUDENT<span class=\"token punctuation\">;</span><span class=\"token comment\">/* 对学生信息结构体取别名 “STUDENT”*/</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">/* 实现两个结构体的交换，注意，结构体是可以直接赋值的 */</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">Swap</span><span class=\"token punctuation\">(</span>STUDENT <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span>STUDENT <span class=\"token operator\">*</span>b<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  STUDENT temp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  temp<span class=\"token operator\">=</span><span class=\"token operator\">*</span>a<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token operator\">*</span>a<span class=\"token operator\">=</span><span class=\"token operator\">*</span>b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token operator\">*</span>b<span class=\"token operator\">=</span>temp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\">/* 由用户用键盘依次输入学生信息 */</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">Input</span><span class=\"token punctuation\">(</span>STUDENT stu<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Number:\\t\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t<span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%ld\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t<span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">/* 清除缓冲区中的回车字符，防止被读入学生姓名 */</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Name:\\t\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t<span class=\"token function\">gets</span><span class=\"token punctuation\">(</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span>x<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t\t<span class=\"token keyword\">do</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t\t    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Score %d:\"</span><span class=\"token punctuation\">,</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t\t    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>score<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>score<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token operator\">||</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>score<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">/* 防止录入异常成绩 */</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token comment\">/* 计算各学科的总分和均分 */</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">SubCalculate</span><span class=\"token punctuation\">(</span>STUDENT stu<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> subtotal<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> subaverage<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t<span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span>x<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\tsubtotal<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token comment\">/* 学科总成绩初始化为 0*/</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t\t\tsubtotal<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>subtotal<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>score<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t\tsubaverage<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>subtotal<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">/</span>n<span class=\"token punctuation\">;</span><span class=\"token comment\">/* 将整型数强转为浮点数后进行浮点数运算，确保数据的准确性 */</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(subject %d)Total:%d\\t\\tAverage:%6.2f\\n\"</span><span class=\"token punctuation\">,</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>subtotal<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>subaverage<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token comment\">/* 计算每个学生的总分和均分 */</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">StuCalculate</span><span class=\"token punctuation\">(</span>STUDENT stu<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t<span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t\tstu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>stutotal<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token comment\">/* 学生总成绩初始化为 0*/</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span>x<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t\t\tstu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>stutotal<span class=\"token operator\">=</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>stutotal<span class=\"token operator\">+</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>score<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t\tstu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>stuaverage<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>stutotal<span class=\"token operator\">/</span>x<span class=\"token punctuation\">;</span><span class=\"token comment\">/* 将整型数强转为浮点数后进行浮点数运算，确保数据的准确性 */</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(student %d)Total:%d\\t\\tAverage:%6.2f\\n\"</span><span class=\"token punctuation\">,</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>stutotal<span class=\"token punctuation\">,</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>stuaverage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre><span class=\"token comment\">/* 将学生成绩按从高到低的顺序排列 */</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">SortStuScoreUpdown</span><span class=\"token punctuation\">(</span>STUDENT stu<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>stutotal <span class=\"token operator\">&lt;</span> stu<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>stutotal<span class=\"token punctuation\">)</span> <span class=\"token function\">Swap</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>stu<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">/* 如果前面的学生的总成绩小于后面的学生的总成绩，则交换两个学生信息结构体位置 */</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\t  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre></pre></td></tr><tr><td data-num=\"94\"></td><td><pre><span class=\"token comment\">/* 将学生成绩按从低到高的顺序排列 */</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">SortStuScoreDownup</span><span class=\"token punctuation\">(</span>STUDENT stu<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>stutotal <span class=\"token operator\">></span> stu<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>stutotal<span class=\"token punctuation\">)</span> <span class=\"token function\">Swap</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>stu<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">/* 如果前面的学生的总成绩大于后面的学生的总成绩，则交换两个学生信息结构体位置 */</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>\t  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre></pre></td></tr><tr><td data-num=\"106\"></td><td><pre><span class=\"token comment\">/* 将学生学号按从小到大排列 */</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">SortNumberDownup</span><span class=\"token punctuation\">(</span>STUDENT stu<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>number <span class=\"token operator\">></span> stu<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">)</span> <span class=\"token function\">Swap</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>stu<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">/* 如果前面的学生的学号大于后面的学生的学号，则交换两个学生信息结构体位置 */</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>\t  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre></pre></td></tr><tr><td data-num=\"118\"></td><td><pre><span class=\"token comment\">/* 将学生姓名按字典顺序排列 */</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">SortName</span><span class=\"token punctuation\">(</span>STUDENT stu<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">strcmp</span><span class=\"token punctuation\">(</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>stu<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token function\">Swap</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>stu<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">/* 如果前面的学生的字母序位大于后面的学生的字母序位，则交换两个学生信息结构体位置 */</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>\t  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre></pre></td></tr><tr><td data-num=\"130\"></td><td><pre><span class=\"token comment\">/* 按学号查找学生并输出学生信息 */</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">SearchNumber</span><span class=\"token punctuation\">(</span>STUDENT stu<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>\t<span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">,</span>flag<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token comment\">/* 未找到学生时 flag 初始化为 0*/</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>\t<span class=\"token keyword\">long</span> temp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Input the number:\\t\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>\t<span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%ld\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>\t<span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>\t<span class=\"token function\">SortStuScoreUpdown</span><span class=\"token punctuation\">(</span>stu<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">/* 将学生按照成绩从高到低排序以获得学生的排名情况 */</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token comment\">/* 将录入的学生学号与待查学号进行一一比对 */</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>number<span class=\"token operator\">==</span>temp<span class=\"token punctuation\">)</span><span class=\"token comment\">/* 找到与待查学号一致的学号 */</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>\t\t\tflag<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span><span class=\"token comment\">/* 找到学号对应的学生时，flag 被赋值为 1*/</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Name:     \\tNumber:      \\tPosition:\\tTotalscore:\\tAveragescore:\\t  Subjectscores:\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%-10s\\t%-13ld\\t%9d\\t%11d\\t%13.2f\\t\"</span><span class=\"token punctuation\">,</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">,</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>stutotal<span class=\"token punctuation\">,</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>stuaverage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span>x<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>\t\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%4d\"</span><span class=\"token punctuation\">,</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>score<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>flag<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token comment\">/* 未找到学号对应学生时，flag 的值仍为 0*/</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\nNot find!\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre></pre></td></tr><tr><td data-num=\"160\"></td><td><pre><span class=\"token comment\">/* 按姓名查找学生并输出学生信息 */</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">SearchName</span><span class=\"token punctuation\">(</span>STUDENT stu<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>\t<span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">,</span>flag<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token comment\">/* 未找到学生时 flag 初始化为 0*/</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>\t<span class=\"token keyword\">char</span> tep<span class=\"token punctuation\">[</span>M<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Input the name:\\t\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>  <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" %s\"</span><span class=\"token punctuation\">,</span>tep<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>\t<span class=\"token function\">SortStuScoreUpdown</span><span class=\"token punctuation\">(</span>stu<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">/* 将学生按照成绩从高到低排序以获得学生的排名情况 */</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token comment\">/* 将录入的学生姓名与待查姓名进行一一比对 */</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">strcmp</span><span class=\"token punctuation\">(</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>tep<span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token comment\">/* 找到与待查姓名字母顺序完全一致的姓名 */</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>\t\t\tflag<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span><span class=\"token comment\">/* 找到学号对应的学生时，flag 被赋值为 1*/</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Name:     \\tNumber:      \\tPosition:\\tTotalscore:\\tAveragescore:\\t  Subjectscores:\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%-10s\\t%-13ld\\t%9d\\t%11d\\t%13.2f\\t\"</span><span class=\"token punctuation\">,</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">,</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>stutotal<span class=\"token punctuation\">,</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>stuaverage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span>x<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>\t\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%4d\"</span><span class=\"token punctuation\">,</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>score<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>flag<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token comment\">/* 未找到学号对应学生时，flag 的值仍为 0*/</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\nNot find!\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre></pre></td></tr><tr><td data-num=\"189\"></td><td><pre><span class=\"token comment\">/* 统计并打印出各学科各阶段人数及占比 */</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">Analysis</span><span class=\"token punctuation\">(</span>STUDENT stu<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>\t<span class=\"token keyword\">int</span> a<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>\t<span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre>\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span>x<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre>\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>\t\t    <span class=\"token keyword\">if</span>    <span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token operator\">>=</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>score<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token number\">90</span><span class=\"token operator\">&lt;=</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>score<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>    a<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre>\t\t    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token number\">89</span><span class=\"token operator\">>=</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>score<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token number\">80</span><span class=\"token operator\">&lt;=</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>score<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>    b<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre>\t\t    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token number\">79</span><span class=\"token operator\">>=</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>score<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token number\">70</span><span class=\"token operator\">&lt;=</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>score<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>    c<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre>\t\t    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token number\">69</span><span class=\"token operator\">>=</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>score<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token number\">60</span><span class=\"token operator\">&lt;=</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>score<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>    d<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre>\t\t    <span class=\"token keyword\">else</span>                                                           e<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"203\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"205\"></td><td><pre>\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span>x<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Subject No.%d:\\n\"</span><span class=\"token punctuation\">,</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"208\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Excellent:%d\\tpercent:%.2f%%\\n\"</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token number\">100</span><span class=\"token operator\">*</span>a<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">/</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"209\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Good:     %d\\tpercent:%.2f%%\\n\"</span><span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token number\">100</span><span class=\"token operator\">*</span>b<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">/</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"210\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Medium:   %d\\tpercent:%.2f%%\\n\"</span><span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token number\">100</span><span class=\"token operator\">*</span>c<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">/</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"211\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Pass:     %d\\tpercent:%.2f%%\\n\"</span><span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token number\">100</span><span class=\"token operator\">*</span>d<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">/</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"212\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Failed:   %d\\tpercent:%.2f%%\\n\"</span><span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token number\">100</span><span class=\"token operator\">*</span>e<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">/</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"213\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"214\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"215\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"216\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"217\"></td><td><pre></pre></td></tr><tr><td data-num=\"218\"></td><td><pre><span class=\"token comment\">/* 输出各学生的学生信息及各课程的总分和均分 */</span></pre></td></tr><tr><td data-num=\"219\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">List</span><span class=\"token punctuation\">(</span>STUDENT stu<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> subtotal<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> subaverage<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"220\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"221\"></td><td><pre>\t<span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"222\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Name:     \\tNumber:      \\tTotalscore:\\tAveragescore:\\tSub 1:Sub 2:Sub 3:Sub 4:Sub 5:Sub 6:\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"223\"></td><td><pre>\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"224\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"225\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%-10s\\t%-13ld\\t%11d\\t%13.2f\\t\"</span><span class=\"token punctuation\">,</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">,</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>stutotal<span class=\"token punctuation\">,</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>stuaverage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"226\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span>x<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"227\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"228\"></td><td><pre>            <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%6d\"</span><span class=\"token punctuation\">,</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>score<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"229\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"230\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"231\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"232\"></td><td><pre>     <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"          \\t             \\t           \\t           \\t\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"233\"></td><td><pre>     <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span>x<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"234\"></td><td><pre>     <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"235\"></td><td><pre>      <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%6d\"</span><span class=\"token punctuation\">,</span>subtotal<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"236\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"237\"></td><td><pre>      <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"238\"></td><td><pre>      <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"         \\t             \\t           \\t          \\t\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"239\"></td><td><pre>      <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span>x<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"240\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"241\"></td><td><pre>          <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%6.2f\"</span><span class=\"token punctuation\">,</span>subaverage<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"242\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"243\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"244\"></td><td><pre></pre></td></tr><tr><td data-num=\"245\"></td><td><pre><span class=\"token comment\">/* 打印姓名，学号，总分，均分及各学科的分数 */</span></pre></td></tr><tr><td data-num=\"246\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">Print1</span><span class=\"token punctuation\">(</span>STUDENT stu<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"247\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"248\"></td><td><pre>\t<span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"249\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Name:     \\tNumber:\\t      Totalscore:\\tAveragescore:\\tSubjectscore:\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"250\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"251\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"252\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%-10s\\t%-13ld\\t%9d\\t%13.2f\\t\"</span><span class=\"token punctuation\">,</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">,</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>stutotal<span class=\"token punctuation\">,</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>stuaverage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"253\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span>x<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"254\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"255\"></td><td><pre>            <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%-6d\"</span><span class=\"token punctuation\">,</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>score<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"256\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"257\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"258\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"259\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"260\"></td><td><pre></pre></td></tr><tr><td data-num=\"261\"></td><td><pre><span class=\"token comment\">/* 打印各课程的总分和均分 */</span></pre></td></tr><tr><td data-num=\"262\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">Print2</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> subtotal<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> subaverage<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"263\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"264\"></td><td><pre>  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"265\"></td><td><pre>  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>x<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"266\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"267\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"subtotal No.%d: %-6d\\tsubaverage No.%d: %-6.2f\\n\"</span><span class=\"token punctuation\">,</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>subtotal<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>subaverage<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"268\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"269\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"270\"></td><td><pre></pre></td></tr><tr><td data-num=\"271\"></td><td><pre><span class=\"token comment\">/* 将信息写入文件并保存 */</span></pre></td></tr><tr><td data-num=\"272\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">WritetoFile</span><span class=\"token punctuation\">(</span>STUDENT stu<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> subtotal<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> subaverage<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"273\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"274\"></td><td><pre>  FILE <span class=\"token operator\">*</span>fp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"275\"></td><td><pre>  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"276\"></td><td><pre>  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>fp<span class=\"token operator\">=</span><span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"score.txt\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token comment\">/* 检验文件是否打开成功 */</span></pre></td></tr><tr><td data-num=\"277\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"278\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Failure to open score.txt!\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"279\"></td><td><pre>    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"280\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"281\"></td><td><pre>  <span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">,</span><span class=\"token string\">\"%d\\t%d\\n\"</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"282\"></td><td><pre>  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"283\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"284\"></td><td><pre>    <span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">,</span><span class=\"token string\">\"%-10s\\t%-13ld\\t%11d\\t%13.2f\\t\"</span><span class=\"token punctuation\">,</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">,</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>stutotal<span class=\"token punctuation\">,</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>stuaverage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"285\"></td><td><pre>     <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span>x<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"286\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"287\"></td><td><pre>            <span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">,</span><span class=\"token string\">\"%-6d\\n\"</span><span class=\"token punctuation\">,</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>score<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"288\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"289\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"290\"></td><td><pre>  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span>x<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"291\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"292\"></td><td><pre>      <span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">,</span><span class=\"token string\">\"%d\\t%f\\n\"</span><span class=\"token punctuation\">,</span>subtotal<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>subaverage<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"293\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"294\"></td><td><pre>  <span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"295\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"296\"></td><td><pre></pre></td></tr><tr><td data-num=\"297\"></td><td><pre><span class=\"token comment\">/* 从文件中读取出信息 */</span></pre></td></tr><tr><td data-num=\"298\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">ReadfromFile</span><span class=\"token punctuation\">(</span>STUDENT stu<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> subtotal<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> subaverage<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>n<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"299\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"300\"></td><td><pre>  FILE <span class=\"token operator\">*</span>fp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"301\"></td><td><pre>  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"302\"></td><td><pre>  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>fp<span class=\"token operator\">=</span><span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"score.txt\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token comment\">/* 检验文件是否打开成功 */</span></pre></td></tr><tr><td data-num=\"303\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"304\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Failure to open score.txt!\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"305\"></td><td><pre>    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"306\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"307\"></td><td><pre>   <span class=\"token function\">fscanf</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">,</span><span class=\"token string\">\"%d\\t%d\\n\"</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"308\"></td><td><pre>  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token operator\">*</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"309\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"310\"></td><td><pre>      <span class=\"token function\">fscanf</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">,</span><span class=\"token string\">\"%10s\"</span><span class=\"token punctuation\">,</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"311\"></td><td><pre>      <span class=\"token function\">fscanf</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">,</span><span class=\"token string\">\"%13ld\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"312\"></td><td><pre>      <span class=\"token function\">fscanf</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">,</span><span class=\"token string\">\"%11d\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>stutotal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"313\"></td><td><pre>      <span class=\"token function\">fscanf</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">,</span><span class=\"token string\">\"%f\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>stuaverage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"314\"></td><td><pre>      <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span><span class=\"token operator\">*</span>x<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"315\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"316\"></td><td><pre>        <span class=\"token function\">fscanf</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">,</span><span class=\"token string\">\"%6d\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>stu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>score<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"317\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"318\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"319\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span><span class=\"token operator\">*</span>x<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"320\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"321\"></td><td><pre>        <span class=\"token function\">fscanf</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">,</span><span class=\"token string\">\"%d\\t%f\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>subtotal<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>subaverage<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"322\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"323\"></td><td><pre>    <span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"324\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"325\"></td><td><pre></pre></td></tr><tr><td data-num=\"326\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"327\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"328\"></td><td><pre>\t<span class=\"token keyword\">int</span> m<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"329\"></td><td><pre>\t<span class=\"token keyword\">int</span> subtotal<span class=\"token punctuation\">[</span>X<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"330\"></td><td><pre>\t<span class=\"token keyword\">float</span> subaverage<span class=\"token punctuation\">[</span>X<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"331\"></td><td><pre>\tSTUDENT stu<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"332\"></td><td><pre>\t<span class=\"token keyword\">do</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"333\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Input the total number of students:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"334\"></td><td><pre>        <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"335\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Input the total number of subjects:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"336\"></td><td><pre>        <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"337\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">&lt;=</span><span class=\"token number\">0</span><span class=\"token operator\">||</span>n<span class=\"token operator\">></span><span class=\"token number\">30</span><span class=\"token operator\">||</span>x<span class=\"token operator\">&lt;</span><span class=\"token number\">1</span><span class=\"token operator\">||</span>x<span class=\"token operator\">></span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">/* 检测学生总人数及学科总数是否符合要求 */</span></pre></td></tr><tr><td data-num=\"338\"></td><td><pre> KG<span class=\"token operator\">:</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\\n1.Input record\\n2.Calculate total and average score of every course\\n3.Calculate total and average score of every student\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"339\"></td><td><pre>      <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"4.Sort in descending order by total score of every student\\n5.Sort in ascending order by total score of every student\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"340\"></td><td><pre>      <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"6.Sort in ascending order by number\\n7.Sort in dictionary order by name\\n8.Search by number\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"341\"></td><td><pre>      <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"9.Search by name\\n10.Statistic analysis for every course\\n11.List record\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"342\"></td><td><pre>      <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"12.Write to a file\\n13.Read from a file\\n0.Exit\\n\\nPlease enter your choice:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"343\"></td><td><pre>      <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">/* 打印出菜单栏以供用户选择操作 */</span></pre></td></tr><tr><td data-num=\"344\"></td><td><pre>    <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token comment\">/* 利用 switch 语句实现菜单中的各个功能 */</span></pre></td></tr><tr><td data-num=\"345\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"346\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span> <span class=\"token function\">Input</span><span class=\"token punctuation\">(</span>stu<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"347\"></td><td><pre>               <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"348\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span> <span class=\"token function\">SubCalculate</span><span class=\"token punctuation\">(</span>stu<span class=\"token punctuation\">,</span>subtotal<span class=\"token punctuation\">,</span>subaverage<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"349\"></td><td><pre>               <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"350\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span><span class=\"token function\">StuCalculate</span><span class=\"token punctuation\">(</span>stu<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"351\"></td><td><pre>               <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"352\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span> <span class=\"token function\">SortStuScoreUpdown</span><span class=\"token punctuation\">(</span>stu<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"353\"></td><td><pre>               <span class=\"token function\">Print1</span><span class=\"token punctuation\">(</span>stu<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"354\"></td><td><pre>              <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"355\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span> <span class=\"token function\">SortStuScoreDownup</span><span class=\"token punctuation\">(</span>stu<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"356\"></td><td><pre>              <span class=\"token function\">Print1</span><span class=\"token punctuation\">(</span>stu<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"357\"></td><td><pre>             <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"358\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">6</span><span class=\"token operator\">:</span> <span class=\"token function\">SortNumberDownup</span><span class=\"token punctuation\">(</span>stu<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"359\"></td><td><pre>              <span class=\"token function\">Print1</span><span class=\"token punctuation\">(</span>stu<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"360\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"361\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">7</span><span class=\"token operator\">:</span> <span class=\"token function\">SortName</span><span class=\"token punctuation\">(</span>stu<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"362\"></td><td><pre>              <span class=\"token function\">Print1</span><span class=\"token punctuation\">(</span>stu<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"363\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"364\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">8</span><span class=\"token operator\">:</span> <span class=\"token function\">SearchNumber</span><span class=\"token punctuation\">(</span>stu<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"365\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"366\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">9</span><span class=\"token operator\">:</span> <span class=\"token function\">SearchName</span><span class=\"token punctuation\">(</span>stu<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"367\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"368\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">10</span><span class=\"token operator\">:</span> <span class=\"token function\">Analysis</span><span class=\"token punctuation\">(</span>stu<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"369\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"370\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">11</span><span class=\"token operator\">:</span> <span class=\"token function\">List</span><span class=\"token punctuation\">(</span>stu<span class=\"token punctuation\">,</span>subtotal<span class=\"token punctuation\">,</span>subaverage<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"371\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"372\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">12</span><span class=\"token operator\">:</span><span class=\"token function\">WritetoFile</span><span class=\"token punctuation\">(</span>stu<span class=\"token punctuation\">,</span>subtotal<span class=\"token punctuation\">,</span>subaverage<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"373\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"374\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">13</span><span class=\"token operator\">:</span><span class=\"token function\">ReadfromFile</span><span class=\"token punctuation\">(</span>stu<span class=\"token punctuation\">,</span>subtotal<span class=\"token punctuation\">,</span>subaverage<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>n<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"375\"></td><td><pre>                <span class=\"token function\">Print1</span><span class=\"token punctuation\">(</span>stu<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"376\"></td><td><pre>                <span class=\"token function\">Print2</span><span class=\"token punctuation\">(</span>subtotal<span class=\"token punctuation\">,</span>subaverage<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"377\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"378\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span> <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"379\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"380\"></td><td><pre>   <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>m<span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token operator\">||</span>m<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token operator\">||</span>m<span class=\"token operator\">></span><span class=\"token number\">13</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">goto</span> KG<span class=\"token punctuation\">;</span><span class=\"token comment\">/* 检测用户选择是否出错，并利用 goto 语句实现跳转 */</span></pre></td></tr><tr><td data-num=\"381\"></td><td><pre>   <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"382\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>以上就是该实验的全部代码。（<s>毫无保留，直接裸奔！！！</s> ）</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/20210325193106921.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpc3NNb29uXw==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>实验数据我就不给了吧。</p>\n<p><strong>本人王者荣耀迷和 KPL 迷，实验数据全是英雄名和选手名（说实话，选手们的 ID 确实好听），估计助教在看实验的时候都笑出猪叫了。（<s>助教笑出猪叫？？？</s> 啪，又来套娃！）</strong></p>\n<p>有相同兴趣的小伙伴们可以找我一起观赛掉分。<s>本人厨艺精湛，饭多管饱！！！</s></p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/20210325194414574.jpg#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p><strong>敲黑板！！！</strong></p>\n<p><strong>如果大佬们不幸看了我的代码，欢迎指导！！！（毕竟这时大一刚学的时候写的，估计 bug 一堆，很多代码也不是最优的）<br>\n如果萌新们不幸看了我的代码，欢迎交流！！！（如果你也备受这个实验困扰，希望这篇文章能够帮助到你）</strong></p>\n<p><strong>最后，有被学生成绩管理系统和图书馆管理系统折磨过的同仁，举个爪子示意一下，让我知道我并不孤单！</strong></p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/2021032519443410.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpc3NNb29uXw==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n",
            "tags": [
                "C/CPP语言",
                "学生成绩管理系统",
                "C语言",
                "实验"
            ]
        },
        {
            "id": "https://www.liangmeng.xyz/Hello-MyWorld/hello-world/",
            "url": "https://www.liangmeng.xyz/Hello-MyWorld/hello-world/",
            "title": "欢迎来到我的世界",
            "date_published": "2022-04-06T14:56:44.788Z",
            "content_html": "<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting</span> or you can ask me on <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==\">GitHub</span>.</p>\n<h2 id=\"quick-start\"><a class=\"anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo new <span class=\"token string\">\"My New Post\"</span></pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<h3 id=\"run-server\"><a class=\"anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo server</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<h3 id=\"generate-static-files\"><a class=\"anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo generate</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo deploy</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n",
            "tags": [
                "我的世界",
                "欢迎来到我的世界",
                "helloWorld"
            ]
        },
        {
            "id": "https://www.liangmeng.xyz/LeetCode/%E5%89%91%E6%8C%87Offer/53-II/",
            "url": "https://www.liangmeng.xyz/LeetCode/%E5%89%91%E6%8C%87Offer/53-II/",
            "title": "53-II",
            "date_published": "2021-06-07T13:15:00.000Z",
            "content_html": "<h2 id=\"题目简述\"><a class=\"anchor\" href=\"#题目简述\">#</a> 题目简述</h2>\n<p>一个长度为 n-1 的递增排序数组中的所有数字都是唯一的，并且每个数字都在范围 0～n-1 之内。在范围 0～n-1 内的 n 个数字中有且只有一个数字不在该数组中，请找出这个数字。</p>\n<h2 id=\"题解示例\"><a class=\"anchor\" href=\"#题解示例\">#</a> 题解示例</h2>\n<p>示例 1:</p>\n<p>输入: [0,1,3]<br>\n 输出: 2<br>\n 示例 2:</p>\n<p>输入: [0,1,2,3,4,5,6,7,9]<br>\n 输出: 8</p>\n<h2 id=\"数据范围\"><a class=\"anchor\" href=\"#数据范围\">#</a> 数据范围</h2>\n<p>1 &lt;= 数组长度 &lt;= 10000</p>\n<h2 id=\"标记难度\"><a class=\"anchor\" href=\"#标记难度\">#</a> 标记难度</h2>\n<p>通过次数：126,612<br>\n 提交次数：284,562<br>\n 通过率：44.5%</p>\n<h2 id=\"问题简析\"><a class=\"anchor\" href=\"#问题简析\">#</a> 问题简析</h2>\n<p>对该数组进行<strong>二分查找</strong>即可。<br>\n若计算得到的中值与数组中值相等，则缺失的数字在右区间中；<br>\n若计算得到的中值与数组中值不相等，则缺失的数字在左区间中；</p>\n<p>最简单的方法便是遍历数组，如此则未能将<strong>数组有序</strong>的条件合理利用，其时间复杂度也相对较大。</p>\n<h2 id=\"python3代码\"><a class=\"anchor\" href=\"#python3代码\">#</a> python3 代码</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">missingNumber</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">:</span> List<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        i<span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span>     </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">while</span> i <span class=\"token operator\">&lt;=</span> j<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span>j<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token keyword\">if</span> nums<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> mid<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                i <span class=\"token operator\">=</span> mid<span class=\"token operator\">+</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                j <span class=\"token operator\">=</span> mid<span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> i</pre></td></tr></table></figure><h2 id=\"c语言代码\"><a class=\"anchor\" href=\"#c语言代码\">#</a> C 语言代码</h2>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">missingNumber</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token operator\">*</span> nums<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> numsSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">int</span> left <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> right <span class=\"token operator\">=</span> numsSize<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> mid<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;=</span> right<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        mid <span class=\"token operator\">=</span> left <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>right <span class=\"token operator\">-</span> left<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> mid<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            right <span class=\"token operator\">=</span> mid <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            left <span class=\"token operator\">=</span> mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">return</span> left<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"c代码copy\"><a class=\"anchor\" href=\"#c代码copy\">#</a> C++ 代码（Copy）</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">missingNumber</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">int</span> left <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> right <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;=</span> right<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">int</span> mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">+</span> right<span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> mid<span class=\"token punctuation\">)</span> left <span class=\"token operator\">=</span> mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">else</span> right <span class=\"token operator\">=</span> mid <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">return</span> left<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 注意最后 left 不等于 right，只能返回 left</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"大佬专属代码\"><a class=\"anchor\" href=\"#大佬专属代码\">#</a> 大佬专属代码</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>敲黑板！！！</strong><br>\n<strong>有序数组二分法！！！有序数组二分法！！！有序数组二分法！！！（重要的事情说三遍）</strong></p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/20210607210749915.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpc3NNb29uXw==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n",
            "tags": [
                "力扣题库",
                "剑指0ffer",
                "53-II"
            ]
        },
        {
            "id": "https://www.liangmeng.xyz/LeetCode/%E9%9A%BE%E5%BA%A6%E7%AE%80%E5%8D%95/11-%E6%9C%9F%E6%9C%9B%E4%B8%AA%E6%95%B0%E7%BB%9F%E8%AE%A1/",
            "url": "https://www.liangmeng.xyz/LeetCode/%E9%9A%BE%E5%BA%A6%E7%AE%80%E5%8D%95/11-%E6%9C%9F%E6%9C%9B%E4%B8%AA%E6%95%B0%E7%BB%9F%E8%AE%A1/",
            "title": "11-期望个数统计",
            "date_published": "2021-06-06T09:16:00.000Z",
            "content_html": "<h2 id=\"题目简述\"><a class=\"anchor\" href=\"#题目简述\">#</a> 题目简述</h2>\n<p>某互联网公司一年一度的春招开始了，一共有 n 名面试者入选。每名面试者都会提交一份简历，公司会根据提供的简历资料产生一个预估的能力值，数值越大代表越有可能通过面试。</p>\n<p>小 A 和小 B 负责审核面试者，他们均有所有面试者的简历，并且将各自根据面试者能力值从大到小的顺序浏览。由于简历事先被打乱过，能力值相同的简历的出现顺序是从它们的全排列中等可能地取一个。现在给定 n 名面试者的能力值 scores，设 X 代表小 A 和小 B 的浏览顺序中出现在同一位置的简历数，求 X 的期望。</p>\n<p>提示：离散的非负随机变量的期望计算公式为   E (X) = Σ(k=1, ∞) kPr (X = k)。在本题中，由于 X 的取值为 0 到 n 之间，期望计算公式可以是 E (X) = Σ(k=1, n) kPr (X = k)。</p>\n<h2 id=\"题解示例\"><a class=\"anchor\" href=\"#题解示例\">#</a> 题解示例</h2>\n<p>示例 1：</p>\n<p>输入：scores = [1,2,3]</p>\n<p>输出：3</p>\n<p>解释：由于面试者能力值互不相同，小 A 和小 B 的浏览顺序一定是相同的。X 的期望是 3 。</p>\n<p>示例 2：</p>\n<p>输入：scores = [1,1]</p>\n<p>输出：1</p>\n<p>解释：设两位面试者的编号为 0, 1。由于他们的能力值都是 1，小 A 和小 B 的浏览顺序都为从全排列 [[0,1],[1,0]] 中等可能地取一个。如果小 A 和小 B 的浏览顺序都是 [0,1] 或者 [1,0] ，那么出现在同一位置的简历数为 2 ，否则是 0 。所以 X 的期望是 (2+0+2+0) * 1/4 = 1</p>\n<p>示例 3：</p>\n<p>输入：scores = [1,1,2]</p>\n<p>输出：2</p>\n<h2 id=\"数据范围\"><a class=\"anchor\" href=\"#数据范围\">#</a> 数据范围</h2>\n<p>1 &lt;= scores.length &lt;= 10^5<br>\n0 &lt;= scores[i] &lt;= 10^6</p>\n<h2 id=\"标记难度\"><a class=\"anchor\" href=\"#标记难度\">#</a> 标记难度</h2>\n<p>难度：简单<br>\n通过次数：6051<br>\n 提交次数：8963<br>\n 通过率：67.5%</p>\n<h2 id=\"问题解析\"><a class=\"anchor\" href=\"#问题解析\">#</a> 问题解析</h2>\n<p>数组中的元素可以分为两种：单元素和多元素。</p>\n<p>对于单元素，由于两位面试官都是根据能力值从大到小的顺序浏览，假设数组元素按数值非递 c 增的顺序排列，那么其在数组中的顺序一定是相同的，即单元素在两位面试官的浏览顺序中一定是出现在同一位置的，则单元素的数学期望为 1。</p>\n<p>对于多元素，假设该元素出现 m 次，编号为 0，1，2，...，m-1。假设 m = 3，则全排列有如下 6 种情况：（0,1,2），（0,2,1），（1,0,2），（1,2,0），（2,0,1），（2,1,0），现两个面试官分别从六种顺序里挑选一种，易知每个位置编号相同的概率均为 1/3，那么可以得出两位面试官在同一位置选取同一元素的概率为 1/n，则多元素的数学期望为 1/n × n = 1。</p>\n<p>可以得出，无论是单元素还是多元素，其数学期望均为 1，即整个数组的数学期望等于数组中数值不同的元素的个数和。</p>\n<h2 id=\"python3代码\"><a class=\"anchor\" href=\"#python3代码\">#</a> python3 代码</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">expectNumber</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> scores<span class=\"token punctuation\">:</span> List<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>scores<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"c语言代码\"><a class=\"anchor\" href=\"#c语言代码\">#</a> C 语言代码</h2>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">expectNumber</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token operator\">*</span> scores<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> scoresSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">int</span> hash<span class=\"token punctuation\">[</span><span class=\"token number\">1000000</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> scoresSize<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hash<span class=\"token punctuation\">[</span>scores<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            hash<span class=\"token punctuation\">[</span>scores<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            result<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"c代码\"><a class=\"anchor\" href=\"#c代码\">#</a> C++ 代码</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">expectNumber</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> scores<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token generic-function\"><span class=\"token function\">set</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>scores<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> scores<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"大佬专属代码\"><a class=\"anchor\" href=\"#大佬专属代码\">#</a> 大佬专属代码</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 暂时没看到任何 “出类拔萃” 的代码</span></pre></td></tr></table></figure><p><strong>敲黑板！！！</strong><br>\n<strong>这道题关键在于看懂题目，只能说：概率论 yyds！！！</strong></p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/20210606171417228.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpc3NNb29uXw==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n",
            "tags": [
                "力扣题库",
                "难度简单",
                "期望个数统计"
            ]
        },
        {
            "id": "https://www.liangmeng.xyz/LeetCode/%E9%9A%BE%E5%BA%A6%E4%B8%AD%E7%AD%89/54-%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5/",
            "url": "https://www.liangmeng.xyz/LeetCode/%E9%9A%BE%E5%BA%A6%E4%B8%AD%E7%AD%89/54-%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5/",
            "title": "54-螺旋矩阵",
            "date_published": "2021-06-04T09:34:00.000Z",
            "content_html": "<h2 id=\"题目简述\"><a class=\"anchor\" href=\"#题目简述\">#</a> 题目简述</h2>\n<p>给你一个 m 行 n 列的矩阵 matrix ，请按照 顺时针螺旋顺序 ，返回矩阵中的所有元素。</p>\n<h2 id=\"题解示例\"><a class=\"anchor\" href=\"#题解示例\">#</a> 题解示例</h2>\n<p>示例 1：<br>\n输入：matrix = [[1,2,3],[4,5,6],[7,8,9]]<br>\n 输出：[1,2,3,6,9,8,7,4,5]<br>\n<img data-src=\"https://img-blog.csdnimg.cn/20210604152606550.png\" alt=\"在这里插入图片描述\"><br>\n示例 2：<br>\n输入：matrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]<br>\n 输出：[1,2,3,4,8,12,11,10,9,5,6,7]<br>\n<img data-src=\"https://img-blog.csdnimg.cn/20210604152628828.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpc3NNb29uXw==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"数据范围\"><a class=\"anchor\" href=\"#数据范围\">#</a> 数据范围</h2>\n<p>m = matrix.length<br>\nn = matrix[i].length<br>\n1 &lt;= m, n &lt;= 10<br>\n-100 &lt;= matrix[i][j] &lt;= 100</p>\n<h2 id=\"标记难度\"><a class=\"anchor\" href=\"#标记难度\">#</a> 标记难度</h2>\n<p>难度：中等<br>\n通过次数：158025<br>\n 提交次数：335,777<br>\n 通过率：47.1%</p>\n<h2 id=\"问题解析\"><a class=\"anchor\" href=\"#问题解析\">#</a> 问题解析</h2>\n<p>本题主要考察矩阵的遍历，还涉及到递归、矩阵转置等知识。</p>\n<p>最直观的方法就是按圈遍历矩阵，从外到里一圈一圈遍历，即先遍历矩阵的最外圈，然后递归地遍历其子矩阵的最外圈。要注意的是，单行或单列需要特殊处理。</p>\n<h2 id=\"python3代码\"><a class=\"anchor\" href=\"#python3代码\">#</a> python3 代码</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">spiralOrder</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> matrix<span class=\"token punctuation\">:</span> List<span class=\"token punctuation\">[</span>List<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> List<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    \trow<span class=\"token punctuation\">,</span> col <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>matrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>matrix<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">getOutermostCircle</span><span class=\"token punctuation\">(</span>row_start<span class=\"token punctuation\">,</span> row_end<span class=\"token punctuation\">,</span> col_start<span class=\"token punctuation\">,</span> col_end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">if</span> row_start <span class=\"token operator\">></span> row_end <span class=\"token keyword\">or</span> col_start <span class=\"token operator\">></span> col_end<span class=\"token punctuation\">:</span><span class=\"token comment\"># 防错</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">elif</span> row_start <span class=\"token operator\">==</span> row_end<span class=\"token punctuation\">:</span> <span class=\"token comment\">#单行</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                circle <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>col_start<span class=\"token punctuation\">,</span> col_end<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 上边</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                    circle<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>matrix<span class=\"token punctuation\">[</span>row_start<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token keyword\">return</span> circle</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token comment\"># return matrix[row_start][col_start:col_end+1]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">elif</span> col_start <span class=\"token operator\">==</span> col_end<span class=\"token punctuation\">:</span> <span class=\"token comment\">#单列</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                circle <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>row_start<span class=\"token punctuation\">,</span> row_end<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                    circle<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>matrix<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col_start<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token keyword\">return</span> circle</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 多行多列</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                circle <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>col_start<span class=\"token punctuation\">,</span> col_end<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 上边</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                    circle<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>matrix<span class=\"token punctuation\">[</span>row_start<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                    <span class=\"token comment\"># circle.extend(matrix[row_start][col_start:col_end+1])</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>row_start<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> row_end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 右边</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                    circle<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>matrix<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col_end<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>col_end<span class=\"token punctuation\">,</span> col_start<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 下边</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                    circle<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>matrix<span class=\"token punctuation\">[</span>row_end<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                    <span class=\"token comment\"># circle.extend(reversed(matrix[row_end][col_start:col_end+1]))</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>row_end<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> row_start<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 左边</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                    circle<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>matrix<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col_start<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                <span class=\"token keyword\">return</span> circle <span class=\"token operator\">+</span> getOutermostCircle<span class=\"token punctuation\">(</span>row_start<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> row_end<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> col_start<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> col_end<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 拼接</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">return</span> getOutermostCircle<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> row<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> col<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"c语言代码官方\"><a class=\"anchor\" href=\"#c语言代码官方\">#</a> C 语言代码（官方）</h2>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span><span class=\"token operator\">*</span> <span class=\"token function\">spiralOrder</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span> matrix<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> matrixSize<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token operator\">*</span> matrixColSize<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token operator\">*</span> returnSize<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>matrixSize <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> matrixColSize<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token operator\">*</span>returnSize <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">int</span> rows <span class=\"token operator\">=</span> matrixSize<span class=\"token punctuation\">,</span> columns <span class=\"token operator\">=</span> matrixColSize<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">int</span> total <span class=\"token operator\">=</span> rows <span class=\"token operator\">*</span> columns<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">int</span><span class=\"token operator\">*</span> order <span class=\"token operator\">=</span> <span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token operator\">*</span>returnSize <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">int</span> left <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> right <span class=\"token operator\">=</span> columns <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> top <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> bottom <span class=\"token operator\">=</span> rows <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;=</span> right <span class=\"token operator\">&amp;&amp;</span> top <span class=\"token operator\">&lt;=</span> bottom<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> column <span class=\"token operator\">=</span> left<span class=\"token punctuation\">;</span> column <span class=\"token operator\">&lt;=</span> right<span class=\"token punctuation\">;</span> column<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            order<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>returnSize<span class=\"token punctuation\">)</span><span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">[</span>top<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>column<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> row <span class=\"token operator\">=</span> top <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> row <span class=\"token operator\">&lt;=</span> bottom<span class=\"token punctuation\">;</span> row<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            order<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>returnSize<span class=\"token punctuation\">)</span><span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;</span> right <span class=\"token operator\">&amp;&amp;</span> top <span class=\"token operator\">&lt;</span> bottom<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> column <span class=\"token operator\">=</span> right <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> column <span class=\"token operator\">></span> left<span class=\"token punctuation\">;</span> column<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                order<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>returnSize<span class=\"token punctuation\">)</span><span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">[</span>bottom<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>column<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> row <span class=\"token operator\">=</span> bottom<span class=\"token punctuation\">;</span> row <span class=\"token operator\">></span> top<span class=\"token punctuation\">;</span> row<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                order<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>returnSize<span class=\"token punctuation\">)</span><span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        left<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        right<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        top<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        bottom<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">return</span> order<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"c官方\"><a class=\"anchor\" href=\"#c官方\">#</a> C++（官方）</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">spiralOrder</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">>></span><span class=\"token operator\">&amp;</span> matrix<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>matrix<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> matrix<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">int</span> rows <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> columns <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> order<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">int</span> left <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> right <span class=\"token operator\">=</span> columns <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> top <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> bottom <span class=\"token operator\">=</span> rows <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;=</span> right <span class=\"token operator\">&amp;&amp;</span> top <span class=\"token operator\">&lt;=</span> bottom<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> column <span class=\"token operator\">=</span> left<span class=\"token punctuation\">;</span> column <span class=\"token operator\">&lt;=</span> right<span class=\"token punctuation\">;</span> column<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                order<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>matrix<span class=\"token punctuation\">[</span>top<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>column<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> row <span class=\"token operator\">=</span> top <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> row <span class=\"token operator\">&lt;=</span> bottom<span class=\"token punctuation\">;</span> row<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                order<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>matrix<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;</span> right <span class=\"token operator\">&amp;&amp;</span> top <span class=\"token operator\">&lt;</span> bottom<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> column <span class=\"token operator\">=</span> right <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> column <span class=\"token operator\">></span> left<span class=\"token punctuation\">;</span> column<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                    order<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>matrix<span class=\"token punctuation\">[</span>bottom<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>column<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> row <span class=\"token operator\">=</span> bottom<span class=\"token punctuation\">;</span> row <span class=\"token operator\">></span> top<span class=\"token punctuation\">;</span> row<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                    order<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>matrix<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            left<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            right<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            top<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            bottom<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">return</span> order<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"大佬专属代码\"><a class=\"anchor\" href=\"#大佬专属代码\">#</a> 大佬专属代码</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">spiralOrder</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> matrix<span class=\"token punctuation\">:</span> List<span class=\"token punctuation\">[</span>List<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> List<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        res <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">while</span> matrix<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            res <span class=\"token operator\">+=</span> matrix<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            matrix <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>matrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> res</pre></td></tr></table></figure><p><strong>敲黑板！！！</strong><br>\n<strong>熟练掌握矩阵、列表的各种函数或方法！！！</strong></p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/20210604172806704.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpc3NNb29uXw==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n",
            "tags": [
                "力扣题库",
                "难度中等",
                "螺旋矩阵"
            ]
        },
        {
            "id": "https://www.liangmeng.xyz/LeetCode/%E9%9A%BE%E5%BA%A6%E7%AE%80%E5%8D%95/22-%E9%BB%91%E7%99%BD%E6%96%B9%E6%A0%BC%E7%94%BB/",
            "url": "https://www.liangmeng.xyz/LeetCode/%E9%9A%BE%E5%BA%A6%E7%AE%80%E5%8D%95/22-%E9%BB%91%E7%99%BD%E6%96%B9%E6%A0%BC%E7%94%BB/",
            "title": "22-黑白方格画",
            "date_published": "2021-06-02T13:40:00.000Z",
            "content_html": "<h2 id=\"题目简述\"><a class=\"anchor\" href=\"#题目简述\">#</a> 题目简述</h2>\n<p>小扣注意到秋日市集上有一个创作黑白方格画的摊位。摊主给每个顾客提供一个固定在墙上的白色画板，画板不能转动。画板上有 n * n 的网格。绘画规则为，小扣可以选择任意多行以及任意多列的格子涂成黑色（<strong>选择的整行、整列均需涂成黑色</strong>），<strong>所选行数、列数均可为 0</strong>。</p>\n<p>小扣希望最终的成品上需要有 k 个黑色格子，请返回小扣共有多少种涂色方案。</p>\n<p>注意：两个方案中任意一个相同位置的格子颜色不同，就视为不同的方案。</p>\n<h2 id=\"题解示例\"><a class=\"anchor\" href=\"#题解示例\">#</a> 题解示例</h2>\n<p>示例 1：</p>\n<p>输入：n = 2, k = 2</p>\n<p>输出：4</p>\n<p>解释：一共有四种不同的方案：<br>\n第一种方案：涂第一列；<br>\n第二种方案：涂第二列；<br>\n第三种方案：涂第一行；<br>\n第四种方案：涂第二行。</p>\n<p>示例 2：</p>\n<p>输入：n = 2, k = 1</p>\n<p>输出：0</p>\n<p>解释：不可行，因为第一次涂色至少会涂两个黑格。</p>\n<p>示例 3：</p>\n<p>输入：n = 2, k = 4</p>\n<p>输出：1</p>\n<p>解释：共有 2*2=4 个格子，仅有一种涂色方案。</p>\n<h2 id=\"数据范围\"><a class=\"anchor\" href=\"#数据范围\">#</a> 数据范围</h2>\n<p>1 &lt;= n &lt;= 6<br>\n0 &lt;= k &lt;= n * n</p>\n<h2 id=\"标记难度\"><a class=\"anchor\" href=\"#标记难度\">#</a> 标记难度</h2>\n<p>难度：简单<br>\n通过次数：8065<br>\n 提交次数：24485<br>\n 通过率：32.9%</p>\n<h2 id=\"问题解析\"><a class=\"anchor\" href=\"#问题解析\">#</a> 问题解析</h2>\n<p>本题主要考察组合和阶乘。</p>\n<p>假设选择涂黑 i 行、j 列，那么此时黑色方块共有 <strong>i*n + j*n - i*j</strong> 块，其中 <strong>i*j</strong> 为行和列重合的块数。</p>\n<p>而在 n 行中取 i 行、在 n 列中取 j 列，即数学中的组合数，其值可以分别为 <strong>n! / (i!(n-i)!)</strong>  、 <strong>n! / (j!(n-j)!)</strong> ，这便涉及到阶乘的计算了。</p>\n<p>要注意的是，当不涂或者涂满时，方法都只有一种。</p>\n<h2 id=\"python3代码\"><a class=\"anchor\" href=\"#python3代码\">#</a> python3 代码</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">paintingPlan</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">if</span> k <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token keyword\">or</span> k <span class=\"token operator\">==</span> n<span class=\"token operator\">*</span>n<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        result <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token keyword\">if</span> n<span class=\"token operator\">*</span>i <span class=\"token operator\">+</span> n<span class=\"token operator\">*</span>j <span class=\"token operator\">-</span> i<span class=\"token operator\">*</span>j <span class=\"token operator\">==</span> k<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                    result <span class=\"token operator\">+=</span> math<span class=\"token punctuation\">.</span>factorial<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">.</span>factorial<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> math<span class=\"token punctuation\">.</span>factorial<span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>math<span class=\"token punctuation\">.</span>factorial<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">.</span>factorial<span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> math<span class=\"token punctuation\">.</span>factorial<span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>           </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>其中，阶乘的求解可以用递归，也可以用循环，或者直接用库函数，可以分别运行来比较其时间复杂度和空间复杂度。</p>\n<p>另外，组合的求解方式也非常多样化，可以利用阶乘函数计算，也可以直接进行数值计算。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 递归</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">factorial</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">if</span> n <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> n <span class=\"token operator\">*</span> factorial<span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 循环</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">factorial</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tfact <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\tfact <span class=\"token operator\">*=</span> i</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">return</span> fact</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># 利用阶乘</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">C</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token keyword\">return</span> factorial<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span>factorial<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> factorial<span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># 直接计算</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">C</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tresult <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> n<span class=\"token operator\">-</span>a<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>   \t\tresult <span class=\"token operator\">*=</span> i</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> a<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        result <span class=\"token operator\">/=</span> j</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">return</span> result</pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\"># 防溢出防除不尽</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">C</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\tresult <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> a<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\tresult <span class=\"token operator\">*=</span> <span class=\"token punctuation\">(</span>n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span>i</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token keyword\">return</span> result</pre></td></tr></table></figure><h2 id=\"c语言代码\"><a class=\"anchor\" href=\"#c语言代码\">#</a> C 语言代码</h2>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">factorial</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   \t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span> \t</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   \t<span class=\"token keyword\">return</span> n <span class=\"token operator\">*</span> <span class=\"token function\">factorial</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">C</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   \t<span class=\"token keyword\">return</span> <span class=\"token function\">factorial</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token function\">factorial</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token function\">factorial</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">paintingPlan</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> k <span class=\"token operator\">==</span> n<span class=\"token operator\">*</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    \t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  \t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">&#123;</span>j <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">*</span>i <span class=\"token operator\">+</span> n<span class=\"token operator\">*</span>j <span class=\"token operator\">-</span> i<span class=\"token operator\">*</span>j<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> k<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                result <span class=\"token operator\">+=</span> <span class=\"token function\">C</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token function\">C</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"c代码copy\"><a class=\"anchor\" href=\"#c代码copy\">#</a> C++ 代码（Copy）</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token comment\">// 预处理组合数</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">int</span> C<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">Init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> i<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>j<span class=\"token punctuation\">)</span> C<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token keyword\">else</span> C<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> C<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> C<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">paintingPlan</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">==</span> n <span class=\"token operator\">*</span> n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token function\">Init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">int</span> ans <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">*</span> i <span class=\"token operator\">+</span> n <span class=\"token operator\">*</span> j <span class=\"token operator\">-</span> i <span class=\"token operator\">*</span> j <span class=\"token operator\">==</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                    ans <span class=\"token operator\">+=</span> C<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> C<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">return</span> ans<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"大佬专属代码\"><a class=\"anchor\" href=\"#大佬专属代码\">#</a> 大佬专属代码</h2>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">paintingPlan</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">int</span> p<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t    p<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t        p<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t        p<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t        p<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t        p<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">==</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t        p<span class=\"token operator\">=</span><span class=\"token number\">6</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t        p<span class=\"token operator\">=</span><span class=\"token number\">9</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t        p<span class=\"token operator\">=</span><span class=\"token number\">6</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t       p<span class=\"token operator\">=</span><span class=\"token number\">18</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t        p<span class=\"token operator\">=</span><span class=\"token number\">9</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t        p<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">==</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t        p<span class=\"token operator\">=</span><span class=\"token number\">8</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t        p<span class=\"token operator\">=</span><span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t        p<span class=\"token operator\">=</span><span class=\"token number\">12</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t        p<span class=\"token operator\">=</span><span class=\"token number\">48</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t        p<span class=\"token operator\">=</span><span class=\"token number\">44</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">13</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t        p<span class=\"token operator\">=</span><span class=\"token number\">32</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">14</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t        p<span class=\"token operator\">=</span><span class=\"token number\">48</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t        p<span class=\"token operator\">=</span><span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t        p<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">==</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>            p<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            p<span class=\"token operator\">=</span><span class=\"token number\">25</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>            p<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">13</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>            p<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            p<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            p<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">17</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>            p<span class=\"token operator\">=</span><span class=\"token number\">200</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">21</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>            p<span class=\"token operator\">=</span><span class=\"token number\">150</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">19</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>            p<span class=\"token operator\">=</span><span class=\"token number\">200</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>            p<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">25</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>            p<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">24</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>            p<span class=\"token operator\">=</span><span class=\"token number\">25</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">23</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>            p<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">22</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>            p<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">==</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">36</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>            p<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">35</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>            p<span class=\"token operator\">=</span><span class=\"token number\">36</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">34</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>            p<span class=\"token operator\">=</span><span class=\"token number\">180</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">33</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>            p<span class=\"token operator\">=</span><span class=\"token number\">240</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>            p<span class=\"token operator\">=</span><span class=\"token number\">405</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">31</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>            p<span class=\"token operator\">=</span><span class=\"token number\">72</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>            p<span class=\"token operator\">=</span><span class=\"token number\">612</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">28</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>            p<span class=\"token operator\">=</span><span class=\"token number\">450</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">27</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>            p<span class=\"token operator\">=</span><span class=\"token number\">400</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">26</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>            p<span class=\"token operator\">=</span><span class=\"token number\">180</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">24</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>            p<span class=\"token operator\">=</span><span class=\"token number\">630</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">21</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>            p<span class=\"token operator\">=</span><span class=\"token number\">240</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>            p<span class=\"token operator\">=</span><span class=\"token number\">225</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>            p<span class=\"token operator\">=</span><span class=\"token number\">40</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>            p<span class=\"token operator\">=</span><span class=\"token number\">180</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>            p<span class=\"token operator\">=</span><span class=\"token number\">30</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>            p<span class=\"token operator\">=</span><span class=\"token number\">36</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k<span class=\"token operator\">==</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>            p<span class=\"token operator\">=</span><span class=\"token number\">12</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>    <span class=\"token keyword\">return</span> p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>敲黑板！！！<br>\n排列、组合、阶乘的各种实现代码必须做到信手拈来，还要考虑其时间复杂度、空间复杂度、是否溢出、是否除不尽等！！！</strong></p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/20210602213721831.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpc3NNb29uXw==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n",
            "tags": [
                "力扣题库",
                "难度简单",
                "黑白方格画"
            ]
        },
        {
            "id": "https://www.liangmeng.xyz/LeetCode/%E9%9A%BE%E5%BA%A6%E7%AE%80%E5%8D%95/833-%E4%B8%89%E7%BB%B4%E5%BD%A2%E4%BD%93%E6%8A%95%E5%BD%B1%E9%9D%A2%E7%A7%AF/",
            "url": "https://www.liangmeng.xyz/LeetCode/%E9%9A%BE%E5%BA%A6%E7%AE%80%E5%8D%95/833-%E4%B8%89%E7%BB%B4%E5%BD%A2%E4%BD%93%E6%8A%95%E5%BD%B1%E9%9D%A2%E7%A7%AF/",
            "title": "833-三维形体投影面积",
            "date_published": "2021-06-02T13:40:00.000Z",
            "content_html": "<h1 id=\"题目描述\"><a class=\"anchor\" href=\"#题目描述\">#</a> 题目描述</h1>\n<p>在 n x n 的网格 grid 中，我们放置了一些与 x，y，z 三轴对齐的 1 x 1 x 1 立方体。每个值 v = grid [i] [j] 表示 v 个正方体叠放在单元格 (i, j) 上。现在，我们查看这些立方体在 xy 、yz 和 zx 平面上的投影。投影就像影子，将三维形体映射到一个二维平面上。从顶部、前面和侧面看立方体时，我们会看到 “影子”。返回所有三个投影的总面积 。</p>\n<p>输入示例 1：</p>\n<p>[[1, 2], [3, 4]]</p>\n<p>输出示例 1：</p>\n<p>17</p>\n<p>解释：</p>\n<p>该立体图形的俯视图如下，数字代表该处有多少块立方体。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">1</th>\n<th style=\"text-align:center\">2</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">4</td>\n</tr>\n</tbody>\n</table>\n<p>投影面积 = 4（俯视图） + 7（主视图） + 6（左视图）= 17</p>\n<p>输入示例 2：</p>\n<p>[[2]]</p>\n<p>输出示例 2：</p>\n<p>5</p>\n<p>输入示例 3：</p>\n<p>[[1, 0], [0, 2]]</p>\n<p>输出示例 3：</p>\n<p>8</p>\n<p>限制条件：</p>\n<p>n == grid.length == grid[i].length</p>\n<p>1 &lt;= n &lt;= 50</p>\n<p>0 &lt;= grid[i] [j] &lt;= 50</p>\n<h1 id=\"解题思路\"><a class=\"anchor\" href=\"#解题思路\">#</a> 解题思路</h1>\n<p>S（俯视图） = sum (grid [i] [j] &gt; 0)，即矩阵中非零数值的个数。</p>\n<p>S（主视图） = sum (max (grid [j]))，即矩阵中每一列最大值的和。</p>\n<p>S（左视图） = sum (max (grid [i]))，即矩阵中每一行最大值的和。</p>\n<h1 id=\"个人代码\"><a class=\"anchor\" href=\"#个人代码\">#</a> 个人代码</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">projectionArea</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> grid<span class=\"token punctuation\">:</span> List<span class=\"token punctuation\">[</span>List<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        xy<span class=\"token punctuation\">,</span> xz<span class=\"token punctuation\">,</span> yz <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>grid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            maxr<span class=\"token punctuation\">,</span> maxc <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>grid<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token keyword\">if</span> grid<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                    xy <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                maxr <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>maxr<span class=\"token punctuation\">,</span> grid<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                maxc <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>maxc<span class=\"token punctuation\">,</span> grid<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            xz <span class=\"token operator\">+=</span> maxr</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            yz <span class=\"token operator\">+=</span> maxc     </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>xy<span class=\"token operator\">+</span>xz<span class=\"token operator\">+</span>yz<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"官方代码\"><a class=\"anchor\" href=\"#官方代码\">#</a> 官方代码</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">projectionArea</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> grid<span class=\"token punctuation\">:</span> List<span class=\"token punctuation\">[</span>List<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        xyArea <span class=\"token operator\">=</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>v <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token keyword\">for</span> row <span class=\"token keyword\">in</span> grid <span class=\"token keyword\">for</span> v <span class=\"token keyword\">in</span> row<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\"># 注意这里为 O (n) 空间复杂度，改为下标枚举则可以 O (1)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        yzArea <span class=\"token operator\">=</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>grid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        zxArea <span class=\"token operator\">=</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">,</span> grid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">return</span> xyArea <span class=\"token operator\">+</span> yzArea <span class=\"token operator\">+</span> zxArea</pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">projectionArea</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">>></span> <span class=\"token operator\">&amp;</span>grid<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> grid<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">int</span> xyArea <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> yzArea <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> zxArea <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">int</span> yzHeight <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> zxHeight <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                xyArea <span class=\"token operator\">+=</span> grid<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                yzHeight <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>yzHeight<span class=\"token punctuation\">,</span> grid<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                zxHeight <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>zxHeight<span class=\"token punctuation\">,</span> grid<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            yzArea <span class=\"token operator\">+=</span> yzHeight<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            zxArea <span class=\"token operator\">+=</span> zxHeight<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">return</span> xyArea <span class=\"token operator\">+</span> yzArea <span class=\"token operator\">+</span> zxArea<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">MAX</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">projectionArea</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span> grid<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> gridSize<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token operator\">*</span> gridColSize<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">int</span> xyArea <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> yzArea <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> zxArea <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> gridSize<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">int</span> yzHeight <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> zxHeight <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> gridSize<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            xyArea <span class=\"token operator\">+=</span> grid<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            yzHeight <span class=\"token operator\">=</span> <span class=\"token function\">MAX</span><span class=\"token punctuation\">(</span>yzHeight<span class=\"token punctuation\">,</span> grid<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            zxHeight <span class=\"token operator\">=</span> <span class=\"token function\">MAX</span><span class=\"token punctuation\">(</span>zxHeight<span class=\"token punctuation\">,</span> grid<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        yzArea <span class=\"token operator\">+=</span> yzHeight<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        zxArea <span class=\"token operator\">+=</span> zxHeight<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">return</span> xyArea <span class=\"token operator\">+</span> yzArea <span class=\"token operator\">+</span> zxArea<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"https://img-blog.csdnimg.cn/187e682d741b47389088c8f74f117822.png#pic_center\" alt=\"wolf\"></p>\n",
            "tags": [
                "力扣题库",
                "难度简单",
                "三维形体投影面积"
            ]
        },
        {
            "id": "https://www.liangmeng.xyz/GameDevelopment/%E8%B4%AA%E5%90%83%E8%9B%87-Python%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0/",
            "url": "https://www.liangmeng.xyz/GameDevelopment/%E8%B4%AA%E5%90%83%E8%9B%87-Python%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0/",
            "title": "贪吃蛇-Python语言实现",
            "date_published": "2021-06-02T03:05:00.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>贪吃蛇（也叫做贪食蛇）游戏是一款休闲益智类游戏，既简单又耐玩，唯一的目标就是<strong>做这条 gai 上最长（pang）的蛇（zhu）</strong>！</p>\n<p>玩贪吃蛇最考验的就是走位（<strong>简称蛇皮走位</strong>），各种漂移过人，唉，就是玩儿！</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/20210601204813403.gif#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"基本设置\"><a class=\"anchor\" href=\"#基本设置\">#</a> 基本设置</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 基本设置</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>lattice_wh <span class=\"token operator\">=</span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>snake_color <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">84</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">159</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>snake_head_color <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">123</span><span class=\"token punctuation\">,</span> <span class=\"token number\">104</span><span class=\"token punctuation\">,</span> <span class=\"token number\">238</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>food_color <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"绘制屏幕\"><a class=\"anchor\" href=\"#绘制屏幕\">#</a> 绘制屏幕</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 绘制屏幕</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>pygame.init<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">screen</span> <span class=\"token operator\">=</span> pygame.display.set_mode<span class=\"token variable\"><span class=\"token punctuation\">((</span><span class=\"token number\">25</span><span class=\"token operator\">*</span>lattice_wh<span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token operator\">*</span>lattice_wh<span class=\"token punctuation\">))</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>pygame.display.set_caption<span class=\"token punctuation\">(</span><span class=\"token string\">\"贪吃蛇\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 帧率，每秒刷新屏幕次数</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>FPS <span class=\"token operator\">=</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 帧率变化系数</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>level <span class=\"token operator\">=</span> <span class=\"token number\">1.5</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 时间对象</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>FPSCLOCK <span class=\"token operator\">=</span> pygame.time.Clock<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 游戏结束标志</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>game_over <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># 前进方向</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>direction <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># 进食数量</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>num <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr></table></figure><h2 id=\"蛇类\"><a class=\"anchor\" href=\"#蛇类\">#</a> 蛇类</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 蛇</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Snake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> snake_color<span class=\"token punctuation\">,</span> snake_head_color<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> lattice_wh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        self<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> snake_color</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        self<span class=\"token punctuation\">.</span>head_color <span class=\"token operator\">=</span> snake_head_color</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\"># 左上顶点坐标</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        self<span class=\"token punctuation\">.</span>pos <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        self<span class=\"token punctuation\">.</span>lattice_wh <span class=\"token operator\">=</span> lattice_wh</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      \t<span class=\"token comment\"># 绘制蛇体</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        self<span class=\"token punctuation\">.</span>rect <span class=\"token operator\">=</span> pygame<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>Rect<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>lattice_wh<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>lattice_wh<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\"># 左上顶点坐标变化</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        self<span class=\"token punctuation\">.</span>pos_change <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token comment\"># 上移</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>self<span class=\"token punctuation\">.</span>lattice_wh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token comment\"># 下移</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>lattice_wh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token comment\"># 左移</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token number\">3</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>self<span class=\"token punctuation\">.</span>lattice_wh<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token comment\"># 右移</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>lattice_wh<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">move</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> direction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        self<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+=</span> self<span class=\"token punctuation\">.</span>pos_change<span class=\"token punctuation\">[</span>direction<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        self<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+=</span> self<span class=\"token punctuation\">.</span>pos_change<span class=\"token punctuation\">[</span>direction<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">forecast</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> direction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>x<span class=\"token operator\">+</span>self<span class=\"token punctuation\">.</span>pos_change<span class=\"token punctuation\">[</span>direction<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>y<span class=\"token operator\">+</span>self<span class=\"token punctuation\">.</span>pos_change<span class=\"token punctuation\">[</span>direction<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"食物类\"><a class=\"anchor\" href=\"#食物类\">#</a> 食物类</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 食物</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Food</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> food_color<span class=\"token punctuation\">,</span> screen<span class=\"token punctuation\">,</span> lattice_wh<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        self<span class=\"token punctuation\">.</span>screen <span class=\"token operator\">=</span> screen</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        self<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> food_color</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        self<span class=\"token punctuation\">.</span>lattice_wh <span class=\"token operator\">=</span> lattice_wh</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\"># 半径</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        self<span class=\"token punctuation\">.</span>radius <span class=\"token operator\">=</span> lattice_wh<span class=\"token operator\">/</span><span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        self<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> x<span class=\"token punctuation\">,</span> y</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\"># 圆心</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        pos <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>x<span class=\"token operator\">+</span>self<span class=\"token punctuation\">.</span>lattice_wh<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>y<span class=\"token operator\">+</span>self<span class=\"token punctuation\">.</span>lattice_wh<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\"># 绘制食物</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        pygame<span class=\"token punctuation\">.</span>draw<span class=\"token punctuation\">.</span>circle<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>screen<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">,</span> pos<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>radius<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"初始状态\"><a class=\"anchor\" href=\"#初始状态\">#</a> 初始状态</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 贪吃蛇</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>snakes <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>snakes<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>Snake<span class=\"token punctuation\">(</span>snake_color<span class=\"token punctuation\">,</span> snake_head_color<span class=\"token punctuation\">,</span> lattice_wh<span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token operator\">*</span>lattice_wh<span class=\"token punctuation\">,</span> lattice_wh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>snakes<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>Snake<span class=\"token punctuation\">(</span>snake_color<span class=\"token punctuation\">,</span> snake_head_color<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token operator\">*</span>lattice_wh<span class=\"token punctuation\">,</span> lattice_wh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 食物</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>food <span class=\"token operator\">=</span> create_food<span class=\"token punctuation\">(</span>food_color<span class=\"token punctuation\">,</span> screen<span class=\"token punctuation\">,</span> lattice_wh<span class=\"token punctuation\">,</span> snakes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 游戏状态</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>game_stats <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>game_over<span class=\"token punctuation\">,</span> direction<span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">,</span> food<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><h2 id=\"生成食物\"><a class=\"anchor\" href=\"#生成食物\">#</a> 生成食物</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 生成食物</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">create_food</span><span class=\"token punctuation\">(</span>food_color<span class=\"token punctuation\">,</span> screen<span class=\"token punctuation\">,</span> lattice_wh<span class=\"token punctuation\">,</span> snakes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\"># 食物是否生成成功</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    create_success <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\"># 食物位置坐标</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    food_x<span class=\"token punctuation\">,</span> food_y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token keyword\">not</span> create_success<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        food_x<span class=\"token punctuation\">,</span> food_y <span class=\"token operator\">=</span> randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        food_x <span class=\"token operator\">*=</span> lattice_wh</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        food_y <span class=\"token operator\">*=</span> lattice_wh</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\"># 检查食物位置是否与贪吃蛇位置重合</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">for</span> snake <span class=\"token keyword\">in</span> snakes<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>food_x<span class=\"token punctuation\">,</span> food_y<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token punctuation\">(</span>snake<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> snake<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                create_success <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\"># 在指定位置生成食物</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    food <span class=\"token operator\">=</span> Food<span class=\"token punctuation\">(</span>food_color<span class=\"token punctuation\">,</span> screen<span class=\"token punctuation\">,</span> lattice_wh<span class=\"token punctuation\">,</span> food_x<span class=\"token punctuation\">,</span> food_y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">return</span> food</pre></td></tr></table></figure><h2 id=\"响应键鼠\"><a class=\"anchor\" href=\"#响应键鼠\">#</a> 响应键鼠</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 响应键鼠</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">check_events</span><span class=\"token punctuation\">(</span>game_stats<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span> event <span class=\"token keyword\">in</span> pygame<span class=\"token punctuation\">.</span>event<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\"># 退出游戏</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">if</span> event<span class=\"token punctuation\">.</span><span class=\"token builtin\">type</span> <span class=\"token operator\">==</span> pygame<span class=\"token punctuation\">.</span>QUIT<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            pygame<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            sys<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token comment\"># 控制移动方向，注意不能直接反向移动</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">elif</span> event<span class=\"token punctuation\">.</span><span class=\"token builtin\">type</span> <span class=\"token operator\">==</span> pygame<span class=\"token punctuation\">.</span>KEYDOWN<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">if</span> event<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> pygame<span class=\"token punctuation\">.</span>K_UP <span class=\"token keyword\">and</span> game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">elif</span> event<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> pygame<span class=\"token punctuation\">.</span>K_DOWN <span class=\"token keyword\">and</span> game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">elif</span> event<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> pygame<span class=\"token punctuation\">.</span>K_LEFT <span class=\"token keyword\">and</span> game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">elif</span> event<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> pygame<span class=\"token punctuation\">.</span>K_RIGHT <span class=\"token keyword\">and</span> game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><h2 id=\"更新屏幕\"><a class=\"anchor\" href=\"#更新屏幕\">#</a> 更新屏幕</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 更新屏幕</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span>screen<span class=\"token punctuation\">,</span> lattice_wh<span class=\"token punctuation\">,</span> snakes<span class=\"token punctuation\">,</span> game_stats<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    screen<span class=\"token punctuation\">.</span>fill<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\"># 绘制蛇头</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    pygame<span class=\"token punctuation\">.</span>draw<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">(</span>screen<span class=\"token punctuation\">,</span> snakes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>head_color<span class=\"token punctuation\">,</span> snakes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\"># 绘制蛇身</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>snakes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        pygame<span class=\"token punctuation\">.</span>draw<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">(</span>screen<span class=\"token punctuation\">,</span> snakes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">,</span> snakes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\"># 绘制横线</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        pygame<span class=\"token punctuation\">.</span>draw<span class=\"token punctuation\">.</span>line<span class=\"token punctuation\">(</span>screen<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">105</span><span class=\"token punctuation\">,</span> <span class=\"token number\">105</span><span class=\"token punctuation\">,</span> <span class=\"token number\">105</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> lattice_wh<span class=\"token operator\">*</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span> lattice_wh<span class=\"token operator\">*</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\"># 绘制竖线</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        pygame<span class=\"token punctuation\">.</span>draw<span class=\"token punctuation\">.</span>line<span class=\"token punctuation\">(</span>screen<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">105</span><span class=\"token punctuation\">,</span> <span class=\"token number\">105</span><span class=\"token punctuation\">,</span> <span class=\"token number\">105</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>lattice_wh<span class=\"token operator\">*</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>lattice_wh<span class=\"token operator\">*</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\"># 绘制食物</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>draw<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\"># 更新屏幕</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    pygame<span class=\"token punctuation\">.</span>display<span class=\"token punctuation\">.</span>flip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"移动进食\"><a class=\"anchor\" href=\"#移动进食\">#</a> 移动进食</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 移动进食</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">going</span><span class=\"token punctuation\">(</span>screen<span class=\"token punctuation\">,</span> game_stats<span class=\"token punctuation\">,</span> snakes<span class=\"token punctuation\">,</span> snake_head_color<span class=\"token punctuation\">,</span> snake_color<span class=\"token punctuation\">,</span> food_color<span class=\"token punctuation\">,</span> lattice_wh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\"># 蛇头下一前进位置</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> snakes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>forecast<span class=\"token punctuation\">(</span>game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\"># 检查是否触碰边界</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">if</span> x <span class=\"token operator\">==</span> <span class=\"token operator\">-</span>lattice_wh <span class=\"token keyword\">or</span> x <span class=\"token operator\">==</span> <span class=\"token number\">25</span><span class=\"token operator\">*</span>lattice_wh <span class=\"token keyword\">or</span> y <span class=\"token operator\">==</span> <span class=\"token operator\">-</span>lattice_wh <span class=\"token keyword\">or</span> y <span class=\"token operator\">==</span> <span class=\"token number\">25</span><span class=\"token operator\">*</span>lattice_wh<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\"># 检查是否触碰食物</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span>game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\"># 更新蛇头</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        new_head <span class=\"token operator\">=</span> Snake<span class=\"token punctuation\">(</span>snake_color<span class=\"token punctuation\">,</span> snake_head_color<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> lattice_wh<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        snakes<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> new_head<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\"># 更新分数</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token comment\"># 重新生成食物</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> create_food<span class=\"token punctuation\">(</span>food_color<span class=\"token punctuation\">,</span> screen<span class=\"token punctuation\">,</span> lattice_wh<span class=\"token punctuation\">,</span> snakes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\"># 检查是否触碰蛇身</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">for</span> snake <span class=\"token keyword\">in</span> snakes<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span>snake<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> snake<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\"># 更新所有蛇身位置</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>snakes<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        snakes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> snakes<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>x</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        snakes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> snakes<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>y</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token comment\"># 更新蛇头位置</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    snakes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>move<span class=\"token punctuation\">(</span>game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"游戏入口\"><a class=\"anchor\" href=\"#游戏入口\">#</a> 游戏入口</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 游戏入口</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token keyword\">not</span> game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    update<span class=\"token punctuation\">(</span>screen<span class=\"token punctuation\">,</span> lattice_wh<span class=\"token punctuation\">,</span> snakes<span class=\"token punctuation\">,</span> game_stats<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    check_events<span class=\"token punctuation\">(</span>game_stats<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    going<span class=\"token punctuation\">(</span>screen<span class=\"token punctuation\">,</span> game_stats<span class=\"token punctuation\">,</span> snakes<span class=\"token punctuation\">,</span> snake_head_color<span class=\"token punctuation\">,</span> snake_color<span class=\"token punctuation\">,</span> food_color<span class=\"token punctuation\">,</span> lattice_wh<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    FPSCLOCK<span class=\"token punctuation\">.</span>tick<span class=\"token punctuation\">(</span>FPS <span class=\"token operator\">*</span> level <span class=\"token operator\">**</span> num <span class=\"token keyword\">if</span> FPS <span class=\"token operator\">*</span> level <span class=\"token operator\">**</span> num <span class=\"token operator\">&lt;</span> <span class=\"token number\">60</span> <span class=\"token keyword\">else</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"snakepy\"><a class=\"anchor\" href=\"#snakepy\">#</a> <span class=\"exturl\" data-url=\"aHR0cDovL3NuYWtlLnB5\">snake.py</span></h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> pygame</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 蛇</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Snake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> snake_color<span class=\"token punctuation\">,</span> snake_head_color<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> lattice_wh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        self<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> snake_color</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        self<span class=\"token punctuation\">.</span>head_color <span class=\"token operator\">=</span> snake_head_color</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token comment\"># 左上顶点坐标</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        self<span class=\"token punctuation\">.</span>pos <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        self<span class=\"token punctuation\">.</span>lattice_wh <span class=\"token operator\">=</span> lattice_wh</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\"># 绘制蛇体</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        self<span class=\"token punctuation\">.</span>rect <span class=\"token operator\">=</span> pygame<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>Rect<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>lattice_wh<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>lattice_wh<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\"># 左上顶点坐标变化</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        self<span class=\"token punctuation\">.</span>pos_change <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token comment\"># 上移</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>self<span class=\"token punctuation\">.</span>lattice_wh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token comment\"># 下移</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>lattice_wh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token comment\"># 左移</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token number\">3</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>self<span class=\"token punctuation\">.</span>lattice_wh<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token comment\"># 右移</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>lattice_wh<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token comment\"># 移动</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">move</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> direction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        self<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+=</span> self<span class=\"token punctuation\">.</span>pos_change<span class=\"token punctuation\">[</span>direction<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        self<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+=</span> self<span class=\"token punctuation\">.</span>pos_change<span class=\"token punctuation\">[</span>direction<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token comment\"># 下一前进位置</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">forecast</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> direction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>x<span class=\"token operator\">+</span>self<span class=\"token punctuation\">.</span>pos_change<span class=\"token punctuation\">[</span>direction<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>y<span class=\"token operator\">+</span>self<span class=\"token punctuation\">.</span>pos_change<span class=\"token punctuation\">[</span>direction<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"foodpy\"><a class=\"anchor\" href=\"#foodpy\">#</a> <span class=\"exturl\" data-url=\"aHR0cDovL2Zvb2QucHk=\">food.py</span></h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> pygame</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 食物</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Food</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> food_color<span class=\"token punctuation\">,</span> screen<span class=\"token punctuation\">,</span> lattice_wh<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        self<span class=\"token punctuation\">.</span>screen <span class=\"token operator\">=</span> screen</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        self<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> food_color</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        self<span class=\"token punctuation\">.</span>lattice_wh <span class=\"token operator\">=</span> lattice_wh</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\"># 半径</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        self<span class=\"token punctuation\">.</span>radius <span class=\"token operator\">=</span> lattice_wh<span class=\"token operator\">/</span><span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        self<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> x<span class=\"token punctuation\">,</span> y</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\"># 圆心</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        pos <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>x<span class=\"token operator\">+</span>self<span class=\"token punctuation\">.</span>lattice_wh<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>y<span class=\"token operator\">+</span>self<span class=\"token punctuation\">.</span>lattice_wh<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\"># 绘制食物</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        pygame<span class=\"token punctuation\">.</span>draw<span class=\"token punctuation\">.</span>circle<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>screen<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">,</span> pos<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>radius<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"functionpy\"><a class=\"anchor\" href=\"#functionpy\">#</a> <span class=\"exturl\" data-url=\"aHR0cDovL2Z1bmN0aW9uLnB5\">function.py</span></h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> pygame</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> random <span class=\"token keyword\">import</span> randint</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> food <span class=\"token keyword\">import</span> Food</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span> snake <span class=\"token keyword\">import</span> Snake</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 生成食物</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">create_food</span><span class=\"token punctuation\">(</span>food_color<span class=\"token punctuation\">,</span> screen<span class=\"token punctuation\">,</span> lattice_wh<span class=\"token punctuation\">,</span> snakes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\"># 食物是否生成成功</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    create_success <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\"># 食物位置坐标</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    food_x<span class=\"token punctuation\">,</span> food_y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token keyword\">not</span> create_success<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        food_x<span class=\"token punctuation\">,</span> food_y <span class=\"token operator\">=</span> randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        food_x <span class=\"token operator\">*=</span> lattice_wh</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        food_y <span class=\"token operator\">*=</span> lattice_wh</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\"># 检查食物位置是否与贪吃蛇位置重合</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">for</span> snake <span class=\"token keyword\">in</span> snakes<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>food_x<span class=\"token punctuation\">,</span> food_y<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token punctuation\">(</span>snake<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> snake<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                create_success <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token comment\"># 在指定位置生成食物</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    food <span class=\"token operator\">=</span> Food<span class=\"token punctuation\">(</span>food_color<span class=\"token punctuation\">,</span> screen<span class=\"token punctuation\">,</span> lattice_wh<span class=\"token punctuation\">,</span> food_x<span class=\"token punctuation\">,</span> food_y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">return</span> food</pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># 响应事件</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">check_events</span><span class=\"token punctuation\">(</span>game_stats<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">for</span> event <span class=\"token keyword\">in</span> pygame<span class=\"token punctuation\">.</span>event<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token comment\"># 退出游戏</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">if</span> event<span class=\"token punctuation\">.</span><span class=\"token builtin\">type</span> <span class=\"token operator\">==</span> pygame<span class=\"token punctuation\">.</span>QUIT<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            pygame<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            sys<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token comment\"># 控制移动方向，注意不能直接反向移动</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">elif</span> event<span class=\"token punctuation\">.</span><span class=\"token builtin\">type</span> <span class=\"token operator\">==</span> pygame<span class=\"token punctuation\">.</span>KEYDOWN<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token keyword\">if</span> event<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> pygame<span class=\"token punctuation\">.</span>K_UP <span class=\"token keyword\">and</span> game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token keyword\">elif</span> event<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> pygame<span class=\"token punctuation\">.</span>K_DOWN <span class=\"token keyword\">and</span> game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token keyword\">elif</span> event<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> pygame<span class=\"token punctuation\">.</span>K_LEFT <span class=\"token keyword\">and</span> game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            <span class=\"token keyword\">elif</span> event<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> pygame<span class=\"token punctuation\">.</span>K_RIGHT <span class=\"token keyword\">and</span> game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>                game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token comment\"># 更新屏幕</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span>screen<span class=\"token punctuation\">,</span> lattice_wh<span class=\"token punctuation\">,</span> snakes<span class=\"token punctuation\">,</span> game_stats<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    screen<span class=\"token punctuation\">.</span>fill<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token comment\"># 绘制蛇头</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    pygame<span class=\"token punctuation\">.</span>draw<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">(</span>screen<span class=\"token punctuation\">,</span> snakes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>head_color<span class=\"token punctuation\">,</span> snakes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token comment\"># 绘制蛇身</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>snakes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        pygame<span class=\"token punctuation\">.</span>draw<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">(</span>screen<span class=\"token punctuation\">,</span> snakes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">,</span> snakes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token comment\"># 绘制横线</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        pygame<span class=\"token punctuation\">.</span>draw<span class=\"token punctuation\">.</span>line<span class=\"token punctuation\">(</span>screen<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">105</span><span class=\"token punctuation\">,</span> <span class=\"token number\">105</span><span class=\"token punctuation\">,</span> <span class=\"token number\">105</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> lattice_wh<span class=\"token operator\">*</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span> lattice_wh<span class=\"token operator\">*</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token comment\"># 绘制竖线</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        pygame<span class=\"token punctuation\">.</span>draw<span class=\"token punctuation\">.</span>line<span class=\"token punctuation\">(</span>screen<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">105</span><span class=\"token punctuation\">,</span> <span class=\"token number\">105</span><span class=\"token punctuation\">,</span> <span class=\"token number\">105</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>lattice_wh<span class=\"token operator\">*</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>lattice_wh<span class=\"token operator\">*</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token comment\"># 绘制食物</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>draw<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token comment\"># 更新屏幕</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    pygame<span class=\"token punctuation\">.</span>display<span class=\"token punctuation\">.</span>flip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token comment\"># 移动进食</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">going</span><span class=\"token punctuation\">(</span>screen<span class=\"token punctuation\">,</span> game_stats<span class=\"token punctuation\">,</span> snakes<span class=\"token punctuation\">,</span> snake_head_color<span class=\"token punctuation\">,</span> snake_color<span class=\"token punctuation\">,</span> food_color<span class=\"token punctuation\">,</span> lattice_wh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token comment\"># 蛇头下一前进位置</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> snakes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>forecast<span class=\"token punctuation\">(</span>game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token comment\"># 检查是否触碰边界</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token keyword\">if</span> x <span class=\"token operator\">==</span> <span class=\"token operator\">-</span>lattice_wh <span class=\"token keyword\">or</span> x <span class=\"token operator\">==</span> <span class=\"token number\">25</span><span class=\"token operator\">*</span>lattice_wh <span class=\"token keyword\">or</span> y <span class=\"token operator\">==</span> <span class=\"token operator\">-</span>lattice_wh <span class=\"token keyword\">or</span> y <span class=\"token operator\">==</span> <span class=\"token number\">25</span><span class=\"token operator\">*</span>lattice_wh<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token comment\"># 检查是否触碰食物</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span>game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token comment\"># 更新蛇头</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        new_head <span class=\"token operator\">=</span> Snake<span class=\"token punctuation\">(</span>snake_color<span class=\"token punctuation\">,</span> snake_head_color<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> lattice_wh<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        snakes<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> new_head<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        <span class=\"token comment\"># 更新分数</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        <span class=\"token comment\"># 重新生成食物</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>        game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> create_food<span class=\"token punctuation\">(</span>food_color<span class=\"token punctuation\">,</span> screen<span class=\"token punctuation\">,</span> lattice_wh<span class=\"token punctuation\">,</span> snakes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token comment\"># 检查是否触碰蛇身</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token keyword\">for</span> snake <span class=\"token keyword\">in</span> snakes<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span>snake<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> snake<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>            game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>            <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    <span class=\"token comment\"># 更新所有蛇身位置</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>snakes<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>        snakes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> snakes<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>x</pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        snakes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> snakes<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span>y</pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    <span class=\"token comment\"># 更新蛇头位置</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    snakes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>move<span class=\"token punctuation\">(</span>game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"mainpy\"><a class=\"anchor\" href=\"#mainpy\">#</a> <span class=\"exturl\" data-url=\"aHR0cDovL21haW4ucHk=\">main.py</span></h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> pygame</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> function <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> snake <span class=\"token keyword\">import</span> Snake</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 基本设置</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>lattice_wh <span class=\"token operator\">=</span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>snake_color <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">84</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">159</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>snake_head_color <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">123</span><span class=\"token punctuation\">,</span> <span class=\"token number\">104</span><span class=\"token punctuation\">,</span> <span class=\"token number\">238</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>food_color <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 绘制屏幕</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>pygame<span class=\"token punctuation\">.</span>init<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>screen <span class=\"token operator\">=</span> pygame<span class=\"token punctuation\">.</span>display<span class=\"token punctuation\">.</span>set_mode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">25</span><span class=\"token operator\">*</span>lattice_wh<span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token operator\">*</span>lattice_wh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>pygame<span class=\"token punctuation\">.</span>display<span class=\"token punctuation\">.</span>set_caption<span class=\"token punctuation\">(</span><span class=\"token string\">\"贪吃蛇\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># 帧率，每秒刷新屏幕次数</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>FPS <span class=\"token operator\">=</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># 帧率变化系数</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>level <span class=\"token operator\">=</span> <span class=\"token number\">1.5</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># 时间对象</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>FPSCLOCK <span class=\"token operator\">=</span> pygame<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">.</span>Clock<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># 游戏结束标志</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>game_over <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># 前进方向</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>direction <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\"># 进食数量</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>num <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\"># 贪吃蛇</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>snakes <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>snakes<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>Snake<span class=\"token punctuation\">(</span>snake_color<span class=\"token punctuation\">,</span> snake_head_color<span class=\"token punctuation\">,</span> lattice_wh<span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token operator\">*</span>lattice_wh<span class=\"token punctuation\">,</span> lattice_wh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>snakes<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>Snake<span class=\"token punctuation\">(</span>snake_color<span class=\"token punctuation\">,</span> snake_head_color<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token operator\">*</span>lattice_wh<span class=\"token punctuation\">,</span> lattice_wh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\"># 食物</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>food <span class=\"token operator\">=</span> create_food<span class=\"token punctuation\">(</span>food_color<span class=\"token punctuation\">,</span> screen<span class=\"token punctuation\">,</span> lattice_wh<span class=\"token punctuation\">,</span> snakes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token comment\"># 游戏状态</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>game_stats <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>game_over<span class=\"token punctuation\">,</span> direction<span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">,</span> food<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token comment\"># 游戏入口</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token keyword\">not</span> game_stats<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    update<span class=\"token punctuation\">(</span>screen<span class=\"token punctuation\">,</span> lattice_wh<span class=\"token punctuation\">,</span> snakes<span class=\"token punctuation\">,</span> game_stats<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    check_events<span class=\"token punctuation\">(</span>game_stats<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    going<span class=\"token punctuation\">(</span>screen<span class=\"token punctuation\">,</span> game_stats<span class=\"token punctuation\">,</span> snakes<span class=\"token punctuation\">,</span> snake_head_color<span class=\"token punctuation\">,</span> snake_color<span class=\"token punctuation\">,</span> food_color<span class=\"token punctuation\">,</span> lattice_wh<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    FPSCLOCK<span class=\"token punctuation\">.</span>tick<span class=\"token punctuation\">(</span>FPS <span class=\"token operator\">*</span> level <span class=\"token operator\">**</span> num <span class=\"token keyword\">if</span> FPS <span class=\"token operator\">*</span> level <span class=\"token operator\">**</span> num <span class=\"token operator\">&lt;</span> <span class=\"token number\">60</span> <span class=\"token keyword\">else</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>敲黑板！！！在控制蛇的移动方向时，易忽略蛇不能直接反向移动这一问题；另外，在生成食物时，要检查食物的位置与蛇的位置是否重合，如果两者位置重合，此时需要生成新的食物。</strong></p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/20210601212016193.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpc3NNb29uXw==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"wolf\"></p>\n",
            "tags": [
                "游戏开发",
                "贪吃蛇-Python语言实现",
                "Python",
                "游戏",
                "贪吃蛇"
            ]
        },
        {
            "id": "https://www.liangmeng.xyz/Electrotechnics/%E9%9B%86%E6%88%90%E8%BF%90%E7%AE%97%E6%94%BE%E5%A4%A7%E5%99%A8%E7%9A%84%E5%BA%94%E7%94%A8/",
            "url": "https://www.liangmeng.xyz/Electrotechnics/%E9%9B%86%E6%88%90%E8%BF%90%E7%AE%97%E6%94%BE%E5%A4%A7%E5%99%A8%E7%9A%84%E5%BA%94%E7%94%A8/",
            "title": "集成运算放大器的应用",
            "date_published": "2021-06-01T14:30:00.000Z",
            "content_html": "<h2 id=\"实验目的\"><a class=\"anchor\" href=\"#实验目的\">#</a> 实验目的</h2>\n<p>(1)\t掌握集成运算放大器的基本运算功能及正确使用。<br>\n(2)\t掌握集成运算放大器常用单元电路的设计和调试方法。<br>\n(3)\t掌握在仿真实验平台中导入和调试新元件的方法。</p>\n<h2 id=\"实验原理\"><a class=\"anchor\" href=\"#实验原理\">#</a> 实验原理</h2>\n<ol>\n<li>实验原理<br>\n集成运算放大器是由高开环电压放大倍数的多级直接耦合放大器组成。从工作原理上，集成运算放大器可分为线性应用和非线性应用两个方面。在线性工作区内，其输出电压 uo 与输入电压 ui 的线性放大的关系为 uo=Auo（u+-u-）=Auoui，由于集成运算放大器的放大倍数 Auo 高达 104~107，若使 uo 为有限值，必须引入深度负反馈，使线性区加宽，构成集成运算放大器的线性运算电路。<br>\n在工程应用情况下，将集成运放视为理想运放，就是将集成运放的各项技术指标理想化，满足下列条件的运算放大器称为理想运放，即<br>\n (1) 开环电压放大倍数 Auo=∞<br>\n(2) 输入阻抗 ri=∞<br>\n(3) 输出阻抗 ro=0<br>\n (4) 带宽 fBW=∞<br>\n(5) 失调与漂移均为零<br>\n理想运放工作在线性区的分析依据是，输入端的虚短（u+=u-），输入端的虚断（i+=i-=0）和输入端的虚地（同相端接地时，u-=0）。<br>\n理想运放工作在非线性区的分析依据是：<br>\nu+&gt;u-, uo=+UOM          u-&gt;u+, uo=-UOM</li>\n<li>原理图<br>\n (1)\t电压跟随器，原理图如下：<br>\n<img data-src=\"https://img-blog.csdnimg.cn/20210601221504560.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpc3NNb29uXw==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>\n (2)\t反向比例运算电路，原理图如下：<br>\n<img data-src=\"https://img-blog.csdnimg.cn/20210601221520539.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpc3NNb29uXw==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n</ol>\n<p>(3)\t同向比例运算电路，原理图如下：<br>\n<img data-src=\"https://img-blog.csdnimg.cn/20210601221537472.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpc3NNb29uXw==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>\n (4)\t减法器的设计，原理图如下：<br>\n<img data-src=\"https://img-blog.csdnimg.cn/20210601221601987.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpc3NNb29uXw==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>\n (5)\t电压比较器，原理图如下：<br>\n<img data-src=\"https://img-blog.csdnimg.cn/20210601221621297.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpc3NNb29uXw==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>\n (6)\t矩形波发生器，原理图如下：<br>\n<img data-src=\"https://img-blog.csdnimg.cn/20210601221637847.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpc3NNb29uXw==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"实验过程与原始数据\"><a class=\"anchor\" href=\"#实验过程与原始数据\">#</a> 实验过程与原始数据</h2>\n<ol>\n<li>电压跟随器<br>\n (1)\t实验过程：在画布中插入三个电压源和一个理想运放，将输入电压 ui 设置为直流 1V，然后按照原理图将各元件连接起来。运行电路图并测量输出电压 uo。<br>\n(2)\t原始数据：ui=1V<br>\n<img data-src=\"https://img-blog.csdnimg.cn/20210601221710662.png\" alt=\"在这里插入图片描述\"></li>\n<li>反向比例运算电路<br>\n (1)\t实验过程：在画布中插入三个电压源、一个理想运放和三个电阻，将 R1 赋为 20kΩ，R2 赋为 16.667kΩ，RF 赋为 100kΩ，然后按照原理图将各元件连接起来。不断改变输入电压 ui，运行电路图并测量输出电压 uo。<br>\n(2)\t原始数据：R1=20kΩ，R2=16.667kΩ，RF=100kΩ<br>\n<img data-src=\"https://img-blog.csdnimg.cn/20210601221728721.png\" alt=\"在这里插入图片描述\"></li>\n<li>同向比例运算电路<br>\n (1)\t实验过程：在画布中插入三个电压源、一个理想运放和三个电阻，将<br>\n R1 赋为 20kΩ，R2 赋为 16.667kΩ，RF 赋为 100kΩ，然后按照原理图将各元件连接起来。不断改变输入电压 ui，运行电路图并测量输出电压 uo。<br>\n(2)\t原始数据：R1=20kΩ，R2=16.667kΩ，RF=100kΩ<br>\n<img data-src=\"https://img-blog.csdnimg.cn/20210601221744385.png\" alt=\"在这里插入图片描述\"></li>\n<li>减法器的设计<br>\n (1)\t实验过程：在画布中插入四个电压源、一个理想运放和四个电阻，将 R1 赋为 10kΩ，R2 赋为 10kΩ，R3 赋为 100kΩ，RF 赋为 100kΩ，然后按照原理图将各元件连接起来。不断改变输入电压 ui1 和 ui2，运行电路图并测量输出电压 uo。该减法器可实现关系式 uo=10（ui2-ui1）。<br>\n(2)\t原始数据：R1=10kΩ，R2=10kΩ，R3=100Kω,RF=100kΩ<br>\n<img data-src=\"https://img-blog.csdnimg.cn/2021060122180757.png\" alt=\"在这里插入图片描述\"></li>\n<li>电压比较器<br>\n (1)\t实验过程：在画布中插入三个电源、一个理想运放和两个电阻，将 R1 赋为 10kΩ，R2 赋为 10kΩ，ui 赋为交流 1V，频率为 1kHz，然后按照原理图将各元件连接起来。运行电路图，画出输出电压 uo 的波形和传输特性。<br>\n(2)\t原始数据：R1=10kΩ,R2=10kΩ,ui=1V，频率为 1kHz<br>\n<img data-src=\"https://img-blog.csdnimg.cn/20210601221824228.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpc3NNb29uXw==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n<li>矩形波发生器<br>\n (1)\t实验过程：在画布中插入两个电源、一个理想运放、一个电容和四个电阻，按照原理图将各元件连接起来。不断改变 R1、R2、R3、RF 的阻值和 C 的容抗，运行电路并测量输出电压的周期、频率和幅度。<br>\n(2)\t原始数据：<br>\n<img data-src=\"https://img-blog.csdnimg.cn/20210601221842497.png\" alt=\"在这里插入图片描述\"></li>\n</ol>\n<h2 id=\"实验结果及分析\"><a class=\"anchor\" href=\"#实验结果及分析\">#</a> 实验结果及分析</h2>\n<ol>\n<li>电压跟随器<br>\n (1)\t实验结果：<br>\n<img data-src=\"https://img-blog.csdnimg.cn/20210601221904795.png\" alt=\"在这里插入图片描述\"><br>\n (2)\t分析：输出电压 uo 等于输入电压 ui，即电压跟随器不具有放大效应。</li>\n<li>反向比例运算电路<br>\n (1)\t实验结果：<br>\n<img data-src=\"https://img-blog.csdnimg.cn/20210601221918182.png\" alt=\"在这里插入图片描述\"><br>\n (2)\t分析：在一定范围内，输出电压和输入电压满足 uo=-5ui，即输出电压与输入电压成正比，且其相位相反。当 ui 超过某一定值时，uo 不再增大。</li>\n<li>同向比例运算电路<br>\n (1)\t实验结果：<br>\n<img data-src=\"https://img-blog.csdnimg.cn/20210601221938255.png\" alt=\"在这里插入图片描述\"><br>\n (2)\t分析：在一定范围内，输出电压与输入电压满足 uo=6ui，即输出电压与输入电压成正比，且其相位相同。当 ui 超过一定值时，uo 不再增大。</li>\n<li>减法器的设计<br>\n (1)\t实验结果：<br>\n<img data-src=\"https://img-blog.csdnimg.cn/20210601221953204.png\" alt=\"在这里插入图片描述\"><br>\n (2)\t分析：在一定范围内，输出电压与输入电压满足 uo=10（ui2-ui1），即输出电压与输入电压的差值成正比。当差值超过一定值时，uo 不再增大。</li>\n<li>电压比较器<br>\n (1)\t实验结果：<br>\n<img data-src=\"https://img-blog.csdnimg.cn/20210601222004269.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpc3NNb29uXw==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>\n<img data-src=\"https://img-blog.csdnimg.cn/20210601222009349.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpc3NNb29uXw==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n<li>矩形波发生器<br>\n (1)\t实验结果<br>\n<img data-src=\"https://img-blog.csdnimg.cn/20210601222021793.png\" alt=\"在这里插入图片描述\"></li>\n</ol>\n<h2 id=\"思考题\"><a class=\"anchor\" href=\"#思考题\">#</a> 思考题</h2>\n<p>(1)\t不能。因为输出电压的幅值受到供能直流电源电压的限制，即输出电压的最大值不超过供能直流电源的电压。<br>\n(2)\t可将两个二极管串联在运放的正、负电源电路中，如果正接负、负接正，则二极管不导通，运放不工作，从而保护运放。电路图如下：<br>\n<img data-src=\"https://img-blog.csdnimg.cn/20210601222039316.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpc3NNb29uXw==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"实验体会与建议\"><a class=\"anchor\" href=\"#实验体会与建议\">#</a> 实验体会与建议</h2>\n<ol>\n<li>体会：在本次实验中我掌握了多种集成运算放大电路的原理和常用单元电路的设计和调试方法，且能够利用仿真实验平台分析输出电压的波形和传输特性。另外，通过这次实验，我对集成运算放大电路的理论分析更加清晰准确，进一步提高了我对电路各项参数进行理论计算的能力。</li>\n<li>本次实验难度中等偏易，且其对电路分析的能力要求不够高，可以适当提升实验难度。</li>\n</ol>\n<p><strong>敲黑板！！！</strong></p>\n<p><strong>叠加定理与戴维南定理 / RLC 串联谐振电路 / 单管交流电压放大电路 / 集成放大器的应用完整实验报告</strong><br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb3dubG9hZC5jc2RuLm5ldC9kb3dubG9hZC9LaXNzTW9vbl8vMTkzMjI4OTY=\"> https://download.csdn.net/download/KissMoon_/19322896</span></p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/20210601222244974.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpc3NNb29uXw==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n",
            "tags": [
                "电工与电子技术",
                "集成运算放大器的应用",
                "实验",
                "电工与电子技术"
            ]
        },
        {
            "id": "https://www.liangmeng.xyz/Electrotechnics/%E5%8D%95%E7%AE%A1%E4%BA%A4%E6%B5%81%E7%94%B5%E5%8E%8B%E6%94%BE%E5%A4%A7%E7%94%B5%E8%B7%AF/",
            "url": "https://www.liangmeng.xyz/Electrotechnics/%E5%8D%95%E7%AE%A1%E4%BA%A4%E6%B5%81%E7%94%B5%E5%8E%8B%E6%94%BE%E5%A4%A7%E7%94%B5%E8%B7%AF/",
            "title": "单管交流电压放大电路",
            "date_published": "2021-06-01T14:29:00.000Z",
            "content_html": "<h2 id=\"实验目的\"><a class=\"anchor\" href=\"#实验目的\">#</a> 实验目的</h2>\n<p>(1)\t掌握晶体管放大电路静态工作点的调试方法。<br>\n(2)\t了解静态工作点的改变对放大电路性能的影响。<br>\n(3)\t了解饱和失真和截止失真对放大电路输出电压波形的影响。<br>\n(4)\t进一步熟悉仿真实验平台的各种基本操作。</p>\n<h2 id=\"实验原理\"><a class=\"anchor\" href=\"#实验原理\">#</a> 实验原理</h2>\n<p>(1)\t实验原理：单管交流电压放大电路的最典型电路是共发射极分压偏置式交流电压放大电路，原理图如下。在原理图中，晶体管为非线性元件，要使放大器不产生非线性失真，就必须建立一个合适的静态工作点，使晶体管工作在放大区。若 Q 点过低（IB 小，则 IC 小，UCE 大），晶体管进入截止区，产生截止失真；Q 点过高（IB、IC 大，UCE 小），晶体管将进入饱和区，产生饱和失真。调节基极电阻 RP 即可调整静态工作点。电压放大倍数为<br>\n<img data-src=\"https://img-blog.csdnimg.cn/20210601220449802.png\" alt=\"在这里插入图片描述\"><br>\n (2)\t原理图：<br>\n<img data-src=\"https://img-blog.csdnimg.cn/2021060122051847.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpc3NNb29uXw==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"实验过程与原始数据\"><a class=\"anchor\" href=\"#实验过程与原始数据\">#</a> 实验过程与原始数据</h2>\n<ol>\n<li>调整静态工作点<br>\n (1)\t实验过程：先根据 UCE=1/2VCC 计算出电阻 RP 阻值的大致范围，然后将电阻 RP 进行赋值，运行电路图，不断对电阻 RP 的阻值进行微小调整，直至出现符合要求的静态工作点。<br>\n(2)\t原始数据：<br>\nRB1=20kΩ，RB2=20kΩ，RC=2.4kΩ，RE=1kΩ，C1=10μF，C2=10μF，CE=47μF，VCC=12V，Ui=10mV（有效值），频率 f=1kHz<br>\n<img data-src=\"https://img-blog.csdnimg.cn/20210601220558523.png\" alt=\"在这里插入图片描述\"></li>\n<li>测量电压放大倍数<br>\n (1)\t实验过程：当静态工作点测量完毕之后，保持静态工作点不变，接通信号源。在画布中插入一个电阻 RL，开始时 RL 无需接入电路，即 RL=∞，运行电路图，测量 UO 并计算 Au；然后将 RL 接入电路，其阻值分别赋为 10kΩ 和 1k 欧姆，重复上述过程。<br>\n(2)\t原始数据：<br>\nRB1=20kΩ，RB2=20kΩ，RC=2.4kΩ，RE=1kΩ，RP=44.67kΩ，C1=10μF，C2=10μF，CE=47μF，VCC=12V，Ui=10mV（幅值），频率 f=1kHz<br>\n<img data-src=\"https://img-blog.csdnimg.cn/2021060122062057.png\" alt=\"在这里插入图片描述\"></li>\n<li>观测静态工作点对输出电压波形的影响<br>\n (1)\t实验过程：<br>\n①\t最佳静态工作点的情况：调节 RP，使静态工作点在最佳位置时，观察输出电压波形；然后断开信号源，测量 UBE、UCE、VB 的电压值以及 IB、IC 的电流值。<br>\n②\t饱和失真的情况：将 RP 的阻值逐渐减小，输入信号保持不变，观察输出电压波形，使波形出现饱和失真。然后断开信号源，测量 UBE、UCE、VB 的电压值以及 IB、IC 的电流值。<br>\n③\t输入信号增大的情况：输入信号 Ui=10mV，频率 f=1kHz，调节 RP，使之达到最佳静态工作点。然后逐渐增大 Ui，观察输出电压波形，使输出电压波形同时出现饱和失真和截止失真，测量 UBE、UCE、VB 的电压值以及 IB、IC 的电流值。<br>\n(2)\t原始数据：<br>\nRB1=20kΩ，RB2=20kΩ，RC=2.4kΩ，RE=1kΩ，C1=10μF，C2=10μF，CE=47μF，VCC=12V</li>\n</ol>\n<p><img data-src=\"https://img-blog.csdnimg.cn/20210601220741694.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpc3NNb29uXw==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>\n四、实验结果及分析</p>\n<ol>\n<li>调整静态工作点<br>\n (1)\t实验结果：<br>\n<img data-src=\"https://img-blog.csdnimg.cn/20210601220810184.png\" alt=\"在这里插入图片描述\"></li>\n<li>测量电压放大倍数<br>\n (1)\t实验结果：<br>\n<img data-src=\"https://img-blog.csdnimg.cn/20210601220830736.png\" alt=\"在这里插入图片描述\"><br>\n (2)\t分析：电压放大倍数 Au 随着负载阻值 RL 的减小而减小。<br>\n<img data-src=\"https://img-blog.csdnimg.cn/20210601220842469.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpc3NNb29uXw==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n<li>观测静态工作点对输出电压波形的影响<br>\n (1)\t实验结果：<br>\n<img data-src=\"https://img-blog.csdnimg.cn/20210601220908135.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpc3NNb29uXw==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>\n (2)\t分析：输入信号合适时，如果静态工作点过高，会出现饱和失真，如果静态工作点过低，会出现截止失真；静态工作点合适时，如果输入信号的幅值过大，则会导致电路同时出现饱和失真和截止失真。</li>\n</ol>\n<h2 id=\"思考题\"><a class=\"anchor\" href=\"#思考题\">#</a> 思考题</h2>\n<p>(1)\t晶体管的静态工作点不合适。Q 点过低时会导致截止失真，Q 点过高时会导致饱和失真。可以通过调整 RB 的阻值来获得最佳静态工作点。<br>\n(2)\t增大负载 RL 的阻值。</p>\n<h2 id=\"实验体会与建议\"><a class=\"anchor\" href=\"#实验体会与建议\">#</a> 实验体会与建议</h2>\n<p>(1)\t体会：在本次实验中，我学会了如何寻找放大电路的最佳静态工作点，并测量和计算最佳静态工作点时电路的各项参数；另外，我还学会了测量并分析电压放大倍数随着负载阻值的改变时产生的变化情况；最后，我还进一步理解了产生饱和失真和截止失真的条件以及两种失真对电路输出电压波形的影响。本次实验是对放大电路的综合考量，极大地增强了我对放大电路的原理及原理图、失真产生条件、输出电压特性、电压电流放大倍数等方面的理解。<br>\n(2)\t建议：在本次实验中，一些原理和步骤较难理解，而且在操作上不易实现，希望能够在正式实验之前能够对实验过程中可能出现的重点难点问题进行相应的提示和指导。</p>\n<p><strong>敲黑板！！！</strong></p>\n<p><strong>叠加定理与戴维南定理 / RLC 串联谐振电路 / 单管交流电压放大电路 / 集成放大器的应用完整实验报告</strong><br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb3dubG9hZC5jc2RuLm5ldC9kb3dubG9hZC9LaXNzTW9vbl8vMTkzMjI4OTY=\"> https://download.csdn.net/download/KissMoon_/19322896</span></p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/20210601221106858.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpc3NNb29uXw==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n",
            "tags": [
                "电工与电子技术",
                "单管交流电压放大电路",
                "实验",
                "电工与电子技术"
            ]
        },
        {
            "id": "https://www.liangmeng.xyz/Electrotechnics/RLC%E4%B8%B2%E8%81%94%E8%B0%90%E6%8C%AF%E7%94%B5%E8%B7%AF/",
            "url": "https://www.liangmeng.xyz/Electrotechnics/RLC%E4%B8%B2%E8%81%94%E8%B0%90%E6%8C%AF%E7%94%B5%E8%B7%AF/",
            "title": "RLC串联谐振电路",
            "date_published": "2021-06-01T14:27:00.000Z",
            "content_html": "<h2 id=\"实验目的\"><a class=\"anchor\" href=\"#实验目的\">#</a> 实验目的</h2>\n<p>(1)\t通过实验进一步理解 RLC 串联电路的频率特性；<br>\n(2)\t了解串联谐振的现象，研究电路参数对串联谐振电路的影响；<br>\n(3)\t理解串联谐振电路的选频特性及应用，掌握谐振曲线的测量方法；<br>\n(4)\t学会使用仿真实验平台查看电压和电流在不同频率表下的波形，并且根据波形找到发生串联谐振时的频率。<br>\n(5)\t学会通过仿真实验平台来分析不同频率、不同阻值情况下电压和电流波形的变化情况。</p>\n<h2 id=\"实验原理\"><a class=\"anchor\" href=\"#实验原理\">#</a> 实验原理</h2>\n<p>(1) RLC 串联谐振原理：在 RLC 串联电路中，当外加角频率为 ω 的正弦电压 U 时，电路中的电流为 I，即 I=U/(R^'+j (ωL-1/ωC) )，式中，R^'=R+r，r 为线圈电阻。当 ωL=1/ωC 时，电路发生串联谐振，谐振频率为 f_0=1/(2π√LC)，\t该式即为产生串联谐振顶点条件。可见，改变 L、C 或电源频率 f 都可以实现谐振。本实验通过改变外加电压的频率来使电路达到谐振。<br>\n(2) 原理图如下：<br>\n<img data-src=\"https://img-blog.csdnimg.cn/20210601214801596.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpc3NNb29uXw==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"实验过程与原始数据\"><a class=\"anchor\" href=\"#实验过程与原始数据\">#</a> 实验过程与原始数据</h2>\n<ol>\n<li>验证串联谐振电路<br>\n (1) 实验过程：在画布中插入一个电阻 R、一个电感 L、一个电容 C、一个电源 U，再将电阻赋为 51Ω、电感赋为 10mH、电容赋为 0.022μF、电源赋为交流 250mV（幅值）。然后设置仿真频率范围，再查看电阻的电压波形和电流波形在不同频率下的变化情况，找到电压和电流同相位时的所对应的频率，即为该电路的串联谐振频率。之后将电源的频率调整为发生串联谐振时的频率，重新运行电路，测出电压和电流等相关参数，并计算品质因数。<br>\n(2) 原始数据（U = 250mV（幅值））：<br>\n<img data-src=\"https://img-blog.csdnimg.cn/20210601214949213.png\" alt=\"在这里插入图片描述\"></li>\n<li>测量串联谐振曲线<br>\n (1)\t实验过程：先将电阻的阻值赋为 100Ω，同时将电源的频率设定为某一特定值，然后运行电路图，测量电压和电流等相关参数，并计算品质因数。重复上述过程。之后再讲电阻的阻值赋为 510Ω，再重复上述过程。<br>\n(2)\t原始数据：<br>\n<img data-src=\"https://img-blog.csdnimg.cn/20210601215137285.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpc3NNb29uXw==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>\n<img data-src=\"https://img-blog.csdnimg.cn/20210601215149575.png\" alt=\"在这里插入图片描述\"></li>\n<li>用示波器观察 RLC 串联谐振电路的波形<br>\n (1)\t实验过程：将电源的频率赋为串联谐振频率，然后运行电路图，查看并记录电压和电流的波形。之后更换电源的频率，重复上述过程。<br>\n(2)\t原始数据：串联谐振频率为 10.7kHz，低频为 5kHz，高频为 20kHz。</li>\n</ol>\n<h2 id=\"实验结果及分析\"><a class=\"anchor\" href=\"#实验结果及分析\">#</a> 实验结果及分析</h2>\n<ol>\n<li>验证串联谐振电路<br>\n (1)\t实验结果：<br>\n<img data-src=\"https://img-blog.csdnimg.cn/20210601215233796.png\" alt=\"在这里插入图片描述\"><br>\n (2)\t分析：当电路发生串联谐振时，电容和电感的电压近似相等，此时电路中的电流达到最大值。</li>\n<li>测量串联谐振曲线<br>\n (1)\t实验结果：<br>\n<img data-src=\"https://img-blog.csdnimg.cn/20210601215310673.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpc3NNb29uXw==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>\n<img data-src=\"https://img-blog.csdnimg.cn/20210601215323478.png\" alt=\"在这里插入图片描述\"><br>\n (2)\t分析：<br>\n①无论是电阻的阻值如何变化，电压和电流的波形在不同频率下的变化情况相同，即串联谐振频率的大小与电阻无关，且在发生串联谐振时，电压和电流取得最大值。<br>\n<img data-src=\"https://img-blog.csdnimg.cn/20210601215344226.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpc3NNb29uXw==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>\n<img data-src=\"https://img-blog.csdnimg.cn/20210601215349545.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpc3NNb29uXw==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>\n②电路的品质因数随着电阻的增大而减小。<br>\n<img data-src=\"https://img-blog.csdnimg.cn/20210601215418257.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpc3NNb29uXw==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>\n③Q 值越大，通用串联谐振曲线的形状越尖锐，电路的选择性越好。<br>\n<img data-src=\"https://img-blog.csdnimg.cn/20210601215459941.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpc3NNb29uXw==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n<li>用示波器观察 RLC 串联谐振电路的波形<br>\n实验结果：<br>\n<img data-src=\"https://img-blog.csdnimg.cn/20210601215538222.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpc3NNb29uXw==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>\n<img data-src=\"https://img-blog.csdnimg.cn/2021060121555242.png\" alt=\"在这里插入图片描述\"></li>\n</ol>\n<h2 id=\"思考题\"><a class=\"anchor\" href=\"#思考题\">#</a> 思考题</h2>\n<p>(1)①电压和电流同相位；<br>\n②电容和电感的电压大小相等；<br>\n③电路中电压和电流达到最大值。</p>\n<h2 id=\"实验体会与建议\"><a class=\"anchor\" href=\"#实验体会与建议\">#</a> 实验体会与建议</h2>\n<p>(1)\t体会：通过这次实验，我学会了如何使用仿真实验平台来查看电压和电流在不同频率下的波形并根据波形找到串联谐振频率，还掌握了通过仿真实验平台来分析不同频率、不通过阻值情况下电压和电流的波形变化情况。而且，这次实验使我对串联谐振的原理以及发生串联谐振时电路具有的特征的理解更加深刻，并熟练掌握了判断电路发生了串联谐振的方法。在此之外，我对串联谐振电路的相关参数的理论计算也变得更加熟练。<br>\n(2)\t建议：课前尽可能明确课程目标及实验要求，以防课上花费较长时间在修改和统一实验操作上。</p>\n<p><strong>敲黑板！！！</strong></p>\n<p><strong>叠加定理与戴维南定理 / RLC 串联谐振电路 / 单管交流电压放大电路 / 集成放大器的应用完整实验报告</strong><br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb3dubG9hZC5jc2RuLm5ldC9kb3dubG9hZC9LaXNzTW9vbl8vMTkzMjI4OTY=\"> https://download.csdn.net/download/KissMoon_/19322896</span></p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/20210601215936285.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpc3NNb29uXw==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n",
            "tags": [
                "电工与电子技术",
                "RLC串联谐振电路",
                "实验",
                "电工与电子技术"
            ]
        }
    ]
}